(()=>{"use strict";function e(t){var a=d[t];if(void 0!==a)return a.exports;var r=d[t]={exports:{}};return i[t](r,r.exports,e),r.exports}var t=Math.tan,r=Math.sqrt,a=Math.pow,n=Math.max,o=Math.min,s=Math.PI,i={"../node_modules/three/build/three.module.js":(e,i,d)=>{function l(){const e=0|4294967295*Math.random(),t=0|4294967295*Math.random(),a=0|4294967295*Math.random(),r=0|4294967295*Math.random(),i=Eo[255&e]+Eo[255&e>>8]+Eo[255&e>>16]+Eo[255&e>>24]+"-"+Eo[255&t]+Eo[255&t>>8]+"-"+Eo[64|15&t>>16]+Eo[255&t>>24]+"-"+Eo[128|63&a]+Eo[255&a>>8]+"-"+Eo[255&a>>16]+Eo[255&a>>24]+Eo[255&r]+Eo[255&r>>8]+Eo[255&r>>16]+Eo[255&r>>24];return i.toLowerCase()}function p(e,t,a){return n(t,o(a,e))}function c(e,t){return(e%t+t)%t}function u(e,a,r){return(1-r)*e+r*a}function m(e){return 0==(e&e-1)&&0!==e}function f(e){return a(2,ir(or(e)/nr))}function g(e){return a(2,sr(or(e)/nr))}function h(e){for(let t=e.length-1;0<=t;--t)if(65535<e[t])return!0;return!1}function y(e,t){return new Do[e](t)}function x(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function v(e){return .04045>e?.0773993808*e:a(.9478672986*e+.0521327014,2.4)}function _(e){return .0031308>e?12.92*e:1.055*a(e,.41666)-.055}function b(e,a,r){return 0>r&&(r+=1),1<r&&(r-=1),r<1/6?e+6*(a-e)*r:r<1/2?a:r<2/3?e+6*(a-e)*(2/3-r):e}function S(e,t){return t.r=e.r,t.g=e.g,t.b=e.b,t}function M(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?Go.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}function T(e,t,a,s,d){for(let l=0,r=e.length-3;l<=r;l+=3){gs.fromArray(e,l);const i=d.x*dr(gs.x)+d.y*dr(gs.y)+d.z*dr(gs.z),r=t.dot(gs),p=a.dot(gs),c=s.dot(gs);if(n(-n(r,p,c),o(r,p,c))>i)return!1}return!0}function E(e,t,a,r,i,n,o,s){let d;if(d=t.side===Sr?r.intersectTriangle(o,n,i,!0,s):r.intersectTriangle(i,n,o,t.side!==Mr,s),null===d)return null;Qd.copy(s),Qd.applyMatrix4(e.matrixWorld);const l=a.ray.origin.distanceTo(Qd);return l<a.near||l>a.far?null:{distance:l,point:Qd.clone(),object:e}}function w(e,t,r,i,n,o,s,d,l,p,u,m){Od.fromBufferAttribute(n,p),Fd.fromBufferAttribute(n,u),Gd.fromBufferAttribute(n,m);const f=e.morphTargetInfluences;if(o&&f){jd.set(0,0,0),qd.set(0,0,0),Xd.set(0,0,0);for(let e=0,t=o.length;e<t;e++){const t=f[e],a=o[e];0===t||(Vd.fromBufferAttribute(a,p),kd.fromBufferAttribute(a,u),Wd.fromBufferAttribute(a,m),s?(jd.addScaledVector(Vd,t),qd.addScaledVector(kd,t),Xd.addScaledVector(Wd,t)):(jd.addScaledVector(Vd.sub(Od),t),qd.addScaledVector(kd.sub(Fd),t),Xd.addScaledVector(Wd.sub(Gd),t)))}Od.add(jd),Fd.add(qd),Gd.add(Xd)}e.isSkinnedMesh&&(e.boneTransform(p,Od),e.boneTransform(u,Fd),e.boneTransform(m,Gd));const g=E(e,t,r,i,Od,Fd,Gd,Jd);if(g){d&&(Yd.fromBufferAttribute(d,p),Zd.fromBufferAttribute(d,u),Kd.fromBufferAttribute(d,m),g.uv=cd.getUV(Jd,Od,Fd,Gd,Yd,Zd,Kd,new Co)),l&&(Yd.fromBufferAttribute(l,p),Zd.fromBufferAttribute(l,u),Kd.fromBufferAttribute(l,m),g.uv2=cd.getUV(Jd,Od,Fd,Gd,Yd,Zd,Kd,new Co));const e={a:p,b:u,c:m,normal:new $o,materialIndex:0};cd.getNormal(Od,Fd,Gd,e.normal),g.face=e}return g}function A(e){const t={};for(const a in e)for(const r in t[a]={},e[a]){const i=e[a][r];t[a][r]=i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.clone():Array.isArray(i)?i.slice():i}return t}function R(e){const t={};for(let a=0;a<e.length;a++){const r=A(e[a]);for(const e in r)t[e]=r[e]}return t}function L(){function e(a,n){r(a,n),i=t.requestAnimationFrame(e)}let t=null,a=!1,r=null,i=null;return{start:function(){!0==a||null===r||(i=t.requestAnimationFrame(e),a=!0)},stop:function(){t.cancelAnimationFrame(i),a=!1},setAnimationLoop:function(e){r=e},setContext:function(e){t=e}}}function C(e,t){function a(t,a){const r=t.array,n=t.usage,o=e.createBuffer();e.bindBuffer(a,o),e.bufferData(a,r,n),t.onUploadCallback();let s;if(r instanceof Float32Array)s=5126;else if(r instanceof Uint16Array){if(!t.isFloat16BufferAttribute)s=5123;else if(i)s=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");}else if(r instanceof Int16Array)s=5122;else if(r instanceof Uint32Array)s=5125;else if(r instanceof Int32Array)s=5124;else if(r instanceof Int8Array)s=5120;else if(r instanceof Uint8Array)s=5121;else if(r instanceof Uint8ClampedArray)s=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+r);return{buffer:o,type:s,bytesPerElement:r.BYTES_PER_ELEMENT,version:t.version}}function r(t,a,r){const n=a.array,o=a.updateRange;e.bindBuffer(r,t),-1===o.count?e.bufferSubData(r,0,n):(i?e.bufferSubData(r,o.offset*n.BYTES_PER_ELEMENT,n,o.offset,o.count):e.bufferSubData(r,o.offset*n.BYTES_PER_ELEMENT,n.subarray(o.offset,o.offset+o.count)),o.count=-1)}const i=t.isWebGL2,n=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),n.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const a=n.get(t);a&&(e.deleteBuffer(a.buffer),n.delete(t))},update:function(e,t){if(e.isGLBufferAttribute){const t=n.get(e);return void((!t||t.version<e.version)&&n.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const i=n.get(e);void 0===i?n.set(e,a(e,t)):i.version<e.version&&(r(i.buffer,e,t),i.version=e.version)}}}function P(e,t,a,r,i,n){function o(a,i){let n=!1,o=!0===i.isScene?i.background:null;o&&o.isTexture&&(o=t.get(o));const g=e.xr,h=g.getSession&&g.getSession();h&&"additive"===h.environmentBlendMode&&(o=null),null===o?s(d,l):o&&o.isColor&&(s(o,1),n=!0),(e.autoClear||n)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),o&&(o.isCubeTexture||o.mapping===hi)?(void 0===f&&(f=new $d(new el(1,1,1),new al({name:"BackgroundCubeMaterial",uniforms:A(_l.cube.uniforms),vertexShader:_l.cube.vertexShader,fragmentShader:_l.cube.fragmentShader,side:Sr,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),f.geometry.deleteAttribute("uv"),f.onBeforeRender=function(e,t,a){this.matrixWorld.copyPosition(a.matrixWorld)},Object.defineProperty(f.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(f)),f.material.uniforms.envMap.value=o,f.material.uniforms.flipEnvMap.value=o.isCubeTexture&&!1===o.isRenderTargetTexture?-1:1,(p!==o||c!==o.version||u!==e.toneMapping)&&(f.material.needsUpdate=!0,p=o,c=o.version,u=e.toneMapping),f.layers.enableAll(),a.unshift(f,f.geometry,f.material,0,0,null)):o&&o.isTexture&&(void 0===m&&(m=new $d(new yl(2,2),new al({name:"BackgroundMaterial",uniforms:A(_l.background.uniforms),vertexShader:_l.background.vertexShader,fragmentShader:_l.background.fragmentShader,side:br,depthTest:!1,depthWrite:!1,fog:!1})),m.geometry.deleteAttribute("normal"),Object.defineProperty(m.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(m)),m.material.uniforms.t2D.value=o,!0===o.matrixAutoUpdate&&o.updateMatrix(),m.material.uniforms.uvTransform.value.copy(o.matrix),(p!==o||c!==o.version||u!==e.toneMapping)&&(m.material.needsUpdate=!0,p=o,c=o.version,u=e.toneMapping),m.layers.enableAll(),a.unshift(m,m.geometry,m.material,0,0,null))}function s(e,t){a.buffers.color.setClear(e.r,e.g,e.b,t,n)}const d=new Oo(0);let l=!0===i?0:1,p=null,c=0,u=null,m,f;return{getClearColor:function(){return d},setClearColor:function(e,t=1){d.set(e),l=t,s(d,l)},getClearAlpha:function(){return l},setClearAlpha:function(e){l=e,s(d,l)},render:o}}function D(e,t,a,r){function i(t,r,i,n,s){let l=!1;if(S){const e=d(n,i,r);E!==e&&(E=e,o(E.object)),l=p(t,n,i,s),l&&c(t,n,i,s)}else{const e=!0===r.wireframe;(E.geometry!==n.id||E.program!==i.id||E.wireframe!==e)&&(E.geometry=n.id,E.program=i.id,E.wireframe=e,l=!0)}null!==s&&a.update(s,34963),(l||w)&&(w=!1,y(t,r,i,n),null!==s&&e.bindBuffer(34963,a.get(s).buffer))}function n(){return r.isWebGL2?e.createVertexArray():b.createVertexArrayOES()}function o(t){return r.isWebGL2?e.bindVertexArray(t):b.bindVertexArrayOES(t)}function s(t){return r.isWebGL2?e.deleteVertexArray(t):b.deleteVertexArrayOES(t)}function d(e,t,a){const r=!0===a.wireframe;let i=M[e.id];void 0===i&&(i={},M[e.id]=i);let o=i[t.id];void 0===o&&(o={},i[t.id]=o);let s=o[r];return void 0===s&&(s=l(n()),o[r]=s),s}function l(e){const t=[],a=[],r=[];for(let n=0;n<_;n++)t[n]=0,a[n]=0,r[n]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:a,attributeDivisors:r,object:e,attributes:{},index:null}}function p(e,t,a,r){const i=E.attributes,n=t.attributes;let o=0;const s=a.getAttributes();for(const d in s){const t=s[d];if(0<=t.location){const t=i[d];let a=n[d];if(void 0===a&&("instanceMatrix"==d&&e.instanceMatrix&&(a=e.instanceMatrix),"instanceColor"==d&&e.instanceColor&&(a=e.instanceColor)),void 0===t)return!0;if(t.attribute!==a)return!0;if(a&&t.data!==a.data)return!0;o++}}return E.attributesNum!==o||E.index!==r}function c(e,t,a,r){const i={},n=t.attributes;let o=0;const s=a.getAttributes();for(const d in s){const t=s[d];if(0<=t.location){let t=n[d];void 0===t&&("instanceMatrix"==d&&e.instanceMatrix&&(t=e.instanceMatrix),"instanceColor"==d&&e.instanceColor&&(t=e.instanceColor));const a={};a.attribute=t,t&&t.data&&(a.data=t.data),i[d]=a,o++}}E.attributes=i,E.attributesNum=o,E.index=r}function u(){const e=E.newAttributes;for(let t=0,a=e.length;t<a;t++)e[t]=0}function m(e){f(e,0)}function f(a,i){const n=E.newAttributes,o=E.enabledAttributes,s=E.attributeDivisors;if(n[a]=1,0===o[a]&&(e.enableVertexAttribArray(a),o[a]=1),s[a]!==i){const n=r.isWebGL2?e:t.get("ANGLE_instanced_arrays");n[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](a,i),s[a]=i}}function g(){const t=E.newAttributes,a=E.enabledAttributes;for(let r=0,i=a.length;r<i;r++)a[r]!==t[r]&&(e.disableVertexAttribArray(r),a[r]=0)}function h(t,a,i,n,o,s){!0===r.isWebGL2&&(5124===i||5125===i)?e.vertexAttribIPointer(t,a,i,o,s):e.vertexAttribPointer(t,a,i,n,o,s)}function y(i,n,o,s){if(!(!1===r.isWebGL2&&(i.isInstancedMesh||s.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))){u();const t=s.attributes,r=o.getAttributes(),d=n.defaultAttributeValues;for(const n in r){const o=r[n];if(0<=o.location){let r=t[n];if(void 0===r&&("instanceMatrix"==n&&i.instanceMatrix&&(r=i.instanceMatrix),"instanceColor"==n&&i.instanceColor&&(r=i.instanceColor)),void 0!==r){const t=r.normalized,n=r.itemSize,d=a.get(r);if(void 0===d)continue;const l=d.buffer,p=d.type,c=d.bytesPerElement;if(r.isInterleavedBufferAttribute){const a=r.data,d=a.stride,u=r.offset;if(a.isInstancedInterleavedBuffer){for(let e=0;e<o.locationSize;e++)f(o.location+e,a.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=a.meshPerAttribute*a.count)}else for(let e=0;e<o.locationSize;e++)m(o.location+e);e.bindBuffer(34962,l);for(let e=0;e<o.locationSize;e++)h(o.location+e,n/o.locationSize,p,t,d*c,(u+n/o.locationSize*e)*c)}else{if(r.isInstancedBufferAttribute){for(let e=0;e<o.locationSize;e++)f(o.location+e,r.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=r.meshPerAttribute*r.count)}else for(let e=0;e<o.locationSize;e++)m(o.location+e);e.bindBuffer(34962,l);for(let e=0;e<o.locationSize;e++)h(o.location+e,n/o.locationSize,p,t,n*c,n/o.locationSize*e*c)}}else if(void 0!==d){const t=d[n];if(void 0!==t)switch(t.length){case 2:e.vertexAttrib2fv(o.location,t);break;case 3:e.vertexAttrib3fv(o.location,t);break;case 4:e.vertexAttrib4fv(o.location,t);break;default:e.vertexAttrib1fv(o.location,t);}}}}g()}}function x(){v(),w=!0,E===T||(E=T,o(E.object))}function v(){T.geometry=null,T.program=null,T.wireframe=!1}const _=e.getParameter(34921),b=r.isWebGL2?null:t.get("OES_vertex_array_object"),S=r.isWebGL2||null!==b,M={},T=l(null);let E=T,w=!1;return{setup:i,reset:x,resetDefaultState:v,dispose:function(){for(const e in x(),M){const t=M[e];for(const e in t){const a=t[e];for(const e in a)s(a[e].object),delete a[e];delete t[e]}delete M[e]}},releaseStatesOfGeometry:function(e){if(void 0!==M[e.id]){const t=M[e.id];for(const e in t){const a=t[e];for(const e in a)s(a[e].object),delete a[e];delete t[e]}delete M[e.id]}},releaseStatesOfProgram:function(e){for(const t in M){const a=M[t];if(void 0===a[e.id])continue;const r=a[e.id];for(const e in r)s(r[e].object),delete r[e];delete a[e.id]}},initAttributes:u,enableAttribute:m,disableUnusedAttributes:g}}function I(e,t,a,r){function i(t,r){e.drawArrays(s,t,r),a.update(r,s,1)}function n(r,i,n){if(0===n)return;let d,l;if(o)d=e,l="drawArraysInstanced";else if(d=t.get("ANGLE_instanced_arrays"),l="drawArraysInstancedANGLE",null===d)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");d[l](s,r,i,n),a.update(i,s,n)}const o=r.isWebGL2;let s;this.setMode=function(e){s=e},this.render=i,this.renderInstances=n}function z(e,t,a){function r(){if(void 0!==n)return n;if(!0===t.has("EXT_texture_filter_anisotropic")){const a=t.get("EXT_texture_filter_anisotropic");n=e.getParameter(a.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function i(t){if("highp"===t){if(0<e.getShaderPrecisionFormat(35633,36338).precision&&0<e.getShaderPrecisionFormat(35632,36338).precision)return"highp";t="mediump"}return"mediump"===t&&0<e.getShaderPrecisionFormat(35633,36337).precision&&0<e.getShaderPrecisionFormat(35632,36337).precision?"mediump":"lowp"}let n;const o="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext;let s=void 0===a.precision?"highp":a.precision;const d=i(s);d!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",d,"instead."),s=d);const l=o||t.has("WEBGL_draw_buffers"),p=!0===a.logarithmicDepthBuffer,c=e.getParameter(34930),u=e.getParameter(35660),m=e.getParameter(3379),f=e.getParameter(34076),g=e.getParameter(34921),h=e.getParameter(36347),y=e.getParameter(36348),x=e.getParameter(36349),v=0<u,_=o||t.has("OES_texture_float"),b=o?e.getParameter(36183):0;return{isWebGL2:o,drawBuffers:l,getMaxAnisotropy:r,getMaxPrecision:i,precision:s,logarithmicDepthBuffer:p,maxTextures:c,maxVertexTextures:u,maxTextureSize:m,maxCubemapSize:f,maxAttributes:g,maxVertexUniforms:h,maxVaryings:y,maxFragmentUniforms:x,vertexTextures:v,floatFragmentTextures:_,floatVertexTextures:v&&_,maxSamples:b}}function B(e){function t(){p.value!==n&&(p.value=n,p.needsUpdate=0<i),r.numPlanes=i,r.numIntersection=0}function a(e,t,a,i){const n=null===e?0:e.length;let o=null;if(0!==n){if(o=p.value,!0!==i||null===o){const r=a+4*n,s=t.matrixWorldInverse;l.getNormalMatrix(s),(null===o||o.length<r)&&(o=new Float32Array(r));for(let t=0,r=a;t!==n;++t,r+=4)d.copy(e[t]).applyMatrix4(s,l),d.normal.toArray(o,r),o[r+3]=d.constant}p.value=o,p.needsUpdate=!0}return r.numPlanes=n,r.numIntersection=0,o}const r=this;let n=null,i=0,o=!1,s=!1;const d=new ml,l=new Po,p={value:null,needsUpdate:!1};this.uniform=p,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,r){const s=0!==e.length||t||0!==i||o;return o=t,n=a(e,r,0),i=e.length,s},this.beginShadows=function(){s=!0,a(null)},this.endShadows=function(){s=!1,t()},this.setState=function(r,d,l){const c=r.clippingPlanes,u=r.clipIntersection,m=r.clipShadows,f=e.get(r);if(!o||null===c||0===c.length||s&&!m)s?a(null):t();else{const e=s?0:i,t=4*e;let r=f.clippingState||null;p.value=r,r=a(c,d,t,l);for(let e=0;e!==t;++e)r[e]=n[e];f.clippingState=r,this.numIntersection=u?this.numPlanes:0,this.numPlanes+=e}}}function N(e){function t(e,t){return t===fi?e.mapping=ui:t===gi&&(e.mapping=mi),e}function a(a){if(a&&a.isTexture&&!1===a.isRenderTargetTexture){const n=a.mapping;if(n===fi||n===gi)if(i.has(a)){const e=i.get(a).texture;return t(e,a.mapping)}else{const n=a.image;if(n&&0<n.height){const o=new ll(n.height/2);return o.fromEquirectangularTexture(e,a),i.set(a,o),a.addEventListener("dispose",r),t(o.texture,a.mapping)}return null}}return a}function r(e){const t=e.target;t.removeEventListener("dispose",r);const a=i.get(t);void 0!==a&&(i.delete(t),a.dispose())}let i=new WeakMap;return{get:a,dispose:function(){i=new WeakMap}}}function U(e){const t=[],r=[],n=[];let o=e;const s=e-Sl+1+Ml.length;for(let d=0;d<s;d++){const i=a(2,o);r.push(i);let s=1/i;d>e-Sl?s=Ml[d-e+Sl-1]:0===d&&(s=0),n.push(s);const l=1/(i-2),p=-l,c=1+l,u=[p,p,c,p,c,c,p,p,c,c,p,c],m=6,f=6,g=3,h=2,v=1,_=new Float32Array(g*f*m),b=new Float32Array(h*f*m),S=new Float32Array(v*f*m);for(let e=0;e<m;e++){const t=2*(e%3)/3-1,a=2<e?0:-1;_.set([t,a,0,t+2/3,a,0,t+2/3,a+1,0,t,a,0,t+2/3,a+1,0,t,a+1,0],g*f*e),b.set(u,h*f*e);const r=[e,e,e,e,e,e];S.set(r,v*f*e)}const y=new Bd;y.setAttribute("position",new yd(_,g)),y.setAttribute("uv",new yd(b,h)),y.setAttribute("faceIndex",new yd(S,v)),t.push(y),o>Sl&&o--}return{lodPlanes:t,sizeLods:r,sigmas:n}}function H(e,t,a){const r=new qo(e,t,a);return r.texture.mapping=hi,r.texture.name="PMREM.cubeUv",r.scissorTest=!0,r}function O(e,t,a,r,i){e.viewport.set(t,a,r,i),e.scissor.set(t,a,r,i)}function F(e,t,a){const r=new Float32Array(Tl),i=new $o(0,1,0),n=new al({name:"SphericalGaussianBlur",defines:{n:Tl,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/a,CUBEUV_MAX_MIP:`${e}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:r},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:k(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:wr,depthTest:!1,depthWrite:!1});return n}function G(){return new al({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:k(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:wr,depthTest:!1,depthWrite:!1})}function V(){return new al({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:k(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:wr,depthTest:!1,depthWrite:!1})}function k(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function W(e){function t(t){if(t&&t.isTexture){const i=t.mapping,s=i===fi||i===gi,d=i===ui||i===mi;if(s||d){if(t.isRenderTargetTexture&&!0===t.needsPMREMUpdate){t.needsPMREMUpdate=!1;let a=n.get(t);return null===o&&(o=new Pl(e)),a=s?o.fromEquirectangular(t,a):o.fromCubemap(t,a),n.set(t,a),a.texture}if(n.has(t))return n.get(t).texture;else{const i=t.image;if(s&&i&&0<i.height||d&&i&&a(i)){null===o&&(o=new Pl(e));const a=s?o.fromEquirectangular(t):o.fromCubemap(t);return n.set(t,a),t.addEventListener("dispose",r),a.texture}return null}}}return t}function a(e){let t=0;const a=6;for(let r=0;r<a;r++)void 0!==e[r]&&t++;return t==a}function r(e){const t=e.target;t.removeEventListener("dispose",r);const a=n.get(t);void 0!==a&&(n.delete(t),a.dispose())}function i(){n=new WeakMap,null!==o&&(o.dispose(),o=null)}let n=new WeakMap,o=null;return{get:t,dispose:i}}function j(e){function t(t){if(void 0!==a[t])return a[t];let r;return r="WEBGL_depth_texture"===t?e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture"):"EXT_texture_filter_anisotropic"===t?e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic"):"WEBGL_compressed_texture_s3tc"===t?e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"):"WEBGL_compressed_texture_pvrtc"===t?e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc"):e.getExtension(t),a[t]=r,r}const a={};return{has:function(e){return null!==t(e)},init:function(e){e.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(e){const a=t(e);return null===a&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),a}}}function q(e,t,a,r){function i(e){const n=e.target;for(const a in null!==n.index&&t.remove(n.index),n.attributes)t.remove(n.attributes[a]);n.removeEventListener("dispose",i),delete o[n.id];const d=s.get(n);d&&(t.remove(d),s.delete(n)),r.releaseStatesOfGeometry(n),!0===n.isInstancedBufferGeometry&&delete n._maxInstanceCount,a.memory.geometries--}function n(e){const r=[],a=e.index,i=e.attributes.position;let n=0;if(null!==a){const e=a.array;n=a.version;for(let t=0,a=e.length;t<a;t+=3){const i=e[t+0],a=e[t+1],n=e[t+2];r.push(i,a,a,n,n,i)}}else{const e=i.array;n=i.version;for(let t=0,a=e.length/3-1;t<a;t+=3){const e=t+0,a=t+1,i=t+2;r.push(e,a,a,i,i,e)}}const o=new(h(r)?Td:Sd)(r,1);o.version=n;const d=s.get(e);d&&t.remove(d),s.set(e,o)}const o={},s=new WeakMap;return{get:function(e,t){return!0===o[t.id]?t:(t.addEventListener("dispose",i),o[t.id]=!0,a.memory.geometries++,t)},update:function(e){const a=e.attributes;for(const r in a)t.update(a[r],34962);const r=e.morphAttributes;for(const a in r){const e=r[a];for(let a=0,r=e.length;a<r;a++)t.update(e[a],34962)}},getWireframeAttribute:function(e){const t=s.get(e);if(t){const a=e.index;null!==a&&t.version<a.version&&n(e)}else n(e);return s.get(e)}}}function X(e,t,a,r){function i(t,r){e.drawElements(s,r,d,t*l),a.update(r,s,1)}function n(r,i,n){if(0===n)return;let p,c;if(o)p=e,c="drawElementsInstanced";else if(p=t.get("ANGLE_instanced_arrays"),c="drawElementsInstancedANGLE",null===p)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");p[c](s,i,d,r*l,n),a.update(i,s,n)}const o=r.isWebGL2;let s,d,l;this.setMode=function(e){s=e},this.setIndex=function(e){d=e.type,l=e.bytesPerElement},this.render=i,this.renderInstances=n}function Y(){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,a,r){switch(e.calls++,a){case 4:e.triangles+=r*(t/3);break;case 1:e.lines+=r*(t/2);break;case 3:e.lines+=r*(t-1);break;case 2:e.lines+=r*t;break;case 0:e.points+=r*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);}}}}function Z(e,t){return e[0]-t[0]}function K(e,t){return dr(t[1])-dr(e[1])}function J(e,t){let a=1;const r=t.isInterleavedBufferAttribute?t.data.array:t.array;r instanceof Int8Array?a=127:r instanceof Int16Array?a=32767:r instanceof Int32Array?a=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",r),e.divideScalar(a)}function Q(e,t,a){const r={},n=new Float32Array(8),i=new WeakMap,o=new jo,s=[];for(let r=0;8>r;r++)s[r]=[r,0];return{update:function(d,l,p,c){var u=Number.MAX_SAFE_INTEGER;const m=d.morphTargetInfluences;if(!0===t.isWebGL2){const r=l.morphAttributes.position||l.morphAttributes.normal||l.morphAttributes.color,n=void 0===r?0:r.length;let s=i.get(l);if(void 0===s||s.count!==n){function e(){y.dispose(),i.delete(l),l.removeEventListener("dispose",e)}void 0!=s&&s.texture.dispose();const a=void 0!==l.morphAttributes.position,r=void 0!==l.morphAttributes.normal,d=void 0!==l.morphAttributes.color,p=l.morphAttributes.position||[],c=l.morphAttributes.normal||[],u=l.morphAttributes.color||[];let m=0;!0==a&&(m=1),!0==r&&(m=2),!0==d&&(m=3);let f=l.attributes.position.count*m,g=1;f>t.maxTextureSize&&(g=ir(f/t.maxTextureSize),f=t.maxTextureSize);const h=new Float32Array(4*(f*g)*n),y=new Xo(h,f,g,n);y.type=Ni,y.needsUpdate=!0;const x=4*m;for(let e=0;e<n;e++){const t=p[e],i=c[e],n=u[e],s=4*(f*g)*e;for(let e=0;e<t.count;e++){const l=e*x;!0==a&&(o.fromBufferAttribute(t,e),!0===t.normalized&&J(o,t),h[s+l+0]=o.x,h[s+l+1]=o.y,h[s+l+2]=o.z,h[s+l+3]=0),!0==r&&(o.fromBufferAttribute(i,e),!0===i.normalized&&J(o,i),h[s+l+4]=o.x,h[s+l+5]=o.y,h[s+l+6]=o.z,h[s+l+7]=0),!0==d&&(o.fromBufferAttribute(n,e),!0===n.normalized&&J(o,n),h[s+l+8]=o.x,h[s+l+9]=o.y,h[s+l+10]=o.z,h[s+l+11]=4===n.itemSize?o.w:1)}}s={count:n,texture:y,size:new Co(f,g)},i.set(l,s),l.addEventListener("dispose",e)}let d=0;for(let e=0;e<m.length;e++)d+=m[e];const p=l.morphTargetsRelative?1:1-d;c.getUniforms().setValue(e,"morphTargetBaseInfluence",p),c.getUniforms().setValue(e,"morphTargetInfluences",m),c.getUniforms().setValue(e,"morphTargetsTexture",s.texture,a),c.getUniforms().setValue(e,"morphTargetsTextureSize",s.size)}else{const t=void 0===m?0:m.length;let a=r[l.id];if(void 0===a||a.length!==t){a=[];for(let e=0;e<t;e++)a[e]=[e,0];r[l.id]=a}for(let e=0;e<t;e++){const t=a[e];t[0]=e,t[1]=m[e]}a.sort(K);for(let e=0;8>e;e++)e<t&&a[e][1]?(s[e][0]=a[e][0],s[e][1]=a[e][1]):(s[e][0]=u,s[e][1]=0);s.sort(Z);const o=l.morphAttributes.position,d=l.morphAttributes.normal;let p=0;for(let e=0;8>e;e++){const t=s[e],a=t[0],r=t[1];a!==u&&r?(o&&l.getAttribute("morphTarget"+e)!==o[a]&&l.setAttribute("morphTarget"+e,o[a]),d&&l.getAttribute("morphNormal"+e)!==d[a]&&l.setAttribute("morphNormal"+e,d[a]),n[e]=r,p+=r):(o&&!0===l.hasAttribute("morphTarget"+e)&&l.deleteAttribute("morphTarget"+e),d&&!0===l.hasAttribute("morphNormal"+e)&&l.deleteAttribute("morphNormal"+e),n[e]=0)}const i=l.morphTargetsRelative?1:1-p;c.getUniforms().setValue(e,"morphTargetBaseInfluence",i),c.getUniforms().setValue(e,"morphTargetInfluences",n)}}}}function $(e,t,a,r){function i(e){const i=r.render.frame,s=e.geometry,d=t.get(e,s);return o.get(d)!==i&&(t.update(d),o.set(d,i)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",n)&&e.addEventListener("dispose",n),a.update(e.instanceMatrix,34962),null!==e.instanceColor&&a.update(e.instanceColor,34962)),d}function n(e){const t=e.target;t.removeEventListener("dispose",n),a.remove(t.instanceMatrix),null!==t.instanceColor&&a.remove(t.instanceColor)}let o=new WeakMap;return{update:i,dispose:function(){o=new WeakMap}}}function ee(e,t,a){const i=e[0];if(0>=i||0<i)return e;const o=t*a;let n=Nl[o];if(void 0===n&&(n=new Float32Array(o),Nl[o]=n),0!==t){i.toArray(n,0);for(let r=1,i=0;r!==t;++r)i+=a,e[r].toArray(n,i)}return n}function te(e,t){if(e.length!==t.length)return!1;for(let a=0,r=e.length;a<r;a++)if(e[a]!==t[a])return!1;return!0}function ae(e,t){for(let a=0,r=t.length;a<r;a++)e[a]=t[a]}function re(e,t){let a=Ul[t];void 0===a&&(a=new Int32Array(t),Ul[t]=a);for(let r=0;r!==t;++r)a[r]=e.allocateTextureUnit();return a}function ie(e,t){const a=this.cache;a[0]===t||(e.uniform1f(this.addr,t),a[0]=t)}function ne(e,t){const a=this.cache;if(void 0!==t.x)(a[0]!==t.x||a[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),a[0]=t.x,a[1]=t.y);else{if(te(a,t))return;e.uniform2fv(this.addr,t),ae(a,t)}}function oe(e,t){const a=this.cache;if(void 0!==t.x)(a[0]!==t.x||a[1]!==t.y||a[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),a[0]=t.x,a[1]=t.y,a[2]=t.z);else if(void 0!==t.r)(a[0]!==t.r||a[1]!==t.g||a[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),a[0]=t.r,a[1]=t.g,a[2]=t.b);else{if(te(a,t))return;e.uniform3fv(this.addr,t),ae(a,t)}}function se(e,t){const a=this.cache;if(void 0!==t.x)(a[0]!==t.x||a[1]!==t.y||a[2]!==t.z||a[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),a[0]=t.x,a[1]=t.y,a[2]=t.z,a[3]=t.w);else{if(te(a,t))return;e.uniform4fv(this.addr,t),ae(a,t)}}function de(e,t){const a=this.cache,r=t.elements;if(void 0===r){if(te(a,t))return;e.uniformMatrix2fv(this.addr,!1,t),ae(a,t)}else{if(te(a,r))return;Fl.set(r),e.uniformMatrix2fv(this.addr,!1,Fl),ae(a,r)}}function le(e,t){const a=this.cache,r=t.elements;if(void 0===r){if(te(a,t))return;e.uniformMatrix3fv(this.addr,!1,t),ae(a,t)}else{if(te(a,r))return;Ol.set(r),e.uniformMatrix3fv(this.addr,!1,Ol),ae(a,r)}}function pe(e,t){const a=this.cache,r=t.elements;if(void 0===r){if(te(a,t))return;e.uniformMatrix4fv(this.addr,!1,t),ae(a,t)}else{if(te(a,r))return;Hl.set(r),e.uniformMatrix4fv(this.addr,!1,Hl),ae(a,r)}}function ce(e,t){const a=this.cache;a[0]===t||(e.uniform1i(this.addr,t),a[0]=t)}function ue(e,t){const a=this.cache;te(a,t)||(e.uniform2iv(this.addr,t),ae(a,t))}function me(e,t){const a=this.cache;te(a,t)||(e.uniform3iv(this.addr,t),ae(a,t))}function fe(e,t){const a=this.cache;te(a,t)||(e.uniform4iv(this.addr,t),ae(a,t))}function ge(e,t){const a=this.cache;a[0]===t||(e.uniform1ui(this.addr,t),a[0]=t)}function he(e,t){const a=this.cache;te(a,t)||(e.uniform2uiv(this.addr,t),ae(a,t))}function ye(e,t){const a=this.cache;te(a,t)||(e.uniform3uiv(this.addr,t),ae(a,t))}function xe(e,t){const a=this.cache;te(a,t)||(e.uniform4uiv(this.addr,t),ae(a,t))}function ve(e,t,a){const r=this.cache,i=a.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),a.setTexture2D(t||Dl,i)}function _e(e,t,a){const r=this.cache,i=a.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),a.setTexture3D(t||zl,i)}function be(e,t,a){const r=this.cache,i=a.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),a.setTextureCube(t||Bl,i)}function Se(e,t,a){const r=this.cache,i=a.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),a.setTexture2DArray(t||Il,i)}function Me(e){return 5126===e?ie:35664===e?ne:35665===e?oe:35666===e?se:35674===e?de:35675===e?le:35676===e?pe:5124===e||35670===e?ce:35667===e||35671===e?ue:35668===e||35672===e?me:35669===e||35673===e?fe:5125===e?ge:36294===e?he:36295===e?ye:36296===e?xe:35678===e||36198===e||36298===e||36306===e||35682===e?ve:35679===e||36299===e||36307===e?_e:35680===e||36300===e||36308===e||36293===e?be:36289===e||36303===e||36311===e||36292===e?Se:void 0}function Te(e,t){e.uniform1fv(this.addr,t)}function Ee(e,t){const a=ee(t,this.size,2);e.uniform2fv(this.addr,a)}function we(e,t){const a=ee(t,this.size,3);e.uniform3fv(this.addr,a)}function Ae(e,t){const a=ee(t,this.size,4);e.uniform4fv(this.addr,a)}function Re(e,t){const a=ee(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,a)}function Le(e,t){const a=ee(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,a)}function Ce(e,t){const a=ee(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,a)}function Pe(e,t){e.uniform1iv(this.addr,t)}function De(e,t){e.uniform2iv(this.addr,t)}function Ie(e,t){e.uniform3iv(this.addr,t)}function ze(e,t){e.uniform4iv(this.addr,t)}function Be(e,t){e.uniform1uiv(this.addr,t)}function Ne(e,t){e.uniform2uiv(this.addr,t)}function Ue(e,t){e.uniform3uiv(this.addr,t)}function He(e,t){e.uniform4uiv(this.addr,t)}function Oe(e,t,a){const r=t.length,n=re(a,r);e.uniform1iv(this.addr,n);for(let o=0;o!==r;++o)a.setTexture2D(t[o]||Dl,n[o])}function Fe(e,t,a){const r=t.length,n=re(a,r);e.uniform1iv(this.addr,n);for(let o=0;o!==r;++o)a.setTexture3D(t[o]||zl,n[o])}function Ge(e,t,a){const r=t.length,n=re(a,r);e.uniform1iv(this.addr,n);for(let o=0;o!==r;++o)a.setTextureCube(t[o]||Bl,n[o])}function Ve(e,t,a){const r=t.length,n=re(a,r);e.uniform1iv(this.addr,n);for(let o=0;o!==r;++o)a.setTexture2DArray(t[o]||Il,n[o])}function ke(e){return 5126===e?Te:35664===e?Ee:35665===e?we:35666===e?Ae:35674===e?Re:35675===e?Le:35676===e?Ce:5124===e||35670===e?Pe:35667===e||35671===e?De:35668===e||35672===e?Ie:35669===e||35673===e?ze:5125===e?Be:36294===e?Ne:36295===e?Ue:36296===e?He:35678===e||36198===e||36298===e||36306===e||35682===e?Oe:35679===e||36299===e||36307===e?Fe:35680===e||36300===e||36308===e||36293===e?Ge:36289===e||36303===e||36311===e||36292===e?Ve:void 0}function We(e,t,a){this.id=e,this.addr=a,this.cache=[],this.setValue=Me(t.type)}function je(e,t,a){this.id=e,this.addr=a,this.cache=[],this.size=t.size,this.setValue=ke(t.type)}function qe(e){this.id=e,this.seq=[],this.map={}}function Xe(e,t){e.seq.push(t),e.map[t.id]=t}function Ye(e,t,a){const r=e.name,i=r.length;for(Gl.lastIndex=0;;){const n=Gl.exec(r),o=Gl.lastIndex;let s=n[1];const d="]"===n[2],l=n[3];if(d&&(s|=0),void 0===l||"["===l&&o+2===i){Xe(a,void 0===l?new We(s,e,t):new je(s,e,t));break}else{const e=a.map;let t=e[s];void 0===t&&(t=new qe(s),Xe(a,t)),a=t}}}function Ze(e,t){this.seq=[],this.map={};const a=e.getProgramParameter(t,35718);for(let r=0;r<a;++r){const a=e.getActiveUniform(t,r),i=e.getUniformLocation(t,a.name);Ye(a,i,this)}}function Ke(e,t,a){const r=e.createShader(t);return e.shaderSource(r,a),e.compileShader(r),r}function Je(e,t){const a=e.split("\n"),r=[],s=n(t-6,0),d=o(t+6,a.length);for(let n=s;n<d;n++)r.push(n+1+": "+a[n]);return r.join("\n")}function Qe(e){return e===Fn?["Linear","( value )"]:e===Gn?["sRGB","( value )"]:(console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"])}function $e(e,t,a){const r=e.getShaderParameter(t,35713),i=e.getShaderInfoLog(t).trim();if(r&&""===i)return"";const n=/ERROR: 0:(\d+)/.exec(i);if(n){const r=parseInt(n[0]);return a.toUpperCase()+"\n\n"+i+"\n\n"+Je(e.getShaderSource(t),r)}return i}function et(e,t){const a=Qe(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+a[0]+a[1]+"; }"}function tt(e,t){let a;return t===oi?a="Linear":t===si?a="Reinhard":t===di?a="OptimizedCineon":t===li?a="ACESFilmic":t===pi?a="Custom":(console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),a="Linear"),"vec3 "+e+"( vec3 color ) { return "+a+"ToneMapping( color ); }"}function at(e){const t=[e.extensionDerivatives||!!e.envMapCubeUVHeight||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(nt).join("\n")}function rt(e){const t=[];for(const a in e){const r=e[a];!1===r||t.push("#define "+a+" "+r)}return t.join("\n")}function it(e,t){const a={},r=e.getProgramParameter(t,35721);for(let n=0;n<r;n++){const r=e.getActiveAttrib(t,n),i=r.name;let o=1;35674===r.type&&(o=2),35675===r.type&&(o=3),35676===r.type&&(o=4),a[i]={type:r.type,location:e.getAttribLocation(t,i),locationSize:o}}return a}function nt(e){return""!==e}function ot(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function st(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}function dt(e){return e.replace(kl,lt)}function lt(e,t){const a=xl[t];if(void 0===a)throw new Error("Can not resolve #include <"+t+">");return dt(a)}function pt(e){return e.replace(jl,ut).replace(Wl,ct)}function ct(e,t,a,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),ut(e,t,a,r)}function ut(e,t,a,r){let n="";for(let o=parseInt(t);o<parseInt(a);o++)n+=r.replace(/\[\s*i\s*\]/g,"[ "+o+" ]").replace(/UNROLLED_LOOP_INDEX/g,o);return n}function mt(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function ft(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===xr?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===vr?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===_r&&(t="SHADOWMAP_TYPE_VSM"),t}function gt(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case ui:case mi:t="ENVMAP_TYPE_CUBE";break;case hi:t="ENVMAP_TYPE_CUBE_UV";}return t}function ht(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case mi:t="ENVMAP_MODE_REFRACTION";}return t}function yt(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case ai:t="ENVMAP_BLENDING_MULTIPLY";break;case ri:t="ENVMAP_BLENDING_MIX";break;case ii:t="ENVMAP_BLENDING_ADD";}return t}function xt(e){const t=e.envMapCubeUVHeight;if(null===t)return null;const r=Ka(t)-2,i=1/(3*n(a(2,r),112));return{texelWidth:i,texelHeight:1/t,maxMip:r}}function vt(e,t,a,r){const i=e.getContext(),n=a.defines;let o=a.vertexShader,s=a.fragmentShader;const d=ft(a),l=gt(a),p=ht(a),c=yt(a),u=xt(a),m=a.isWebGL2?"":at(a),f=rt(n),g=i.createProgram();let h=a.glslVersion?"#version "+a.glslVersion+"\n":"",y,x;a.isRawShaderMaterial?(y=[f].filter(nt).join("\n"),0<y.length&&(y+="\n"),x=[m,f].filter(nt).join("\n"),0<x.length&&(x+="\n")):(y=[mt(a),"#define SHADER_NAME "+a.shaderName,f,a.instancing?"#define USE_INSTANCING":"",a.instancingColor?"#define USE_INSTANCING_COLOR":"",a.supportsVertexTextures?"#define VERTEX_TEXTURES":"",a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp2?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+p:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.normalMap&&a.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",a.normalMap&&a.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",a.clearcoatMap?"#define USE_CLEARCOATMAP":"",a.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",a.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",a.displacementMap&&a.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",a.specularColorMap?"#define USE_SPECULARCOLORMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.transmission?"#define USE_TRANSMISSION":"",a.transmissionMap?"#define USE_TRANSMISSIONMAP":"",a.thicknessMap?"#define USE_THICKNESSMAP":"",a.sheenColorMap?"#define USE_SHEENCOLORMAP":"",a.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",a.vertexTangents?"#define USE_TANGENT":"",a.vertexColors?"#define USE_COLOR":"",a.vertexAlphas?"#define USE_COLOR_ALPHA":"",a.vertexUvs?"#define USE_UV":"",a.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",a.flatShading?"#define FLAT_SHADED":"",a.skinning?"#define USE_SKINNING":"",a.morphTargets?"#define USE_MORPHTARGETS":"",a.morphNormals&&!1===a.flatShading?"#define USE_MORPHNORMALS":"",a.morphColors&&a.isWebGL2?"#define USE_MORPHCOLORS":"",0<a.morphTargetsCount&&a.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",0<a.morphTargetsCount&&a.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+a.morphTextureStride:"",0<a.morphTargetsCount&&a.isWebGL2?"#define MORPHTARGETS_COUNT "+a.morphTargetsCount:"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+d:"",a.sizeAttenuation?"#define USE_SIZEATTENUATION":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&a.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(nt).join("\n"),x=[m,mt(a),"#define SHADER_NAME "+a.shaderName,f,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp2?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.matcap?"#define USE_MATCAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+l:"",a.envMap?"#define "+p:"",a.envMap?"#define "+c:"",u?"#define CUBEUV_TEXEL_WIDTH "+u.texelWidth:"",u?"#define CUBEUV_TEXEL_HEIGHT "+u.texelHeight:"",u?"#define CUBEUV_MAX_MIP "+u.maxMip+".0":"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.normalMap&&a.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",a.normalMap&&a.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",a.clearcoat?"#define USE_CLEARCOAT":"",a.clearcoatMap?"#define USE_CLEARCOATMAP":"",a.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",a.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",a.specularColorMap?"#define USE_SPECULARCOLORMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.alphaTest?"#define USE_ALPHATEST":"",a.sheen?"#define USE_SHEEN":"",a.sheenColorMap?"#define USE_SHEENCOLORMAP":"",a.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",a.transmission?"#define USE_TRANSMISSION":"",a.transmissionMap?"#define USE_TRANSMISSIONMAP":"",a.thicknessMap?"#define USE_THICKNESSMAP":"",a.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",a.vertexTangents?"#define USE_TANGENT":"",a.vertexColors||a.instancingColor?"#define USE_COLOR":"",a.vertexAlphas?"#define USE_COLOR_ALPHA":"",a.vertexUvs?"#define USE_UV":"",a.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",a.gradientMap?"#define USE_GRADIENTMAP":"",a.flatShading?"#define FLAT_SHADED":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+d:"",a.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",a.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&a.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",a.toneMapping===ni?"":"#define TONE_MAPPING",a.toneMapping===ni?"":xl.tonemapping_pars_fragment,a.toneMapping===ni?"":tt("toneMapping",a.toneMapping),a.dithering?"#define DITHERING":"",a.opaque?"#define OPAQUE":"",xl.encodings_pars_fragment,et("linearToOutputTexel",a.outputEncoding),a.useDepthPacking?"#define DEPTH_PACKING "+a.depthPacking:"","\n"].filter(nt).join("\n")),o=dt(o),o=ot(o,a),o=st(o,a),s=dt(s),s=ot(s,a),s=st(s,a),o=pt(o),s=pt(s),a.isWebGL2&&!0!==a.isRawShaderMaterial&&(h="#version 300 es\n",y="precision mediump sampler2DArray;\n#define attribute in\n#define varying out\n#define texture2D texture\n"+y,x=["#define varying in",a.glslVersion===So?"":"layout(location = 0) out highp vec4 pc_fragColor;",a.glslVersion===So?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+x);const v=h+y+o,_=h+x+s,b=Ke(i,35633,v),S=Ke(i,35632,_);if(i.attachShader(g,b),i.attachShader(g,S),void 0===a.index0AttributeName?!0===a.morphTargets&&i.bindAttribLocation(g,0,"position"):i.bindAttribLocation(g,0,a.index0AttributeName),i.linkProgram(g),e.debug.checkShaderErrors){const e=i.getProgramInfoLog(g).trim(),t=i.getShaderInfoLog(b).trim(),a=i.getShaderInfoLog(S).trim();let r=!0,n=!0;if(!1===i.getProgramParameter(g,35714)){r=!1;const t=$e(i,b,"vertex"),a=$e(i,S,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(g,35715)+"\n\nProgram Info Log: "+e+"\n"+t+"\n"+a)}else""===e?(""===t||""===a)&&(n=!1):console.warn("THREE.WebGLProgram: Program Info Log:",e);n&&(this.diagnostics={runnable:r,programLog:e,vertexShader:{log:t,prefix:y},fragmentShader:{log:a,prefix:x}})}i.deleteShader(b),i.deleteShader(S);let M;this.getUniforms=function(){return void 0==M&&(M=new Ze(i,g)),M};let T;return this.getAttributes=function(){return void 0===T&&(T=it(i,g)),T},this.destroy=function(){r.releaseStatesOfProgram(this),i.deleteProgram(g),this.program=void 0},this.name=a.shaderName,this.id=Vl++,this.cacheKey=t,this.usedTimes=1,this.program=g,this.vertexShader=b,this.fragmentShader=S,this}function _t(e,t,a,r,i,n,o){function s(n,s,d,l,p){const u=l.fog,x=p.geometry,v=n.isMeshStandardMaterial?l.environment:null,_=(n.isMeshStandardMaterial?a:t).get(n.envMap||v),b=_&&_.mapping===hi?_.image.height:null,S=y[n.type];null!==n.precision&&(h=i.getMaxPrecision(n.precision),h!==n.precision&&console.warn("THREE.WebGLProgram.getParameters:",n.precision,"not supported, using",h,"instead."));const M=x.morphAttributes.position||x.morphAttributes.normal||x.morphAttributes.color,T=void 0===M?0:M.length;let E=0;void 0!==x.morphAttributes.position&&(E=1),void 0!==x.morphAttributes.normal&&(E=2),void 0!==x.morphAttributes.color&&(E=3);let w,A,R,L;if(S){const e=_l[S];w=e.vertexShader,A=e.fragmentShader}else w=n.vertexShader,A=n.fragmentShader,c.update(n),R=c.getVertexShaderID(n),L=c.getFragmentShaderID(n);const C=e.getRenderTarget(),P=0<n.alphaTest,D=0<n.clearcoat,I={isWebGL2:m,shaderID:S,shaderName:n.type,vertexShader:w,fragmentShader:A,defines:n.defines,customVertexShaderID:R,customFragmentShaderID:L,isRawShaderMaterial:!0===n.isRawShaderMaterial,glslVersion:n.glslVersion,precision:h,instancing:!0===p.isInstancedMesh,instancingColor:!0===p.isInstancedMesh&&null!==p.instanceColor,supportsVertexTextures:g,outputEncoding:null===C?e.outputEncoding:!0===C.isXRRenderTarget?C.texture.encoding:Fn,map:!!n.map,matcap:!!n.matcap,envMap:!!_,envMapMode:_&&_.mapping,envMapCubeUVHeight:b,lightMap:!!n.lightMap,aoMap:!!n.aoMap,emissiveMap:!!n.emissiveMap,bumpMap:!!n.bumpMap,normalMap:!!n.normalMap,objectSpaceNormalMap:n.normalMapType===jn,tangentSpaceNormalMap:n.normalMapType===Wn,decodeVideoTexture:!!n.map&&!0===n.map.isVideoTexture&&n.map.encoding===Gn,clearcoat:D,clearcoatMap:D&&!!n.clearcoatMap,clearcoatRoughnessMap:D&&!!n.clearcoatRoughnessMap,clearcoatNormalMap:D&&!!n.clearcoatNormalMap,displacementMap:!!n.displacementMap,roughnessMap:!!n.roughnessMap,metalnessMap:!!n.metalnessMap,specularMap:!!n.specularMap,specularIntensityMap:!!n.specularIntensityMap,specularColorMap:!!n.specularColorMap,opaque:!1===n.transparent&&n.blending===Ar,alphaMap:!!n.alphaMap,alphaTest:P,gradientMap:!!n.gradientMap,sheen:0<n.sheen,sheenColorMap:!!n.sheenColorMap,sheenRoughnessMap:!!n.sheenRoughnessMap,transmission:0<n.transmission,transmissionMap:!!n.transmissionMap,thicknessMap:!!n.thicknessMap,combine:n.combine,vertexTangents:!!n.normalMap&&!!x.attributes.tangent,vertexColors:n.vertexColors,vertexAlphas:!0===n.vertexColors&&!!x.attributes.color&&4===x.attributes.color.itemSize,vertexUvs:!!n.map||!!n.bumpMap||!!n.normalMap||!!n.specularMap||!!n.alphaMap||!!n.emissiveMap||!!n.roughnessMap||!!n.metalnessMap||!!n.clearcoatMap||!!n.clearcoatRoughnessMap||!!n.clearcoatNormalMap||!!n.displacementMap||!!n.transmissionMap||!!n.thicknessMap||!!n.specularIntensityMap||!!n.specularColorMap||!!n.sheenColorMap||!!n.sheenRoughnessMap,uvsVertexOnly:!n.map&&!n.bumpMap&&!n.normalMap&&!n.specularMap&&!n.alphaMap&&!n.emissiveMap&&!n.roughnessMap&&!n.metalnessMap&&!n.clearcoatNormalMap&&!(0<n.transmission)&&!n.transmissionMap&&!n.thicknessMap&&!n.specularIntensityMap&&!n.specularColorMap&&!(0<n.sheen)&&!n.sheenColorMap&&!n.sheenRoughnessMap&&!!n.displacementMap,fog:!!u,useFog:!0===n.fog,fogExp2:u&&u.isFogExp2,flatShading:!!n.flatShading,sizeAttenuation:n.sizeAttenuation,logarithmicDepthBuffer:f,skinning:!0===p.isSkinnedMesh,morphTargets:void 0!==x.morphAttributes.position,morphNormals:void 0!==x.morphAttributes.normal,morphColors:void 0!==x.morphAttributes.color,morphTargetsCount:T,morphTextureStride:E,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:n.dithering,shadowMapEnabled:e.shadowMap.enabled&&0<d.length,shadowMapType:e.shadowMap.type,toneMapping:n.toneMapped?e.toneMapping:ni,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:n.premultipliedAlpha,doubleSided:n.side===Mr,flipSided:n.side===Sr,useDepthPacking:!!n.depthPacking,depthPacking:n.depthPacking||0,index0AttributeName:n.index0AttributeName,extensionDerivatives:n.extensions&&n.extensions.derivatives,extensionFragDepth:n.extensions&&n.extensions.fragDepth,extensionDrawBuffers:n.extensions&&n.extensions.drawBuffers,extensionShaderTextureLOD:n.extensions&&n.extensions.shaderTextureLOD,rendererExtensionFragDepth:m||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:m||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:m||r.has("EXT_shader_texture_lod"),customProgramCacheKey:n.customProgramCacheKey()};return I}function d(e,t){e.push(t.precision),e.push(t.outputEncoding),e.push(t.envMapMode),e.push(t.envMapCubeUVHeight),e.push(t.combine),e.push(t.vertexUvs),e.push(t.fogExp2),e.push(t.sizeAttenuation),e.push(t.morphTargetsCount),e.push(t.morphAttributeCount),e.push(t.numDirLights),e.push(t.numPointLights),e.push(t.numSpotLights),e.push(t.numHemiLights),e.push(t.numRectAreaLights),e.push(t.numDirLightShadows),e.push(t.numPointLightShadows),e.push(t.numSpotLightShadows),e.push(t.shadowMapType),e.push(t.toneMapping),e.push(t.numClippingPlanes),e.push(t.numClipIntersection),e.push(t.depthPacking)}function l(e,t){p.disableAll(),t.isWebGL2&&p.enable(0),t.supportsVertexTextures&&p.enable(1),t.instancing&&p.enable(2),t.instancingColor&&p.enable(3),t.map&&p.enable(4),t.matcap&&p.enable(5),t.envMap&&p.enable(6),t.lightMap&&p.enable(7),t.aoMap&&p.enable(8),t.emissiveMap&&p.enable(9),t.bumpMap&&p.enable(10),t.normalMap&&p.enable(11),t.objectSpaceNormalMap&&p.enable(12),t.tangentSpaceNormalMap&&p.enable(13),t.clearcoat&&p.enable(14),t.clearcoatMap&&p.enable(15),t.clearcoatRoughnessMap&&p.enable(16),t.clearcoatNormalMap&&p.enable(17),t.displacementMap&&p.enable(18),t.specularMap&&p.enable(19),t.roughnessMap&&p.enable(20),t.metalnessMap&&p.enable(21),t.gradientMap&&p.enable(22),t.alphaMap&&p.enable(23),t.alphaTest&&p.enable(24),t.vertexColors&&p.enable(25),t.vertexAlphas&&p.enable(26),t.vertexUvs&&p.enable(27),t.vertexTangents&&p.enable(28),t.uvsVertexOnly&&p.enable(29),t.fog&&p.enable(30),e.push(p.mask),p.disableAll(),t.useFog&&p.enable(0),t.flatShading&&p.enable(1),t.logarithmicDepthBuffer&&p.enable(2),t.skinning&&p.enable(3),t.morphTargets&&p.enable(4),t.morphNormals&&p.enable(5),t.morphColors&&p.enable(6),t.premultipliedAlpha&&p.enable(7),t.shadowMapEnabled&&p.enable(8),t.physicallyCorrectLights&&p.enable(9),t.doubleSided&&p.enable(10),t.flipSided&&p.enable(11),t.useDepthPacking&&p.enable(12),t.dithering&&p.enable(13),t.specularIntensityMap&&p.enable(14),t.specularColorMap&&p.enable(15),t.transmission&&p.enable(16),t.transmissionMap&&p.enable(17),t.thicknessMap&&p.enable(18),t.sheen&&p.enable(19),t.sheenColorMap&&p.enable(20),t.sheenRoughnessMap&&p.enable(21),t.decodeVideoTexture&&p.enable(22),t.opaque&&p.enable(23),e.push(p.mask)}const p=new Fs,c=new Xl,u=[],m=i.isWebGL2,f=i.logarithmicDepthBuffer,g=i.vertexTextures;let h=i.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:s,getProgramCacheKey:function(t){const a=[];if(t.shaderID?a.push(t.shaderID):(a.push(t.customVertexShaderID),a.push(t.customFragmentShaderID)),void 0!==t.defines)for(const e in t.defines)a.push(e),a.push(t.defines[e]);return!1===t.isRawShaderMaterial&&(d(a,t),l(a,t),a.push(e.outputEncoding)),a.push(t.customProgramCacheKey),a.join()},getUniforms:function(e){const t=y[e.type];let a;if(t){const e=_l[t];a=tl.clone(e.uniforms)}else a=e.uniforms;return a},acquireProgram:function(t,a){let r;for(let e=0,i=u.length;e<i;e++){const t=u[e];if(t.cacheKey===a){r=t,++r.usedTimes;break}}return void 0===r&&(r=new vt(e,a,t,n),u.push(r)),r},releaseProgram:function(e){if(0==--e.usedTimes){const t=u.indexOf(e);u[t]=u[u.length-1],u.pop(),e.destroy()}},releaseShaderCache:function(e){c.remove(e)},programs:u,dispose:function(){c.dispose()}}}function bt(){function e(e){let t=r.get(e);return void 0===t&&(t={},r.set(e,t)),t}function t(e){r.delete(e)}function a(e,t,a){r.get(e)[t]=a}let r=new WeakMap;return{get:e,remove:t,update:a,dispose:function(){r=new WeakMap}}}function St(e,t){return e.groupOrder===t.groupOrder?e.renderOrder===t.renderOrder?e.material.id===t.material.id?e.z===t.z?e.id-t.id:e.z-t.z:e.material.id-t.material.id:e.renderOrder-t.renderOrder:e.groupOrder-t.groupOrder}function Mt(e,t){return e.groupOrder===t.groupOrder?e.renderOrder===t.renderOrder?e.z===t.z?e.id-t.id:t.z-e.z:e.renderOrder-t.renderOrder:e.groupOrder-t.groupOrder}function Tt(){function e(e,t,i,n,o,s){let d=a[r];return void 0===d?(d={id:e.id,object:e,geometry:t,material:i,groupOrder:n,renderOrder:e.renderOrder,z:o,group:s},a[r]=d):(d.id=e.id,d.object=e,d.geometry=t,d.material=i,d.groupOrder=n,d.renderOrder=e.renderOrder,d.z=o,d.group=s),r++,d}function t(){for(let e=r,t=a.length;e<t;e++){const t=a[e];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.group=null}}const a=[];let r=0;const i=[],n=[],o=[];return{opaque:i,transmissive:n,transparent:o,init:function(){r=0,i.length=0,n.length=0,o.length=0},push:function(t,a,r,s,d,l){const p=e(t,a,r,s,d,l);0<r.transmission?n.push(p):!0===r.transparent?o.push(p):i.push(p)},unshift:function(t,a,r,s,d,l){const p=e(t,a,r,s,d,l);0<r.transmission?n.unshift(p):!0===r.transparent?o.unshift(p):i.unshift(p)},finish:t,sort:function(e,t){1<i.length&&i.sort(e||St),1<n.length&&n.sort(t||Mt),1<o.length&&o.sort(t||Mt)}}}function Et(){function e(e,a){let r;return!1===t.has(e)?(r=new Tt,t.set(e,[r])):a>=t.get(e).length?(r=new Tt,t.get(e).push(r)):r=t.get(e)[a],r}let t=new WeakMap;return{get:e,dispose:function(){t=new WeakMap}}}function wt(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let a;switch(t.type){case"DirectionalLight":a={direction:new $o,color:new Oo};break;case"SpotLight":a={position:new $o,direction:new $o,color:new Oo,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":a={position:new $o,color:new Oo,distance:0,decay:0};break;case"HemisphereLight":a={direction:new $o,skyColor:new Oo,groundColor:new Oo};break;case"RectAreaLight":a={color:new Oo,position:new $o,halfWidth:new $o,halfHeight:new $o};}return e[t.id]=a,a}}}function At(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let a;switch(t.type){case"DirectionalLight":a={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Co};break;case"SpotLight":a={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Co};break;case"PointLight":a={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Co,shadowCameraNear:1,shadowCameraFar:1e3};}return e[t.id]=a,a}}}function Rt(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function Lt(e,t){function a(a,o){let d=0,l=0,p=0;for(let e=0;9>e;e++)n.probe[e].set(0,0,0);let c=0,u=0,m=0,f=0,g=0,h=0,y=0,x=0;a.sort(Rt);const v=!0===o?1:s;for(let e=0,t=a.length;e<t;e++){const t=a[e],o=t.color,s=t.intensity,_=t.distance,b=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)d+=o.r*s*v,l+=o.g*s*v,p+=o.b*s*v;else if(t.isLightProbe)for(let e=0;9>e;e++)n.probe[e].addScaledVector(t.sh.coefficients[e],s);else if(t.isDirectionalLight){const e=r.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*v),t.castShadow){const e=t.shadow,a=i.get(t);a.shadowBias=e.bias,a.shadowNormalBias=e.normalBias,a.shadowRadius=e.radius,a.shadowMapSize=e.mapSize,n.directionalShadow[c]=a,n.directionalShadowMap[c]=b,n.directionalShadowMatrix[c]=t.shadow.matrix,h++}n.directional[c]=e,c++}else if(t.isSpotLight){const e=r.get(t);if(e.position.setFromMatrixPosition(t.matrixWorld),e.color.copy(o).multiplyScalar(s*v),e.distance=_,e.coneCos=rr(t.angle),e.penumbraCos=rr(t.angle*(1-t.penumbra)),e.decay=t.decay,t.castShadow){const e=t.shadow,a=i.get(t);a.shadowBias=e.bias,a.shadowNormalBias=e.normalBias,a.shadowRadius=e.radius,a.shadowMapSize=e.mapSize,n.spotShadow[m]=a,n.spotShadowMap[m]=b,n.spotShadowMatrix[m]=t.shadow.matrix,x++}n.spot[m]=e,m++}else if(t.isRectAreaLight){const e=r.get(t);e.color.copy(o).multiplyScalar(s),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),n.rectArea[f]=e,f++}else if(t.isPointLight){const e=r.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*v),e.distance=t.distance,e.decay=t.decay,t.castShadow){const e=t.shadow,a=i.get(t);a.shadowBias=e.bias,a.shadowNormalBias=e.normalBias,a.shadowRadius=e.radius,a.shadowMapSize=e.mapSize,a.shadowCameraNear=e.camera.near,a.shadowCameraFar=e.camera.far,n.pointShadow[u]=a,n.pointShadowMap[u]=b,n.pointShadowMatrix[u]=t.shadow.matrix,y++}n.point[u]=e,u++}else if(t.isHemisphereLight){const e=r.get(t);e.skyColor.copy(t.color).multiplyScalar(s*v),e.groundColor.copy(t.groundColor).multiplyScalar(s*v),n.hemi[g]=e,g++}}0<f&&(t.isWebGL2?(n.rectAreaLTC1=vl.LTC_FLOAT_1,n.rectAreaLTC2=vl.LTC_FLOAT_2):!0===e.has("OES_texture_float_linear")?(n.rectAreaLTC1=vl.LTC_FLOAT_1,n.rectAreaLTC2=vl.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(n.rectAreaLTC1=vl.LTC_HALF_1,n.rectAreaLTC2=vl.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),n.ambient[0]=d,n.ambient[1]=l,n.ambient[2]=p;const _=n.hash;(_.directionalLength!==c||_.pointLength!==u||_.spotLength!==m||_.rectAreaLength!==f||_.hemiLength!==g||_.numDirectionalShadows!==h||_.numPointShadows!==y||_.numSpotShadows!==x)&&(n.directional.length=c,n.spot.length=m,n.rectArea.length=f,n.point.length=u,n.hemi.length=g,n.directionalShadow.length=h,n.directionalShadowMap.length=h,n.pointShadow.length=y,n.pointShadowMap.length=y,n.spotShadow.length=x,n.spotShadowMap.length=x,n.directionalShadowMatrix.length=h,n.pointShadowMatrix.length=y,n.spotShadowMatrix.length=x,_.directionalLength=c,_.pointLength=u,_.spotLength=m,_.rectAreaLength=f,_.hemiLength=g,_.numDirectionalShadows=h,_.numPointShadows=y,_.numSpotShadows=x,n.version=Zl++)}const r=new wt,i=At(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let a=0;9>a;a++)n.probe.push(new $o);const o=new $o,d=new Ls,l=new Ls;return{setup:a,setupView:function(e,t){let a=0,r=0,i=0,s=0,p=0;const c=t.matrixWorldInverse;for(let u=0,m=e.length;u<m;u++){const t=e[u];if(t.isDirectionalLight){const e=n.directional[a];e.direction.setFromMatrixPosition(t.matrixWorld),o.setFromMatrixPosition(t.target.matrixWorld),e.direction.sub(o),e.direction.transformDirection(c),a++}else if(t.isSpotLight){const e=n.spot[i];e.position.setFromMatrixPosition(t.matrixWorld),e.position.applyMatrix4(c),e.direction.setFromMatrixPosition(t.matrixWorld),o.setFromMatrixPosition(t.target.matrixWorld),e.direction.sub(o),e.direction.transformDirection(c),i++}else if(t.isRectAreaLight){const e=n.rectArea[s];e.position.setFromMatrixPosition(t.matrixWorld),e.position.applyMatrix4(c),l.identity(),d.copy(t.matrixWorld),d.premultiply(c),l.extractRotation(d),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),e.halfWidth.applyMatrix4(l),e.halfHeight.applyMatrix4(l),s++}else if(t.isPointLight){const e=n.point[r];e.position.setFromMatrixPosition(t.matrixWorld),e.position.applyMatrix4(c),r++}else if(t.isHemisphereLight){const e=n.hemi[p];e.direction.setFromMatrixPosition(t.matrixWorld),e.direction.transformDirection(c),p++}}},state:n}}function Ct(e,t){const a=new Lt(e,t),r=[],i=[];return{init:function(){r.length=0,i.length=0},state:{lightsArray:r,shadowsArray:i,lights:a},setupLights:function(e){a.setup(r,e)},setupLightsView:function(e){a.setupView(r,e)},pushLight:function(e){r.push(e)},pushShadow:function(e){i.push(e)}}}function Pt(e,t){function a(a,i=0){let n;return!1===r.has(a)?(n=new Ct(e,t),r.set(a,[n])):i>=r.get(a).length?(n=new Ct(e,t),r.get(a).push(n)):n=r.get(a)[i],n}let r=new WeakMap;return{get:a,dispose:function(){r=new WeakMap}}}function Dt(e,t,a){function r(a,r){const i=t.update(x);g.defines.VSM_SAMPLES!==a.blurSamples&&(g.defines.VSM_SAMPLES=a.blurSamples,h.defines.VSM_SAMPLES=a.blurSamples,g.needsUpdate=!0,h.needsUpdate=!0),g.uniforms.shadow_pass.value=a.map.texture,g.uniforms.resolution.value=a.mapSize,g.uniforms.radius.value=a.radius,e.setRenderTarget(a.mapPass),e.clear(),e.renderBufferDirect(r,null,i,g,x,null),h.uniforms.shadow_pass.value=a.mapPass.texture,h.uniforms.resolution.value=a.mapSize,h.uniforms.radius.value=a.radius,e.setRenderTarget(a.map),e.clear(),e.renderBufferDirect(r,null,i,h,x,null)}function i(t,a,r,i,n,o){let s=null;const d=!0===r.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(s=void 0===d?!0===r.isPointLight?c:p:d,e.localClippingEnabled&&!0===a.clipShadows&&0!==a.clippingPlanes.length||a.displacementMap&&0!==a.displacementScale||a.alphaMap&&0<a.alphaTest){const e=s.uuid,t=a.uuid;let r=u[e];void 0===r&&(r={},u[e]=r);let i=r[t];void 0===i&&(i=s.clone(),r[t]=i),s=i}return s.visible=a.visible,s.wireframe=a.wireframe,s.side=o===_r?null===a.shadowSide?a.side:a.shadowSide:null===a.shadowSide?f[a.side]:a.shadowSide,s.alphaMap=a.alphaMap,s.alphaTest=a.alphaTest,s.clipShadows=a.clipShadows,s.clippingPlanes=a.clippingPlanes,s.clipIntersection=a.clipIntersection,s.displacementMap=a.displacementMap,s.displacementScale=a.displacementScale,s.displacementBias=a.displacementBias,s.wireframeLinewidth=a.wireframeLinewidth,s.linewidth=a.linewidth,!0===r.isPointLight&&!0===s.isMeshDistanceMaterial&&(s.referencePosition.setFromMatrixPosition(r.matrixWorld),s.nearDistance=i,s.farDistance=n),s}function n(a,r,s,d,p){if(!1!==a.visible){const l=a.layers.test(r.layers);if(l&&(a.isMesh||a.isLine||a.isPoints)&&(a.castShadow||a.receiveShadow&&p===_r)&&(!a.frustumCulled||o.intersectsObject(a))){a.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,a.matrixWorld);const r=t.update(a),n=a.material;if(Array.isArray(n)){const t=r.groups;for(let o=0,l=t.length;o<l;o++){const l=t[o],c=n[l.materialIndex];if(c&&c.visible){const t=i(a,c,d,s.near,s.far,p);e.renderBufferDirect(s,null,r,t,a,l)}}}else if(n.visible){const t=i(a,n,d,s.near,s.far,p);e.renderBufferDirect(s,null,r,t,a,null)}}const c=a.children;for(let e=0,t=c.length;e<t;e++)n(c[e],r,s,d,p)}}let o=new hl;const s=new Co,d=new Co,l=new jo,p=new Kl({depthPacking:kn}),c=new Jl,u={},m=a.maxTextureSize,f={0:Sr,1:br,2:Mr},g=new al({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Co},radius:{value:4}},vertexShader:Ql,fragmentShader:$l}),h=g.clone();h.defines.HORIZONTAL_PASS=1;const y=new Bd;y.setAttribute("position",new yd(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const x=new $d(y,g),v=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=xr,this.render=function(t,a,p){if(!1!==v.enabled&&(!1!==v.autoUpdate||!1!==v.needsUpdate)&&0!==t.length){const i=e.getRenderTarget(),c=e.getActiveCubeFace(),u=e.getActiveMipmapLevel(),f=e.state;f.setBlending(wr),f.buffers.color.setClear(1,1,1,1),f.buffers.depth.setTest(!0),f.setScissorTest(!1);for(let c=0,i=t.length;c<i;c++){const i=t[c],u=i.shadow;if(void 0===u){console.warn("THREE.WebGLShadowMap:",i,"has no shadow.");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;s.copy(u.mapSize);const g=u.getFrameExtents();(s.multiply(g),d.copy(u.mapSize),(s.x>m||s.y>m)&&(s.x>m&&(d.x=sr(m/g.x),s.x=d.x*g.x,u.mapSize.x=d.x),s.y>m&&(d.y=sr(m/g.y),s.y=d.y*g.y,u.mapSize.y=d.y)),null!==u.map||u.isPointLightShadow||this.type!==_r||(u.map=new qo(s.x,s.y),u.map.texture.name=i.name+".shadowMap",u.mapPass=new qo(s.x,s.y),u.camera.updateProjectionMatrix()),null===u.map)&&(u.map=new qo(s.x,s.y,{minFilter:_i,magFilter:_i,format:ki}),u.map.texture.name=i.name+".shadowMap",u.camera.updateProjectionMatrix()),e.setRenderTarget(u.map),e.clear();const h=u.getViewportCount();for(let e=0;e<h;e++){const t=u.getViewport(e);l.set(d.x*t.x,d.y*t.y,d.x*t.z,d.y*t.w),f.viewport(l),u.updateMatrices(i,e),o=u.getFrustum(),n(a,p,u.camera,i,this.type)}u.isPointLightShadow||this.type!==_r||r(u,p),u.needsUpdate=!1}v.needsUpdate=!1,e.setRenderTarget(i,c,u)}}}function It(e,t,a){function r(t,a,r){const n=new Uint8Array(4),i=e.createTexture();e.bindTexture(t,i),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let o=0;o<r;o++)e.texImage2D(a+o,0,6408,1,1,0,6408,5121,n);return i}function i(t){!0!==M[t]&&(e.enable(t),M[t]=!0)}function n(t){!1!==M[t]&&(e.disable(t),M[t]=!1)}function o(t,a){return T[t]!==a&&(e.bindFramebuffer(t,a),T[t]=a,v&&(36009===t&&(T[36160]=a),36160===t&&(T[36009]=a)),!0)}function s(r,i){let n=w,o=!1;if(!r)1029!==n[0]&&(n[0]=1029,o=!0);else if(n=E.get(i),void 0===n&&(n=[],E.set(i,n)),r.isWebGLMultipleRenderTargets){const e=r.texture;if(n.length!==e.length||36064!==n[0]){for(let t=0,a=e.length;t<a;t++)n[t]=36064+t;n.length=e.length,o=!0}}else 36064!==n[0]&&(n[0]=36064,o=!0);o&&(a.isWebGL2?e.drawBuffers(n):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(n))}function d(t){return A!==t&&(e.useProgram(t),A=t,!0)}function l(t,a,r,o,s,d,l,p){return t===wr?void(!0==R&&(n(3042),R=!1)):(!1==R&&(i(3042),R=!0),t===Pr?void(s=s||a,d=d||r,l=l||o,(a!==C||s!==I)&&(e.blendEquationSeparate($[a],$[s]),C=a,I=s),(r!==P||o!==D||d!==z||l!==B)&&(e.blendFuncSeparate(ee[r],ee[o],ee[d],ee[l]),P=r,D=o,z=d,B=l),L=t,N=null):void((t!=L||p!==N)&&((C!==Dr||I!==Dr)&&(e.blendEquation(32774),C=Dr,I=Dr),p?t===Ar?e.blendFuncSeparate(1,771,1,771):t===Rr?e.blendFunc(1,1):t===Lr?e.blendFuncSeparate(0,769,0,1):t===Cr?e.blendFuncSeparate(0,768,0,770):console.error("THREE.WebGLState: Invalid blending: ",t):t===Ar?e.blendFuncSeparate(770,771,1,771):t===Rr?e.blendFunc(770,1):t===Lr?e.blendFuncSeparate(0,769,0,1):t===Cr?e.blendFunc(0,768):console.error("THREE.WebGLState: Invalid blending: ",t),P=null,D=null,z=null,B=null,L=t,N=p)))}function p(t){U!==t&&(t?e.frontFace(2304):e.frontFace(2305),U=t)}function c(t){t===mr?n(2884):(i(2884),t!==H&&(t===fr?e.cullFace(1029):t===gr?e.cullFace(1028):e.cullFace(1032))),H=t}function u(t){t!==O&&(k&&e.lineWidth(t),O=t)}function m(t,a,r){t?(i(32823),(F!==a||G!==r)&&(e.polygonOffset(a,r),F=a,G=r)):n(32823)}function f(t){void 0===t&&(t=33984+V-1),q!==t&&(e.activeTexture(t),q=t)}function g(t,a){null===q&&f();let r=X[q];void 0===r&&(r={type:void 0,texture:void 0},X[q]=r),(r.type!==t||r.texture!==a)&&(e.bindTexture(t,a||Q[t]),r.type=t,r.texture=a)}function h(){const t=X[q];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)}function y(t){!1===K.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),K.copy(t))}function x(t){!1===J.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),J.copy(t))}const v=a.isWebGL2,_=new function(){let t=!1;const i=new jo;let a=null;const n=new jo(0,0,0,0);return{setMask:function(r){a===r||t||(e.colorMask(r,r,r,r),a=r)},setLocked:function(e){t=e},setClear:function(t,r,o,s,a){!0===a&&(t*=s,r*=s,o*=s),i.set(t,r,o,s),!1===n.equals(i)&&(e.clearColor(t,r,o,s),n.copy(i))},reset:function(){t=!1,a=null,n.set(-1,0,0,0)}}},b=new function(){let t=!1,a=null,r=null,o=null;return{setTest:function(e){e?i(2929):n(2929)},setMask:function(r){a===r||t||(e.depthMask(r),a=r)},setFunc:function(t){r!==t&&(t?t===Yr?e.depthFunc(512):t===Zr?e.depthFunc(519):t===Kr?e.depthFunc(513):t===Jr?e.depthFunc(515):t===Qr?e.depthFunc(514):t===$r?e.depthFunc(518):t===ei?e.depthFunc(516):t===ti?e.depthFunc(517):e.depthFunc(515):e.depthFunc(515),r=t)},setLocked:function(e){t=e},setClear:function(t){o!==t&&(e.clearDepth(t),o=t)},reset:function(){t=!1,a=null,r=null,o=null}}},S=new function(){let t=!1,a=null,r=null,o=null,s=null,d=null,l=null,p=null,c=null;return{setTest:function(e){t||(e?i(2960):n(2960))},setMask:function(r){a===r||t||(e.stencilMask(r),a=r)},setFunc:function(t,a,i){(r!==t||o!==a||s!==i)&&(e.stencilFunc(t,a,i),r=t,o=a,s=i)},setOp:function(t,a,r){(d!==t||l!==a||p!==r)&&(e.stencilOp(t,a,r),d=t,l=a,p=r)},setLocked:function(e){t=e},setClear:function(t){c!==t&&(e.clearStencil(t),c=t)},reset:function(){t=!1,a=null,r=null,o=null,s=null,d=null,l=null,p=null,c=null}}};let M={},T={},E=new WeakMap,w=[],A=null,R=!1,L=null,C=null,P=null,D=null,I=null,z=null,B=null,N=!1,U=null,H=null,O=null,F=null,G=null;const V=e.getParameter(35661);let k=!1,W=0;const j=e.getParameter(7938);-1===j.indexOf("WebGL")?-1!==j.indexOf("OpenGL ES")&&(W=parseFloat(/^OpenGL ES (\d)/.exec(j)[1]),k=2<=W):(W=parseFloat(/^WebGL (\d)/.exec(j)[1]),k=1<=W);let q=null,X={};const Y=e.getParameter(3088),Z=e.getParameter(2978),K=new jo().fromArray(Y),J=new jo().fromArray(Z),Q={};Q[3553]=r(3553,3553,1),Q[34067]=r(34067,34069,6),_.setClear(0,0,0,1),b.setClear(1),S.setClear(0),i(2929),b.setFunc(Jr),p(!1),c(fr),i(2884),l(wr);const $={[Dr]:32774,[Ir]:32778,[zr]:32779};if(v)$[Br]=32775,$[Nr]=32776;else{const e=t.get("EXT_blend_minmax");null!==e&&($[Br]=e.MIN_EXT,$[Nr]=e.MAX_EXT)}const ee={[Ur]:0,[Hr]:1,[Or]:768,[Gr]:770,[Xr]:776,[jr]:774,[kr]:772,[Fr]:769,[Vr]:771,[qr]:775,[Wr]:773};return{buffers:{color:_,depth:b,stencil:S},enable:i,disable:n,bindFramebuffer:o,drawBuffers:s,useProgram:d,setBlending:l,setMaterial:function(e,t){e.side===Mr?n(2884):i(2884);let a=e.side===Sr;t&&(a=!a),p(a),e.blending===Ar&&!1===e.transparent?l(wr):l(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),b.setFunc(e.depthFunc),b.setTest(e.depthTest),b.setMask(e.depthWrite),_.setMask(e.colorWrite);const r=e.stencilWrite;S.setTest(r),r&&(S.setMask(e.stencilWriteMask),S.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),S.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),m(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?i(32926):n(32926)},setFlipSided:p,setCullFace:c,setLineWidth:u,setPolygonOffset:m,setScissorTest:function(e){e?i(3089):n(3089)},activeTexture:f,bindTexture:g,unbindTexture:h,compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:y,viewport:x,reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===v&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),M={},q=null,X={},T={},E=new WeakMap,w=[],A=null,R=!1,L=null,C=null,P=null,D=null,I=null,z=null,B=null,N=!1,U=null,H=null,O=null,F=null,G=null,K.set(0,0,e.canvas.width,e.canvas.height),J.set(0,0,e.canvas.width,e.canvas.height),_.reset(),b.reset(),S.reset()}}}function zt(e,t,a,r,i,s,d){function l(e,t){return J?new OffscreenCanvas(e,t):x("canvas")}function p(e,t,a,r){let i=1;if((e.width>r||e.height>r)&&(i=r/n(e.width,e.height)),1>i||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const r=t?g:sr,n=r(i*e.width),o=r(i*e.height);void 0===Z&&(Z=l(n,o));const s=a?l(n,o):Z;s.width=n,s.height=o;const d=s.getContext("2d");return d.drawImage(e,0,0,n,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+n+"x"+o+")."),s}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function c(e){return m(e.width)&&m(e.height)}function u(e){return!G&&(e.wrapS!==xi||e.wrapT!==xi||e.minFilter!==_i&&e.minFilter!==Ei)}function f(e,t){return e.generateMipmaps&&t&&e.minFilter!==_i&&e.minFilter!==Ei}function h(t){e.generateMipmap(t)}function y(a,r,i,n,o=!1){if(!1===G)return r;if(null!==a){if(void 0!==e[a])return e[a];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+a+"'")}let s=r;return 6403===r&&(5126===i&&(s=33326),5131===i&&(s=33325),5121===i&&(s=33321)),33319===r&&(5126===i&&(s=33328),5131===i&&(s=33327),5121===i&&(s=33323)),6408===r&&(5126===i&&(s=34836),5131===i&&(s=34842),5121===i&&(s=n===Gn&&!1===o?35907:32856),32819===i&&(s=32854),32820===i&&(s=32855)),(33325===s||33326===s||33327===s||33328===s||34842===s||34836===s)&&t.get("EXT_color_buffer_float"),s}function v(e,t,a){return!0===f(e,a)||e.isFramebufferTexture&&e.minFilter!==_i&&e.minFilter!==Ei?Ka(n(t.width,t.height))+1:void 0!==e.mipmaps&&0<e.mipmaps.length?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function _(e){return e===_i||e===bi||e===Mi?9728:9729}function b(e){const t=e.target;t.removeEventListener("dispose",b),M(t),t.isVideoTexture&&Y.delete(t)}function S(e){const t=e.target;t.removeEventListener("dispose",S),E(t)}function M(e){const t=r.get(e);if(void 0!==t.__webglInit){const a=e.source,i=K.get(a);if(i){const r=i[t.__cacheKey];r.usedTimes--,0===r.usedTimes&&T(e),0===Object.keys(i).length&&K.delete(a)}r.remove(e)}}function T(t){const a=r.get(t);e.deleteTexture(a.__webglTexture);const i=t.source,n=K.get(i);delete n[a.__cacheKey],d.memory.textures--}function E(t){const a=t.texture,n=r.get(t),i=r.get(a);if(void 0!==i.__webglTexture&&(e.deleteTexture(i.__webglTexture),d.memory.textures--),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let t=0;6>t;t++)e.deleteFramebuffer(n.__webglFramebuffer[t]),n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer[t]);else e.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&e.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer&&e.deleteRenderbuffer(n.__webglColorRenderbuffer),n.__webglDepthRenderbuffer&&e.deleteRenderbuffer(n.__webglDepthRenderbuffer);if(t.isWebGLMultipleRenderTargets)for(let t=0,i=a.length;t<i;t++){const i=r.get(a[t]);i.__webglTexture&&(e.deleteTexture(i.__webglTexture),d.memory.textures--),r.remove(a[t])}r.remove(a),r.remove(t)}function w(){const e=Q;return e>=V&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+V),Q+=1,e}function A(e){const t=[e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.anisotropy,e.internalFormat,e.format,e.type,e.generateMipmaps,e.premultiplyAlpha,e.flipY,e.unpackAlignment,e.encoding];return t.join()}function R(e,t){const i=r.get(e);if(e.isVideoTexture&&O(e),!1===e.isRenderTargetTexture&&0<e.version&&i.__version!==e.version){const a=e.image;if(null===a)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(!1===a.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else return void P(i,e,t)}a.activeTexture(33984+t),a.bindTexture(3553,i.__webglTexture)}function L(a,n,s){if(s?(e.texParameteri(a,10242,$[n.wrapS]),e.texParameteri(a,10243,$[n.wrapT]),(32879===a||35866===a)&&e.texParameteri(a,32882,$[n.wrapR]),e.texParameteri(a,10240,ee[n.magFilter]),e.texParameteri(a,10241,ee[n.minFilter])):(e.texParameteri(a,10242,33071),e.texParameteri(a,10243,33071),(32879===a||35866===a)&&e.texParameteri(a,32882,33071),(n.wrapS!==xi||n.wrapT!==xi)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(a,10240,_(n.magFilter)),e.texParameteri(a,10241,_(n.minFilter)),n.minFilter!==_i&&n.minFilter!==Ei&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===t.has("EXT_texture_filter_anisotropic")){const s=t.get("EXT_texture_filter_anisotropic");if(n.type===Ni&&!1===t.has("OES_texture_float_linear"))return;if(!1===G&&n.type===Ui&&!1===t.has("OES_texture_half_float_linear"))return;(1<n.anisotropy||r.get(n).__currentAnisotropy)&&(e.texParameterf(a,s.TEXTURE_MAX_ANISOTROPY_EXT,o(n.anisotropy,i.getMaxAnisotropy())),r.get(n).__currentAnisotropy=n.anisotropy)}}function C(t,a){let r=!1;void 0===t.__webglInit&&(t.__webglInit=!0,a.addEventListener("dispose",b));const i=a.source;let n=K.get(i);void 0===n&&(n={},K.set(i,n));const o=A(a);if(o!==t.__cacheKey){void 0===n[o]&&(n[o]={texture:e.createTexture(),usedTimes:0},d.memory.textures++,r=!0),n[o].usedTimes++;const i=n[t.__cacheKey];void 0!==i&&(n[t.__cacheKey].usedTimes--,0===i.usedTimes&&T(a)),t.__cacheKey=o,t.__webglTexture=n[o].texture}return r}function P(t,r,i){let n=3553;r.isDataArrayTexture&&(n=35866),r.isData3DTexture&&(n=32879);const o=C(t,r),d=r.source;if(a.activeTexture(33984+i),a.bindTexture(n,t.__webglTexture),d.version!==d.__currentVersion||!0===o){e.pixelStorei(37440,r.flipY),e.pixelStorei(37441,r.premultiplyAlpha),e.pixelStorei(3317,r.unpackAlignment),e.pixelStorei(37443,0);const i=u(r)&&!1===c(r.image);let l=p(r.image,i,!1,W);l=F(r,l);const m=c(l)||G,g=s.convert(r.format,r.encoding);let x=s.convert(r.type),_=y(r.internalFormat,g,x,r.encoding,r.isVideoTexture);L(n,r,m);let b;const S=r.mipmaps,M=G&&!0!==r.isVideoTexture,T=void 0===t.__version||!0===o,E=v(r,l,m);if(r.isDepthTexture)_=6402,G?r.type===Ni?_=36012:r.type===Bi?_=33190:r.type===Fi?_=35056:_=33189:r.type===Ni&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===qi&&6402===_&&r.type!==Ii&&r.type!==Bi&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=Ii,x=s.convert(r.type)),r.format===Xi&&6402===_&&(_=34041,r.type!==Fi&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=Fi,x=s.convert(r.type))),T&&(M?a.texStorage2D(3553,1,_,l.width,l.height):a.texImage2D(3553,0,_,l.width,l.height,0,g,x,null));else if(r.isDataTexture){if(0<S.length&&m){M&&T&&a.texStorage2D(3553,E,_,S[0].width,S[0].height);for(let e=0,t=S.length;e<t;e++)b=S[e],M?a.texSubImage2D(3553,e,0,0,b.width,b.height,g,x,b.data):a.texImage2D(3553,e,_,b.width,b.height,0,g,x,b.data);r.generateMipmaps=!1}else M?(T&&a.texStorage2D(3553,E,_,l.width,l.height),a.texSubImage2D(3553,0,0,0,l.width,l.height,g,x,l.data)):a.texImage2D(3553,0,_,l.width,l.height,0,g,x,l.data);}else if(r.isCompressedTexture){M&&T&&a.texStorage2D(3553,E,_,S[0].width,S[0].height);for(let e=0,t=S.length;e<t;e++)b=S[e],r.format===ki?M?a.texSubImage2D(3553,e,0,0,b.width,b.height,g,x,b.data):a.texImage2D(3553,e,_,b.width,b.height,0,g,x,b.data):null===g?console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):M?a.compressedTexSubImage2D(3553,e,0,0,b.width,b.height,g,b.data):a.compressedTexImage2D(3553,e,_,b.width,b.height,0,b.data)}else if(r.isDataArrayTexture)M?(T&&a.texStorage3D(35866,E,_,l.width,l.height,l.depth),a.texSubImage3D(35866,0,0,0,0,l.width,l.height,l.depth,g,x,l.data)):a.texImage3D(35866,0,_,l.width,l.height,l.depth,0,g,x,l.data);else if(r.isData3DTexture)M?(T&&a.texStorage3D(32879,E,_,l.width,l.height,l.depth),a.texSubImage3D(32879,0,0,0,0,l.width,l.height,l.depth,g,x,l.data)):a.texImage3D(32879,0,_,l.width,l.height,l.depth,0,g,x,l.data);else if(r.isFramebufferTexture){if(T)if(M)a.texStorage2D(3553,E,_,l.width,l.height);else{let e=l.width,t=l.height;for(let r=0;r<E;r++)a.texImage2D(3553,r,_,e,t,0,g,x,null),e>>=1,t>>=1}}else if(0<S.length&&m){M&&T&&a.texStorage2D(3553,E,_,S[0].width,S[0].height);for(let e=0,t=S.length;e<t;e++)b=S[e],M?a.texSubImage2D(3553,e,0,0,g,x,b):a.texImage2D(3553,e,_,g,x,b);r.generateMipmaps=!1}else M?(T&&a.texStorage2D(3553,E,_,l.width,l.height),a.texSubImage2D(3553,0,0,0,g,x,l)):a.texImage2D(3553,0,_,g,x,l);f(r,m)&&h(n),d.__currentVersion=d.version,r.onUpdate&&r.onUpdate(r)}t.__version=r.version}function D(t,r,i){if(6===r.image.length){const n=C(t,r),o=r.source;if(a.activeTexture(33984+i),a.bindTexture(34067,t.__webglTexture),o.version!==o.__currentVersion||!0===n){e.pixelStorei(37440,r.flipY),e.pixelStorei(37441,r.premultiplyAlpha),e.pixelStorei(3317,r.unpackAlignment),e.pixelStorei(37443,0);const n=r.isCompressedTexture||r.image[0].isCompressedTexture,d=r.image[0]&&r.image[0].isDataTexture,l=[];for(let e=0;6>e;e++)l[e]=n||d?d?r.image[e].image:r.image[e]:p(r.image[e],!1,!0,k),l[e]=F(r,l[e]);const i=l[0],u=c(i)||G,m=s.convert(r.format,r.encoding),g=s.convert(r.type),x=y(r.internalFormat,m,g,r.encoding),_=G&&!0!==r.isVideoTexture,b=void 0===t.__version;let S=v(r,i,u);L(34067,r,u);let M;if(n){_&&b&&a.texStorage2D(34067,S,x,i.width,i.height);for(let e=0;6>e;e++){M=l[e].mipmaps;for(let t=0;t<M.length;t++){const i=M[t];r.format===ki?_?a.texSubImage2D(34069+e,t,0,0,i.width,i.height,m,g,i.data):a.texImage2D(34069+e,t,x,i.width,i.height,0,m,g,i.data):null===m?console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):_?a.compressedTexSubImage2D(34069+e,t,0,0,i.width,i.height,m,i.data):a.compressedTexImage2D(34069+e,t,x,i.width,i.height,0,i.data)}}}else{M=r.mipmaps,_&&b&&(0<M.length&&S++,a.texStorage2D(34067,S,x,l[0].width,l[0].height));for(let e=0;6>e;e++)if(d){_?a.texSubImage2D(34069+e,0,0,0,l[e].width,l[e].height,m,g,l[e].data):a.texImage2D(34069+e,0,x,l[e].width,l[e].height,0,m,g,l[e].data);for(let t=0;t<M.length;t++){const r=M[t],i=r.image[e].image;_?a.texSubImage2D(34069+e,t+1,0,0,i.width,i.height,m,g,i.data):a.texImage2D(34069+e,t+1,x,i.width,i.height,0,m,g,i.data)}}else{_?a.texSubImage2D(34069+e,0,0,0,m,g,l[e]):a.texImage2D(34069+e,0,x,m,g,l[e]);for(let t=0;t<M.length;t++){const r=M[t];_?a.texSubImage2D(34069+e,t+1,0,0,m,g,r.image[e]):a.texImage2D(34069+e,t+1,x,m,g,r.image[e])}}}f(r,u)&&h(34067),o.__currentVersion=o.version,r.onUpdate&&r.onUpdate(r)}t.__version=r.version}}function I(t,i,n,o,d){const l=s.convert(n.format,n.encoding),p=s.convert(n.type),c=y(n.internalFormat,l,p,n.encoding),u=r.get(i);u.__hasExternalTextures||(32879===d||35866===d?a.texImage3D(d,0,c,i.width,i.height,i.depth,0,l,p,null):a.texImage2D(d,0,c,i.width,i.height,0,l,p,null)),a.bindFramebuffer(36160,t),H(i)?q.framebufferTexture2DMultisampleEXT(36160,o,d,r.get(n).__webglTexture,0,U(i)):e.framebufferTexture2D(36160,o,d,r.get(n).__webglTexture,0),a.bindFramebuffer(36160,null)}function z(t,a,r){if(e.bindRenderbuffer(36161,t),a.depthBuffer&&!a.stencilBuffer){let i=33189;if(r||H(a)){const t=a.depthTexture;t&&t.isDepthTexture&&(t.type===Ni?i=36012:t.type===Bi&&(i=33190));const r=U(a);H(a)?q.renderbufferStorageMultisampleEXT(36161,r,i,a.width,a.height):e.renderbufferStorageMultisample(36161,r,i,a.width,a.height)}else e.renderbufferStorage(36161,i,a.width,a.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(a.depthBuffer&&a.stencilBuffer){const i=U(a);r&&!1===H(a)?e.renderbufferStorageMultisample(36161,i,35056,a.width,a.height):H(a)?q.renderbufferStorageMultisampleEXT(36161,i,35056,a.width,a.height):e.renderbufferStorage(36161,34041,a.width,a.height),e.framebufferRenderbuffer(36160,33306,36161,t)}else{const t=!0===a.isWebGLMultipleRenderTargets?a.texture[0]:a.texture,i=s.convert(t.format,t.encoding),n=s.convert(t.type),o=y(t.internalFormat,i,n,t.encoding),d=U(a);r&&!1===H(a)?e.renderbufferStorageMultisample(36161,d,o,a.width,a.height):H(a)?q.renderbufferStorageMultisampleEXT(36161,d,o,a.width,a.height):e.renderbufferStorage(36161,o,a.width,a.height)}e.bindRenderbuffer(36161,null)}function B(t,i){const n=i&&i.isWebGLCubeRenderTarget;if(n)throw new Error("Depth Texture with cube render targets is not supported");if(a.bindFramebuffer(36160,t),!(i.depthTexture&&i.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),R(i.depthTexture,0);const o=r.get(i.depthTexture).__webglTexture,s=U(i);if(i.depthTexture.format===qi)H(i)?q.framebufferTexture2DMultisampleEXT(36160,36096,3553,o,0,s):e.framebufferTexture2D(36160,36096,3553,o,0);else if(i.depthTexture.format===Xi)H(i)?q.framebufferTexture2DMultisampleEXT(36160,33306,3553,o,0,s):e.framebufferTexture2D(36160,33306,3553,o,0);else throw new Error("Unknown depthTexture format")}function N(t){const n=r.get(t),i=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!n.__autoAllocateDepthBuffer){if(i)throw new Error("target.depthTexture not supported in Cube render targets");B(n.__webglFramebuffer,t)}else if(i){n.__webglDepthbuffer=[];for(let r=0;6>r;r++)a.bindFramebuffer(36160,n.__webglFramebuffer[r]),n.__webglDepthbuffer[r]=e.createRenderbuffer(),z(n.__webglDepthbuffer[r],t,!1)}else a.bindFramebuffer(36160,n.__webglFramebuffer),n.__webglDepthbuffer=e.createRenderbuffer(),z(n.__webglDepthbuffer,t,!1);a.bindFramebuffer(36160,null)}function U(e){return o(j,e.samples)}function H(e){const a=r.get(e);return G&&0<e.samples&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==a.__useRenderToTexture}function O(e){const t=d.render.frame;Y.get(e)!==t&&(Y.set(e,t),e.update())}function F(e,a){const r=e.encoding,i=e.format,n=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||e.format===Mo?a:(r!==Fn&&(r===Gn?!1===G?!0===t.has("EXT_sRGB")&&i===ki?(e.format=Mo,e.minFilter=Ei,e.generateMipmaps=!1):a=Go.sRGBToLinear(a):(i!==ki||n!==Ci)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",r)),a)}const G=i.isWebGL2,V=i.maxTextures,k=i.maxCubemapSize,W=i.maxTextureSize,j=i.maxSamples,q=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,X=/OculusBrowser/g.test(navigator.userAgent),Y=new WeakMap;let Z;const K=new WeakMap;let J=!1;try{J="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}let Q=0;const $={[yi]:10497,[xi]:33071,[vi]:33648},ee={[_i]:9728,[bi]:9984,[Mi]:9986,[Ei]:9729,[wi]:9985,[Ri]:9987};this.allocateTextureUnit=w,this.resetTextureUnits=function(){Q=0},this.setTexture2D=R,this.setTexture2DArray=function(e,t){const i=r.get(e);return 0<e.version&&i.__version!==e.version?void P(i,e,t):void(a.activeTexture(33984+t),a.bindTexture(35866,i.__webglTexture))},this.setTexture3D=function(e,t){const i=r.get(e);return 0<e.version&&i.__version!==e.version?void P(i,e,t):void(a.activeTexture(33984+t),a.bindTexture(32879,i.__webglTexture))},this.setTextureCube=function(e,t){const i=r.get(e);return 0<e.version&&i.__version!==e.version?void D(i,e,t):void(a.activeTexture(33984+t),a.bindTexture(34067,i.__webglTexture))},this.rebindTextures=function(e,t,a){const i=r.get(e);void 0!==t&&I(i.__webglFramebuffer,e,e.texture,36064,3553),void 0!==a&&N(e)},this.setupRenderTarget=function(t){const n=t.texture,o=r.get(t),l=r.get(n);t.addEventListener("dispose",S),!0!==t.isWebGLMultipleRenderTargets&&(void 0===l.__webglTexture&&(l.__webglTexture=e.createTexture()),l.__version=n.version,d.memory.textures++);const p=!0===t.isWebGLCubeRenderTarget,u=!0===t.isWebGLMultipleRenderTargets,m=c(t)||G;if(p){o.__webglFramebuffer=[];for(let t=0;6>t;t++)o.__webglFramebuffer[t]=e.createFramebuffer()}else if(o.__webglFramebuffer=e.createFramebuffer(),u){if(i.drawBuffers){const a=t.texture;for(let t=0,i=a.length;t<i;t++){const i=r.get(a[t]);void 0===i.__webglTexture&&(i.__webglTexture=e.createTexture(),d.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");}else if(G&&0<t.samples&&!1===H(t)){o.__webglMultisampledFramebuffer=e.createFramebuffer(),o.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,o.__webglColorRenderbuffer);const r=s.convert(n.format,n.encoding),i=s.convert(n.type),d=y(n.internalFormat,r,i,n.encoding),l=U(t);e.renderbufferStorageMultisample(36161,l,d,t.width,t.height),a.bindFramebuffer(36160,o.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,o.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(o.__webglDepthRenderbuffer=e.createRenderbuffer(),z(o.__webglDepthRenderbuffer,t,!0)),a.bindFramebuffer(36160,null)}if(p){a.bindTexture(34067,l.__webglTexture),L(34067,n,m);for(let e=0;6>e;e++)I(o.__webglFramebuffer[e],t,n,36064,34069+e);f(n,m)&&h(34067),a.unbindTexture()}else if(u){const e=t.texture;for(let n=0,i=e.length;n<i;n++){const i=e[n],s=r.get(i);a.bindTexture(3553,s.__webglTexture),L(3553,i,m),I(o.__webglFramebuffer,t,i,36064+n,3553),f(i,m)&&h(3553)}a.unbindTexture()}else{let e=3553;(t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(G?e=t.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),a.bindTexture(e,l.__webglTexture),L(e,n,m),I(o.__webglFramebuffer,t,n,36064,e),f(n,m)&&h(e),a.unbindTexture()}t.depthBuffer&&N(t)},this.updateRenderTargetMipmap=function(e){const t=c(e)||G,n=!0===e.isWebGLMultipleRenderTargets?e.texture:[e.texture];for(let o=0,i=n.length;o<i;o++){const i=n[o];if(f(i,t)){const t=e.isWebGLCubeRenderTarget?34067:3553,n=r.get(i).__webglTexture;a.bindTexture(t,n),h(t),a.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(G&&0<t.samples&&!1===H(t)){const i=t.width,n=t.height;let o=16384;const s=[36064],d=t.stencilBuffer?33306:36096;t.depthBuffer&&s.push(d);const l=r.get(t),p=void 0!==l.__ignoreDepthValues&&l.__ignoreDepthValues;!1===p&&(t.depthBuffer&&(o|=256),t.stencilBuffer&&(o|=1024)),a.bindFramebuffer(36008,l.__webglMultisampledFramebuffer),a.bindFramebuffer(36009,l.__webglFramebuffer),!0===p&&(e.invalidateFramebuffer(36008,[d]),e.invalidateFramebuffer(36009,[d])),e.blitFramebuffer(0,0,i,n,0,0,i,n,o,9728),X&&e.invalidateFramebuffer(36008,s),a.bindFramebuffer(36008,null),a.bindFramebuffer(36009,l.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=N,this.setupFrameBufferTexture=I,this.useMultisampledRTT=H}function Bt(e,t,a){const r=a.isWebGL2;return{convert:function(a,i=null){let n;if(a===Ci)return 5121;if(a===Hi)return 32819;if(a===Oi)return 32820;if(a===Pi)return 5120;if(a===Di)return 5122;if(a===Ii)return 5123;if(a===zi)return 5124;if(a===Bi)return 5125;if(a===Ni)return 5126;if(a===Ui)return r?5131:(n=t.get("OES_texture_half_float"),null===n?null:n.HALF_FLOAT_OES);if(a===Gi)return 6406;if(a===ki)return 6408;if(a===Wi)return 6409;if(a===ji)return 6410;if(a===qi)return 6402;if(a===Xi)return 34041;if(a===Yi)return 6403;if(a===Vi)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(a===Mo)return n=t.get("EXT_sRGB"),null===n?null:n.SRGB_ALPHA_EXT;if(a===Zi)return 36244;if(a===Ki)return 33319;if(a===Ji)return 33320;if(a===Qi)return 36249;if(a===$i||a===en||a===tn||a===an)if(i===Gn){if(n=t.get("WEBGL_compressed_texture_s3tc_srgb"),null!==n){if(a===$i)return n.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(a===en)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(a===tn)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(a===an)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;}else if(n=t.get("WEBGL_compressed_texture_s3tc"),null!==n){if(a===$i)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===en)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===tn)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===an)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(a===rn||a===nn||a===on||a===sn)if(n=t.get("WEBGL_compressed_texture_pvrtc"),null!==n){if(a===rn)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===nn)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===on)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===sn)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(a===dn)return n=t.get("WEBGL_compressed_texture_etc1"),null===n?null:n.COMPRESSED_RGB_ETC1_WEBGL;if(a===ln||a===pn)if(n=t.get("WEBGL_compressed_texture_etc"),null!==n){if(a===ln)return i===Gn?n.COMPRESSED_SRGB8_ETC2:n.COMPRESSED_RGB8_ETC2;if(a===pn)return i===Gn?n.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:n.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(a===cn||a===un||a===mn||a===fn||a===gn||a===hn||a===yn||a===xn||a===vn||a===_n||a===bn||a===Sn||a===Mn||a===Tn)if(n=t.get("WEBGL_compressed_texture_astc"),null!==n){if(a===cn)return i===Gn?n.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:n.COMPRESSED_RGBA_ASTC_4x4_KHR;if(a===un)return i===Gn?n.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:n.COMPRESSED_RGBA_ASTC_5x4_KHR;if(a===mn)return i===Gn?n.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:n.COMPRESSED_RGBA_ASTC_5x5_KHR;if(a===fn)return i===Gn?n.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:n.COMPRESSED_RGBA_ASTC_6x5_KHR;if(a===gn)return i===Gn?n.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:n.COMPRESSED_RGBA_ASTC_6x6_KHR;if(a===hn)return i===Gn?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:n.COMPRESSED_RGBA_ASTC_8x5_KHR;if(a===yn)return i===Gn?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:n.COMPRESSED_RGBA_ASTC_8x6_KHR;if(a===xn)return i===Gn?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:n.COMPRESSED_RGBA_ASTC_8x8_KHR;if(a===vn)return i===Gn?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:n.COMPRESSED_RGBA_ASTC_10x5_KHR;if(a===_n)return i===Gn?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:n.COMPRESSED_RGBA_ASTC_10x6_KHR;if(a===bn)return i===Gn?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:n.COMPRESSED_RGBA_ASTC_10x8_KHR;if(a===Sn)return i===Gn?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:n.COMPRESSED_RGBA_ASTC_10x10_KHR;if(a===Mn)return i===Gn?n.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:n.COMPRESSED_RGBA_ASTC_12x10_KHR;if(a===Tn)return i===Gn?n.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:n.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(a===En){if(n=t.get("EXT_texture_compression_bptc"),null===n)return null;if(a===En)return i===Gn?n.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:n.COMPRESSED_RGBA_BPTC_UNORM_EXT}return a===Fi?r?34042:(n=t.get("WEBGL_depth_texture"),null===n?null:n.UNSIGNED_INT_24_8_WEBGL):void 0===e[a]?null:e[a]}}}function Nt(e,t){function a(a,r){a.opacity.value=r.opacity,r.color&&a.diffuse.value.copy(r.color),r.emissive&&a.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(a.map.value=r.map),r.alphaMap&&(a.alphaMap.value=r.alphaMap),r.bumpMap&&(a.bumpMap.value=r.bumpMap,a.bumpScale.value=r.bumpScale,r.side===Sr&&(a.bumpScale.value*=-1)),r.displacementMap&&(a.displacementMap.value=r.displacementMap,a.displacementScale.value=r.displacementScale,a.displacementBias.value=r.displacementBias),r.emissiveMap&&(a.emissiveMap.value=r.emissiveMap),r.normalMap&&(a.normalMap.value=r.normalMap,a.normalScale.value.copy(r.normalScale),r.side===Sr&&a.normalScale.value.negate()),r.specularMap&&(a.specularMap.value=r.specularMap),0<r.alphaTest&&(a.alphaTest.value=r.alphaTest);const i=t.get(r).envMap;if(i&&(a.envMap.value=i,a.flipEnvMap.value=i.isCubeTexture&&!1===i.isRenderTargetTexture?-1:1,a.reflectivity.value=r.reflectivity,a.ior.value=r.ior,a.refractionRatio.value=r.refractionRatio),r.lightMap){a.lightMap.value=r.lightMap;const t=!0===e.physicallyCorrectLights?1:s;a.lightMapIntensity.value=r.lightMapIntensity*t}r.aoMap&&(a.aoMap.value=r.aoMap,a.aoMapIntensity.value=r.aoMapIntensity);let n;r.map?n=r.map:r.specularMap?n=r.specularMap:r.displacementMap?n=r.displacementMap:r.normalMap?n=r.normalMap:r.bumpMap?n=r.bumpMap:r.roughnessMap?n=r.roughnessMap:r.metalnessMap?n=r.metalnessMap:r.alphaMap?n=r.alphaMap:r.emissiveMap?n=r.emissiveMap:r.clearcoatMap?n=r.clearcoatMap:r.clearcoatNormalMap?n=r.clearcoatNormalMap:r.clearcoatRoughnessMap?n=r.clearcoatRoughnessMap:r.specularIntensityMap?n=r.specularIntensityMap:r.specularColorMap?n=r.specularColorMap:r.transmissionMap?n=r.transmissionMap:r.thicknessMap?n=r.thicknessMap:r.sheenColorMap?n=r.sheenColorMap:r.sheenRoughnessMap&&(n=r.sheenRoughnessMap),void 0!==n&&(n.isWebGLRenderTarget&&(n=n.texture),!0===n.matrixAutoUpdate&&n.updateMatrix(),a.uvTransform.value.copy(n.matrix));let o;r.aoMap?o=r.aoMap:r.lightMap&&(o=r.lightMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),a.uv2Transform.value.copy(o.matrix))}function r(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}function i(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}function o(e,t,a,r){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*a,e.scale.value=.5*r,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),0<t.alphaTest&&(e.alphaTest.value=t.alphaTest);let i;t.map?i=t.map:t.alphaMap&&(i=t.alphaMap),void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix))}function d(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),0<t.alphaTest&&(e.alphaTest.value=t.alphaTest);let a;t.map?a=t.map:t.alphaMap&&(a=t.alphaMap),void 0!==a&&(!0===a.matrixAutoUpdate&&a.updateMatrix(),e.uvTransform.value.copy(a.matrix))}function l(e,t){e.specular.value.copy(t.specular),e.shininess.value=n(t.shininess,1e-4)}function p(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap)}function c(e,a){e.roughness.value=a.roughness,e.metalness.value=a.metalness,a.roughnessMap&&(e.roughnessMap.value=a.roughnessMap),a.metalnessMap&&(e.metalnessMap.value=a.metalnessMap);const r=t.get(a).envMap;r&&(e.envMapIntensity.value=a.envMapIntensity)}function u(e,t,a){e.ior.value=t.ior,0<t.sheen&&(e.sheenColor.value.copy(t.sheenColor).multiplyScalar(t.sheen),e.sheenRoughness.value=t.sheenRoughness,t.sheenColorMap&&(e.sheenColorMap.value=t.sheenColorMap),t.sheenRoughnessMap&&(e.sheenRoughnessMap.value=t.sheenRoughnessMap)),0<t.clearcoat&&(e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap),t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,t.side===Sr&&e.clearcoatNormalScale.value.negate())),0<t.transmission&&(e.transmission.value=t.transmission,e.transmissionSamplerMap.value=a.texture,e.transmissionSamplerSize.value.set(a.width,a.height),t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap),e.thickness.value=t.thickness,t.thicknessMap&&(e.thicknessMap.value=t.thicknessMap),e.attenuationDistance.value=t.attenuationDistance,e.attenuationColor.value.copy(t.attenuationColor)),e.specularIntensity.value=t.specularIntensity,e.specularColor.value.copy(t.specularColor),t.specularIntensityMap&&(e.specularIntensityMap.value=t.specularIntensityMap),t.specularColorMap&&(e.specularColorMap.value=t.specularColorMap)}function m(e,t){t.matcap&&(e.matcap.value=t.matcap)}function f(e,t){e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,t,n,s,g){t.isMeshBasicMaterial?a(e,t):t.isMeshLambertMaterial?a(e,t):t.isMeshToonMaterial?(a(e,t),p(e,t)):t.isMeshPhongMaterial?(a(e,t),l(e,t)):t.isMeshStandardMaterial?(a(e,t),c(e,t),t.isMeshPhysicalMaterial&&u(e,t,g)):t.isMeshMatcapMaterial?(a(e,t),m(e,t)):t.isMeshDepthMaterial?a(e,t):t.isMeshDistanceMaterial?(a(e,t),f(e,t)):t.isMeshNormalMaterial?a(e,t):t.isLineBasicMaterial?(r(e,t),t.isLineDashedMaterial&&i(e,t)):t.isPointsMaterial?o(e,t,n,s):t.isSpriteMaterial?d(e,t):t.isShadowMaterial?(e.color.value.copy(t.color),e.opacity.value=t.opacity):t.isShaderMaterial&&(t.uniformsNeedUpdate=!1)}}}function Ut(){const e=x("canvas");return e.style.display="block",e}function Ht(e={}){function t(){return null===ne?me:1}function r(e,t){for(let a=0;a<e.length;a++){const r=e[a],i=w.getContext(r,t);if(null!==i)return i}return null}function i(){Re=new j(Ae),Le=new z(Ae,Re,e),Re.init(Le),Ke=new Bt(Ae,Re,Le),Ce=new It(Ae,Re,Le),Pe=new Y(Ae),De=new bt,Ie=new zt(Ae,Re,Ce,De,Le,Ke,Pe),ze=new N(te),Be=new W(te),Ne=new C(Ae,Le),Je=new D(Ae,Re,Ne,Le),Ue=new q(Ae,Ne,Pe,Je),He=new $(Ae,Ue,Ne,Pe),qe=new Q(Ae,Le,Ie),ke=new B(De),Oe=new _t(te,ze,Be,Re,Le,Je,ke),Fe=new Nt(te,De),Ge=new Et,Ve=new Pt(Re,Le),je=new P(te,ze,Ce,He,k,O),We=new Dt(te,He,Le),Xe=new I(Ae,Re,Pe,Le),Ye=new X(Ae,Re,Pe,Le),Pe.programs=Oe.programs,te.capabilities=Le,te.extensions=Re,te.properties=De,te.renderLists=Ge,te.shadowMap=We,te.state=Ce,te.info=Pe}function s(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),ae=!0}function d(){console.log("THREE.WebGLRenderer: Context Restored."),ae=!1;const e=Pe.autoReset,t=We.enabled,a=We.autoUpdate,r=We.needsUpdate,n=We.type;i(),Pe.autoReset=e,We.enabled=t,We.autoUpdate=a,We.needsUpdate=r,We.type=n}function l(e){const t=e.target;t.removeEventListener("dispose",l),p(t)}function p(e){c(e),De.remove(e)}function c(e){const t=De.get(e).programs;void 0!==t&&(t.forEach(function(e){Oe.releaseProgram(e)}),e.isShaderMaterial&&Oe.releaseShaderCache(e))}function u(e){$e&&$e(e)}function m(){et.stop()}function f(){et.start()}function h(e,t,a,r){if(!1!==e.visible){const i=e.layers.test(t.layers);if(i)if(e.isGroup)a=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)K.pushLight(e),e.castShadow&&K.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||ve.intersectsSprite(e)){r&&Ee.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Me);const t=He.update(e),i=e.material;i.visible&&Z.push(e,t,i,a,Ee.z,null)}}else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==Pe.render.frame&&(e.skeleton.update(),e.skeleton.frame=Pe.render.frame),!e.frustumCulled||ve.intersectsObject(e))){r&&Ee.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Me);const t=He.update(e),n=e.material;if(Array.isArray(n)){const r=t.groups;for(let o=0,i=r.length;o<i;o++){const i=r[o],s=n[i.materialIndex];s&&s.visible&&Z.push(e,t,s,a,Ee.z,i)}}else n.visible&&Z.push(e,t,n,a,Ee.z,null)}const n=e.children;for(let e=0,i=n.length;e<i;e++)h(n[e],t,a,r)}}function y(e,t,a,r){const i=e.opaque,n=e.transmissive,o=e.transparent;K.setupLightsView(a),0<n.length&&x(i,t,a),r&&Ce.viewport(de.copy(r)),0<i.length&&v(i,t,a),0<n.length&&v(n,t,a),0<o.length&&v(o,t,a),Ce.buffers.depth.setTest(!0),Ce.buffers.depth.setMask(!0),Ce.buffers.color.setMask(!0),Ce.setPolygonOffset(!1)}function x(e,t,a){const r=Le.isWebGL2;null===Se&&(Se=new qo(1,1,{generateMipmaps:!0,type:Re.has("EXT_color_buffer_half_float")?Ui:Ci,minFilter:Ri,samples:r&&!0===H?4:0})),te.getDrawingBufferSize(Te),r?Se.setSize(Te.x,Te.y):Se.setSize(g(Te.x),g(Te.y));const i=te.getRenderTarget();te.setRenderTarget(Se),te.clear();const n=te.toneMapping;te.toneMapping=ni,v(e,t,a),te.toneMapping=n,Ie.updateMultisampleRenderTarget(Se),Ie.updateRenderTargetMipmap(Se),te.setRenderTarget(i)}function v(e,t,a){const r=!0===t.isScene?t.overrideMaterial:null;for(let n=0,i=e.length;n<i;n++){const i=e[n],o=i.object,s=i.geometry,d=null===r?i.material:r,l=i.group;o.layers.test(a.layers)&&_(o,t,a,s,d,l)}}function _(e,t,a,r,i,n){e.onBeforeRender(te,t,a,r,i,n),e.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),i.onBeforeRender(te,t,a,r,e,n),!0===i.transparent&&i.side===Mr?(i.side=Sr,i.needsUpdate=!0,te.renderBufferDirect(a,t,r,i,e,n),i.side=br,i.needsUpdate=!0,te.renderBufferDirect(a,t,r,i,e,n),i.side=Mr):te.renderBufferDirect(a,t,r,i,e,n),e.onAfterRender(te,t,a,r,i,n)}function b(e,t,a){!0!==t.isScene&&(t=we);const r=De.get(e),i=K.state.lights,n=K.state.shadowsArray,o=i.state.version,s=Oe.getParameters(e,i.state,n,t,a),d=Oe.getProgramCacheKey(s);let p=r.programs;r.environment=e.isMeshStandardMaterial?t.environment:null,r.fog=t.fog,r.envMap=(e.isMeshStandardMaterial?Be:ze).get(e.envMap||r.environment),void 0===p&&(e.addEventListener("dispose",l),p=new Map,r.programs=p);let c=p.get(d);if(void 0===c)s.uniforms=Oe.getUniforms(e),e.onBuild(a,s,te),e.onBeforeCompile(s,te),c=Oe.acquireProgram(s,d),p.set(d,c),r.uniforms=s.uniforms;else if(r.currentProgram===c&&r.lightsStateVersion===o)return S(e,s),c;const u=r.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(u.clippingPlanes=ke.uniform),S(e,s),r.needsLights=E(e),r.lightsStateVersion=o,r.needsLights&&(u.ambientLightColor.value=i.state.ambient,u.lightProbe.value=i.state.probe,u.directionalLights.value=i.state.directional,u.directionalLightShadows.value=i.state.directionalShadow,u.spotLights.value=i.state.spot,u.spotLightShadows.value=i.state.spotShadow,u.rectAreaLights.value=i.state.rectArea,u.ltc_1.value=i.state.rectAreaLTC1,u.ltc_2.value=i.state.rectAreaLTC2,u.pointLights.value=i.state.point,u.pointLightShadows.value=i.state.pointShadow,u.hemisphereLights.value=i.state.hemi,u.directionalShadowMap.value=i.state.directionalShadowMap,u.directionalShadowMatrix.value=i.state.directionalShadowMatrix,u.spotShadowMap.value=i.state.spotShadowMap,u.spotShadowMatrix.value=i.state.spotShadowMatrix,u.pointShadowMap.value=i.state.pointShadowMap,u.pointShadowMatrix.value=i.state.pointShadowMatrix);const m=c.getUniforms(),f=Ze.seqWithValue(m.seq,u);return r.currentProgram=c,r.uniformsList=f,c}function S(e,t){const a=De.get(e);a.outputEncoding=t.outputEncoding,a.instancing=t.instancing,a.skinning=t.skinning,a.morphTargets=t.morphTargets,a.morphNormals=t.morphNormals,a.morphColors=t.morphColors,a.morphTargetsCount=t.morphTargetsCount,a.numClippingPlanes=t.numClippingPlanes,a.numIntersection=t.numClipIntersection,a.vertexAlphas=t.vertexAlphas,a.vertexTangents=t.vertexTangents,a.toneMapping=t.toneMapping}function M(e,t,a,r,i){!0!==t.isScene&&(t=we),Ie.resetTextureUnits();const n=t.fog,o=r.isMeshStandardMaterial?t.environment:null,s=null===ne?te.outputEncoding:!0===ne.isXRRenderTarget?ne.texture.encoding:Fn,d=(r.isMeshStandardMaterial?Be:ze).get(r.envMap||o),l=!0===r.vertexColors&&!!a.attributes.color&&4===a.attributes.color.itemSize,p=!!r.normalMap&&!!a.attributes.tangent,c=!!a.morphAttributes.position,u=!!a.morphAttributes.normal,m=!!a.morphAttributes.color,f=r.toneMapped?te.toneMapping:ni,g=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,h=void 0===g?0:g.length,y=De.get(r),x=K.state.lights;if(!0===_e&&(!0===be||e!==se)){const t=e===se&&r.id===oe;ke.setState(r,e,t)}let v=!1;r.version===y.__version?y.needsLights&&y.lightsStateVersion!==x.state.version?v=!0:y.outputEncoding===s?i.isInstancedMesh&&!1===y.instancing?v=!0:i.isInstancedMesh||!0!==y.instancing?i.isSkinnedMesh&&!1===y.skinning?v=!0:i.isSkinnedMesh||!0!==y.skinning?y.envMap===d?!0===r.fog&&y.fog!==n?v=!0:void 0!==y.numClippingPlanes&&(y.numClippingPlanes!==ke.numPlanes||y.numIntersection!==ke.numIntersection)?v=!0:y.vertexAlphas===l?y.vertexTangents===p?y.morphTargets===c?y.morphNormals===u?y.morphColors===m?y.toneMapping===f?!0===Le.isWebGL2&&y.morphTargetsCount!==h&&(v=!0):v=!0:v=!0:v=!0:v=!0:v=!0:v=!0:v=!0:v=!0:v=!0:v=!0:(v=!0,y.__version=r.version);let _=y.currentProgram;!0==v&&(_=b(r,t,i));let S=!1,M=!1,E=!1;const w=_.getUniforms(),A=y.uniforms;if(Ce.useProgram(_.program)&&(S=!0,M=!0,E=!0),r.id!==oe&&(oe=r.id,M=!0),S||se!==e){if(w.setValue(Ae,"projectionMatrix",e.projectionMatrix),Le.logarithmicDepthBuffer&&w.setValue(Ae,"logDepthBufFC",2/(or(e.far+1)/nr)),se!==e&&(se=e,M=!0,E=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){const t=w.map.cameraPosition;void 0!==t&&t.setValue(Ae,Ee.setFromMatrixPosition(e.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&w.setValue(Ae,"isOrthographic",!0===e.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||i.isSkinnedMesh)&&w.setValue(Ae,"viewMatrix",e.matrixWorldInverse)}if(i.isSkinnedMesh){w.setOptional(Ae,i,"bindMatrix"),w.setOptional(Ae,i,"bindMatrixInverse");const e=i.skeleton;e&&(Le.floatVertexTextures?(null===e.boneTexture&&e.computeBoneTexture(),w.setValue(Ae,"boneTexture",e.boneTexture,Ie),w.setValue(Ae,"boneTextureSize",e.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const R=a.morphAttributes;return(void 0!==R.position||void 0!==R.normal||void 0!==R.color&&!0===Le.isWebGL2)&&qe.update(i,a,r,_),(M||y.receiveShadow!==i.receiveShadow)&&(y.receiveShadow=i.receiveShadow,w.setValue(Ae,"receiveShadow",i.receiveShadow)),M&&(w.setValue(Ae,"toneMappingExposure",te.toneMappingExposure),y.needsLights&&T(A,E),n&&!0===r.fog&&Fe.refreshFogUniforms(A,n),Fe.refreshMaterialUniforms(A,r,me,ue,Se),Ze.upload(Ae,y.uniformsList,A,Ie)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(Ze.upload(Ae,y.uniformsList,A,Ie),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&w.setValue(Ae,"center",i.center),w.setValue(Ae,"modelViewMatrix",i.modelViewMatrix),w.setValue(Ae,"normalMatrix",i.normalMatrix),w.setValue(Ae,"modelMatrix",i.matrixWorld),_}function T(e,t){e.ambientLightColor.needsUpdate=t,e.lightProbe.needsUpdate=t,e.directionalLights.needsUpdate=t,e.directionalLightShadows.needsUpdate=t,e.pointLights.needsUpdate=t,e.pointLightShadows.needsUpdate=t,e.spotLights.needsUpdate=t,e.spotLightShadows.needsUpdate=t,e.rectAreaLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}function E(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}const w=void 0===e.canvas?Ut():e.canvas,A=void 0===e.context?null:e.context,R=void 0===e.depth||e.depth,U=void 0===e.stencil||e.stencil,H=void 0!==e.antialias&&e.antialias,O=void 0===e.premultipliedAlpha||e.premultipliedAlpha,F=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,G=void 0===e.powerPreference?"default":e.powerPreference,V=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let k=null===A?void 0!==e.alpha&&e.alpha:A.getContextAttributes().alpha,Z=null,K=null;const J=[],ee=[];this.domElement=w,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Fn,this.physicallyCorrectLights=!1,this.toneMapping=ni,this.toneMappingExposure=1;const te=this;let ae=!1,re=0,ie=0,ne=null,oe=-1,se=null;const de=new jo,le=new jo;let pe=null,ce=w.width,ue=w.height,me=1,fe=null,ge=null;const he=new jo(0,0,ce,ue),ye=new jo(0,0,ce,ue);let xe=!1;const ve=new hl;let _e=!1,be=!1,Se=null;const Me=new Ls,Te=new Co,Ee=new $o,we={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let Ae=A;try{if("setAttribute"in w&&w.setAttribute("data-engine",`three.js r${pr}`),w.addEventListener("webglcontextlost",s,!1),w.addEventListener("webglcontextrestored",d,!1),null===Ae){const e=["webgl2","webgl","experimental-webgl"];if(!0===te.isWebGL1Renderer&&e.shift(),Ae=r(e,{alpha:!0,depth:R,stencil:U,antialias:H,premultipliedAlpha:O,preserveDrawingBuffer:F,powerPreference:G,failIfMajorPerformanceCaveat:V}),null===Ae)if(r(e))throw new Error("Error creating WebGL context with your selected attributes.");else throw new Error("Error creating WebGL context.")}void 0===Ae.getShaderPrecisionFormat&&(Ae.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}let Re,Le,Ce,Pe,De,Ie,ze,Be,Ne,Ue,He,Oe,Fe,Ge,Ve,ke,We,je,qe,Xe,Ye,Ke,Je;i();const Qe=new np(te,Ae);this.xr=Qe,this.getContext=function(){return Ae},this.getContextAttributes=function(){return Ae.getContextAttributes()},this.forceContextLoss=function(){const e=Re.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=Re.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return me},this.setPixelRatio=function(e){void 0===e||(me=e,this.setSize(ce,ue,!1))},this.getSize=function(e){return e.set(ce,ue)},this.setSize=function(e,t,a){return Qe.isPresenting?void console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):void(ce=e,ue=t,w.width=sr(e*me),w.height=sr(t*me),!1!==a&&(w.style.width=e+"px",w.style.height=t+"px"),this.setViewport(0,0,e,t))},this.getDrawingBufferSize=function(e){return e.set(ce*me,ue*me).floor()},this.setDrawingBufferSize=function(e,t,a){ce=e,ue=t,me=a,w.width=sr(e*a),w.height=sr(t*a),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return e.copy(de)},this.getViewport=function(e){return e.copy(he)},this.setViewport=function(e,t,a,r){e.isVector4?he.set(e.x,e.y,e.z,e.w):he.set(e,t,a,r),Ce.viewport(de.copy(he).multiplyScalar(me).floor())},this.getScissor=function(e){return e.copy(ye)},this.setScissor=function(e,t,a,r){e.isVector4?ye.set(e.x,e.y,e.z,e.w):ye.set(e,t,a,r),Ce.scissor(le.copy(ye).multiplyScalar(me).floor())},this.getScissorTest=function(){return xe},this.setScissorTest=function(e){Ce.setScissorTest(xe=e)},this.setOpaqueSort=function(e){fe=e},this.setTransparentSort=function(e){ge=e},this.getClearColor=function(e){return e.copy(je.getClearColor())},this.setClearColor=function(){je.setClearColor.apply(je,arguments)},this.getClearAlpha=function(){return je.getClearAlpha()},this.setClearAlpha=function(){je.setClearAlpha.apply(je,arguments)},this.clear=function(e=!0,t=!0,a=!0){let r=0;e&&(r|=16384),t&&(r|=256),a&&(r|=1024),Ae.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){w.removeEventListener("webglcontextlost",s,!1),w.removeEventListener("webglcontextrestored",d,!1),Ge.dispose(),Ve.dispose(),De.dispose(),ze.dispose(),Be.dispose(),He.dispose(),Je.dispose(),Oe.dispose(),Qe.dispose(),Qe.removeEventListener("sessionstart",m),Qe.removeEventListener("sessionend",f),Se&&(Se.dispose(),Se=null),et.stop()},this.renderBufferDirect=function(e,a,r,i,s,d){null===a&&(a=we);const l=s.isMesh&&0>s.matrixWorld.determinant(),p=M(e,a,r,i,s);Ce.setMaterial(i,l);let c=r.index;const u=r.attributes.position;if(null===c){if(void 0===u||0===u.count)return;}else if(0===c.count)return;let m=1;!0===i.wireframe&&(c=Ue.getWireframeAttribute(r),m=2),Je.setup(s,i,p,r,c);let f=Xe,g;null!==c&&(g=Ne.get(c),f=Ye,f.setIndex(g));const h=null===c?u.count:c.count,y=r.drawRange.start*m,x=r.drawRange.count*m,v=null===d?0:d.start*m,_=null===d?Infinity:d.count*m,b=n(y,v),S=o(h,y+x,v+_)-1,T=n(0,S-b+1);if(0!==T){if(s.isMesh)!0===i.wireframe?(Ce.setLineWidth(i.wireframeLinewidth*t()),f.setMode(1)):f.setMode(4);else if(s.isLine){let e=i.linewidth;void 0===e&&(e=1),Ce.setLineWidth(e*t()),s.isLineSegments?f.setMode(1):s.isLineLoop?f.setMode(2):f.setMode(3)}else s.isPoints?f.setMode(0):s.isSprite&&f.setMode(4);if(s.isInstancedMesh)f.renderInstances(b,T,s.count);else if(r.isInstancedBufferGeometry){const e=o(r.instanceCount,r._maxInstanceCount);f.renderInstances(b,T,e)}else f.render(b,T)}},this.compile=function(e,t){K=Ve.get(e),K.init(),ee.push(K),e.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(K.pushLight(e),e.castShadow&&K.pushShadow(e))}),K.setupLights(te.physicallyCorrectLights),e.traverse(function(t){const a=t.material;if(a)if(Array.isArray(a))for(let r=0;r<a.length;r++){const i=a[r];b(i,e,t)}else b(a,e,t)}),ee.pop(),K=null};let $e=null;const et=new L;et.setAnimationLoop(u),"undefined"!=typeof self&&et.setContext(self),this.setAnimationLoop=function(e){$e=e,Qe.setAnimationLoop(e),null===e?et.stop():et.start()},Qe.addEventListener("sessionstart",m),Qe.addEventListener("sessionend",f),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0!=ae){!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===Qe.enabled&&!0===Qe.isPresenting&&(!0===Qe.cameraAutoUpdate&&Qe.updateCamera(t),t=Qe.getCamera()),!0===e.isScene&&e.onBeforeRender(te,e,t,ne),K=Ve.get(e,ee.length),K.init(),ee.push(K),Me.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),ve.setFromProjectionMatrix(Me),be=this.localClippingEnabled,_e=ke.init(this.clippingPlanes,be,t),Z=Ge.get(e,J.length),Z.init(),J.push(Z),h(e,t,0,te.sortObjects),Z.finish(),!0===te.sortObjects&&Z.sort(fe,ge),!0===_e&&ke.beginShadows();const a=K.state.shadowsArray;if(We.render(a,e,t),!0===_e&&ke.endShadows(),!0===this.info.autoReset&&this.info.reset(),je.render(Z,e),K.setupLights(te.physicallyCorrectLights),t.isArrayCamera){const a=t.cameras;for(let t=0,r=a.length;t<r;t++){const r=a[t];y(Z,e,r,r.viewport)}}else y(Z,e,t);null!==ne&&(Ie.updateMultisampleRenderTarget(ne),Ie.updateRenderTargetMipmap(ne)),!0===e.isScene&&e.onAfterRender(te,e,t),Je.resetDefaultState(),oe=-1,se=null,ee.pop(),K=0<ee.length?ee[ee.length-1]:null,J.pop(),Z=0<J.length?J[J.length-1]:null}},this.getActiveCubeFace=function(){return re},this.getActiveMipmapLevel=function(){return ie},this.getRenderTarget=function(){return ne},this.setRenderTargetTextures=function(e,t,a){De.get(e.texture).__webglTexture=t,De.get(e.depthTexture).__webglTexture=a;const r=De.get(e);r.__hasExternalTextures=!0,r.__hasExternalTextures&&(r.__autoAllocateDepthBuffer=void 0===a,!r.__autoAllocateDepthBuffer&&!0===Re.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),r.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(e,t){const a=De.get(e);a.__webglFramebuffer=t,a.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,a=0){ne=e,re=t,ie=a;let r=!0;if(e){const t=De.get(e);void 0===t.__useDefaultFramebuffer?void 0===t.__webglFramebuffer?Ie.setupRenderTarget(e):t.__hasExternalTextures&&Ie.rebindTextures(e,De.get(e.texture).__webglTexture,De.get(e.depthTexture).__webglTexture):(Ce.bindFramebuffer(36160,null),r=!1)}let i=null,n=!1,o=!1;if(e){const a=e.texture;(a.isData3DTexture||a.isDataArrayTexture)&&(o=!0);const r=De.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(i=r[t],n=!0):Le.isWebGL2&&0<e.samples&&!1===Ie.useMultisampledRTT(e)?i=De.get(e).__webglMultisampledFramebuffer:i=r,de.copy(e.viewport),le.copy(e.scissor),pe=e.scissorTest}else de.copy(he).multiplyScalar(me).floor(),le.copy(ye).multiplyScalar(me).floor(),pe=xe;const s=Ce.bindFramebuffer(36160,i);if(s&&Le.drawBuffers&&r&&Ce.drawBuffers(e,i),Ce.viewport(de),Ce.scissor(le),Ce.setScissorTest(pe),n){const r=De.get(e.texture);Ae.framebufferTexture2D(36160,36064,34069+t,r.__webglTexture,a)}else if(o){const r=De.get(e.texture);Ae.framebufferTextureLayer(36160,36064,r.__webglTexture,a||0,t||0)}oe=-1},this.readRenderTargetPixels=function(e,t,a,r,i,n,o){if(!(e&&e.isWebGLRenderTarget))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let s=De.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==o&&(s=s[o]),s){Ce.bindFramebuffer(36160,s);try{const o=e.texture,s=o.format,d=o.type;if(s!==ki&&Ke.convert(s)!==Ae.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const l=d===Ui&&(Re.has("EXT_color_buffer_half_float")||Le.isWebGL2&&Re.has("EXT_color_buffer_float"));if(d!==Ci&&Ke.convert(d)!==Ae.getParameter(35738)&&!(d===Ni&&(Le.isWebGL2||Re.has("OES_texture_float")||Re.has("WEBGL_color_buffer_float")))&&!l)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");0<=t&&t<=e.width-r&&0<=a&&a<=e.height-i&&Ae.readPixels(t,a,r,i,Ke.convert(s),Ke.convert(d),n)}finally{const e=null===ne?null:De.get(ne).__webglFramebuffer;Ce.bindFramebuffer(36160,e)}}},this.copyFramebufferToTexture=function(e,t,r=0){if(!0!==t.isFramebufferTexture)return void console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");const i=a(2,-r),n=sr(t.image.width*i),o=sr(t.image.height*i);Ie.setTexture2D(t,0),Ae.copyTexSubImage2D(3553,r,0,0,e.x,e.y,n,o),Ce.unbindTexture()},this.copyTextureToTexture=function(e,t,a,r=0){const i=t.image.width,n=t.image.height,o=Ke.convert(a.format),s=Ke.convert(a.type);Ie.setTexture2D(a,0),Ae.pixelStorei(37440,a.flipY),Ae.pixelStorei(37441,a.premultiplyAlpha),Ae.pixelStorei(3317,a.unpackAlignment),t.isDataTexture?Ae.texSubImage2D(3553,r,e.x,e.y,i,n,o,s,t.image.data):t.isCompressedTexture?Ae.compressedTexSubImage2D(3553,r,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,o,t.mipmaps[0].data):Ae.texSubImage2D(3553,r,e.x,e.y,o,s,t.image),0===r&&a.generateMipmaps&&Ae.generateMipmap(3553),Ce.unbindTexture()},this.copyTextureToTexture3D=function(e,t,a,r,i=0){if(te.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const n=e.max.x-e.min.x+1,o=e.max.y-e.min.y+1,s=e.max.z-e.min.z+1,d=Ke.convert(r.format),l=Ke.convert(r.type);let p;if(r.isData3DTexture)Ie.setTexture3D(r,0),p=32879;else if(r.isDataArrayTexture)Ie.setTexture2DArray(r,0),p=35866;else return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");Ae.pixelStorei(37440,r.flipY),Ae.pixelStorei(37441,r.premultiplyAlpha),Ae.pixelStorei(3317,r.unpackAlignment);const c=Ae.getParameter(3314),u=Ae.getParameter(32878),m=Ae.getParameter(3316),f=Ae.getParameter(3315),g=Ae.getParameter(32877),h=a.isCompressedTexture?a.mipmaps[0]:a.image;Ae.pixelStorei(3314,h.width),Ae.pixelStorei(32878,h.height),Ae.pixelStorei(3316,e.min.x),Ae.pixelStorei(3315,e.min.y),Ae.pixelStorei(32877,e.min.z),a.isDataTexture||a.isData3DTexture?Ae.texSubImage3D(p,i,t.x,t.y,t.z,n,o,s,d,l,h.data):a.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Ae.compressedTexSubImage3D(p,i,t.x,t.y,t.z,n,o,s,d,h.data)):Ae.texSubImage3D(p,i,t.x,t.y,t.z,n,o,s,d,l,h),Ae.pixelStorei(3314,c),Ae.pixelStorei(32878,u),Ae.pixelStorei(3316,m),Ae.pixelStorei(3315,f),Ae.pixelStorei(32877,g),0===i&&r.generateMipmaps&&Ae.generateMipmap(p),Ce.unbindTexture()},this.initTexture=function(e){Ie.setTexture2D(e,0),Ce.unbindTexture()},this.resetState=function(){re=0,ie=0,ne=null,Ce.reset(),Je.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function Ot(e,t,a,r,i,n){xp.subVectors(e,a).addScalar(.5).multiply(r),void 0===i?vp.copy(xp):(vp.x=n*xp.x-i*xp.y,vp.y=i*xp.x+n*xp.y),e.copy(t),e.x+=vp.x,e.y+=vp.y,e.applyMatrix4(_p)}function Ft(e,t,a,i,n,o,s){const d=sc.distanceSqToPoint(e);if(d<a){const a=new $o;sc.closestPointToPoint(e,a),a.applyMatrix4(i);const l=n.ray.origin.distanceTo(a);if(l<n.near||l>n.far)return;o.push({distance:l,distanceToRay:r(d),point:a,index:t,face:null,object:s})}}function Gt(){function e(e,t,o,s){a=e,r=o,i=-3*e+3*t-2*o-s,n=2*e-2*t+o+s}let a=0,r=0,i=0,n=0;return{initCatmullRom:function(t,a,r,i,n){e(a,r,n*(r-t),n*(i-a))},initNonuniformCatmullRom:function(t,a,r,i,n,o,s){let d=(a-t)/n-(r-t)/(n+o)+(r-a)/o,l=(r-a)/o-(i-a)/(o+s)+(i-r)/s;d*=o,l*=o,e(a,r,d,l)},calc:function(e){const t=e*e;return a+r*e+i*t+n*(t*e)}}}function Vt(e,t,a,r,i){const n=.5*(r-t),o=.5*(i-a),s=e*e;return(2*a-2*r+n+o)*(e*s)+(-3*a+3*r-2*n-o)*s+n*e+a}function kt(e,t){const a=1-e;return a*a*t}function Wt(e,t){return 2*(1-e)*e*t}function jt(e,t){return e*e*t}function qt(e,t,a,r){return kt(e,t)+Wt(e,a)+jt(e,r)}function Xt(e,t){const a=1-e;return a*a*a*t}function Yt(e,t){const a=1-e;return 3*a*a*e*t}function Zt(e,t){return 3*(1-e)*e*e*t}function Kt(e,t){return e*e*e*t}function Jt(e,t,a,r,i){return Xt(e,t)+Yt(e,a)+Zt(e,r)+Kt(e,i)}function Qt(e,t,a,r,n){let o,i;if(n===0<Ra(e,t,a,r))for(o=t;o<a;o+=r)i=Ea(o,e[o],e[o+1],i);else for(o=a-r;o>=t;o-=r)i=Ea(o,e[o],e[o+1],i);return i&&ya(i,i.next)&&(wa(i),i=i.next),i}function $t(e,t){if(!e)return e;t||(t=e);let a=e,r;do if(r=!1,!a.steiner&&(ya(a,a.next)||0===ha(a.prev,a,a.next))){if(wa(a),a=t=a.prev,a===a.next)break;r=!0}else a=a.next;while(r||a!==t);return t}function ea(e,t,a,r,i,n,o){if(e){!o&&n&&pa(e,r,i,n);for(let s=e,d,l;e.prev!==e.next;){if(d=e.prev,l=e.next,n?aa(e,r,i,n):ta(e)){t.push(d.i/a),t.push(e.i/a),t.push(l.i/a),wa(e),e=l.next,s=l.next;continue}if(e=l,e===s){o?1===o?(e=ra($t(e),t,a),ea(e,t,a,r,i,n,2)):2==o&&ia(e,t,a,r,i,n):ea($t(e),t,a,r,i,n,1);break}}}}function ta(e){const t=e.prev,a=e,r=e.next;if(0<=ha(t,a,r))return!1;for(let i=e.next.next;i!==e.prev;){if(fa(t.x,t.y,a.x,a.y,r.x,r.y,i.x,i.y)&&0<=ha(i.prev,i,i.next))return!1;i=i.next}return!0}function aa(e,t,r,i){const o=e.prev,a=e,s=e.next;if(0<=ha(o,a,s))return!1;const d=o.x<a.x?o.x<s.x?o.x:s.x:a.x<s.x?a.x:s.x,l=o.y<a.y?o.y<s.y?o.y:s.y:a.y<s.y?a.y:s.y,c=o.x>a.x?o.x>s.x?o.x:s.x:a.x>s.x?a.x:s.x,u=o.y>a.y?o.y>s.y?o.y:s.y:a.y>s.y?a.y:s.y,m=ua(d,l,t,r,i),f=ua(c,u,t,r,i);let g=e.prevZ,p=e.nextZ;for(;g&&g.z>=m&&p&&p.z<=f;){if(g!==e.prev&&g!==e.next&&fa(o.x,o.y,a.x,a.y,s.x,s.y,g.x,g.y)&&0<=ha(g.prev,g,g.next))return!1;if(g=g.prevZ,p!==e.prev&&p!==e.next&&fa(o.x,o.y,a.x,a.y,s.x,s.y,p.x,p.y)&&0<=ha(p.prev,p,p.next))return!1;p=p.nextZ}for(;g&&g.z>=m;){if(g!==e.prev&&g!==e.next&&fa(o.x,o.y,a.x,a.y,s.x,s.y,g.x,g.y)&&0<=ha(g.prev,g,g.next))return!1;g=g.prevZ}for(;p&&p.z<=f;){if(p!==e.prev&&p!==e.next&&fa(o.x,o.y,a.x,a.y,s.x,s.y,p.x,p.y)&&0<=ha(p.prev,p,p.next))return!1;p=p.nextZ}return!0}function ra(e,t,r){let i=e;do{const n=i.prev,a=i.next.next;!ya(n,a)&&xa(n,i,i.next,a)&&Sa(n,a)&&Sa(a,n)&&(t.push(n.i/r),t.push(i.i/r),t.push(a.i/r),wa(i),wa(i.next),i=e=a),i=i.next}while(i!==e);return $t(i)}function ia(e,t,r,i,n,o){let s=e;do{for(let e=s.next.next;e!==s.prev;){if(s.i!==e.i&&ga(s,e)){let a=Ta(s,e);return s=$t(s,s.next),a=$t(a,a.next),ea(s,t,r,i,n,o),void ea(a,t,r,i,n,o)}e=e.next}s=s.next}while(s!==e)}function na(e,t,a,r){const n=[];let o,i,s,d,l;for(o=0,i=t.length;o<i;o++)s=t[o]*r,d=o<i-1?t[o+1]*r:e.length,l=Qt(e,s,d,r,!1),l===l.next&&(l.steiner=!0),n.push(ma(l));for(n.sort(oa),o=0;o<n.length;o++)sa(n[o],a),a=$t(a,a.next);return a}function oa(e,t){return e.x-t.x}function sa(e,t){if(t=da(e,t),t){const a=Ta(t,e);$t(t,t.next),$t(a,a.next)}}function da(e,t){let a=t;const r=e.x,i=e.y;let n=-Infinity,o;do{if(i<=a.y&&i>=a.next.y&&a.next.y!==a.y){const e=a.x+(i-a.y)*(a.next.x-a.x)/(a.next.y-a.y);if(e<=r&&e>n){if(n=e,e===r){if(i===a.y)return a;if(i===a.next.y)return a.next}o=a.x<a.next.x?a:a.next}}a=a.next}while(a!==t);if(!o)return null;if(r===n)return o;const s=o,d=o.x,l=o.y;let p=Infinity,c;a=o;do r>=a.x&&a.x>=d&&r!==a.x&&fa(i<l?r:n,i,d,l,i<l?n:r,i,a.x,a.y)&&(c=dr(i-a.y)/(r-a.x),Sa(a,e)&&(c<p||c===p&&(a.x>o.x||a.x===o.x&&la(o,a)))&&(o=a,p=c)),a=a.next;while(a!==s);return o}function la(e,t){return 0>ha(e.prev,e,t.prev)&&0>ha(t.next,e,e.next)}function pa(e,t,a,r){let i=e;do null===i.z&&(i.z=ua(i.x,i.y,t,a,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,ca(i)}function ca(t){let a=1,r,i,n,o,e,s,d,l;do{for(i=t,t=null,e=null,s=0;i;){for(s++,n=i,d=0,r=0;r<a&&(d++,n=n.nextZ,!!n);r++);for(l=a;0<d||0<l&&n;)0!==d&&(0===l||!n||i.z<=n.z)?(o=i,i=i.nextZ,d--):(o=n,n=n.nextZ,l--),e?e.nextZ=o:t=o,o.prevZ=e,e=o;i=n}e.nextZ=null,a*=2}while(1<s);return t}function ua(e,t,a,r,i){return e=32767*(e-a)*i,t=32767*(t-r)*i,e=16711935&(e|e<<8),e=252645135&(e|e<<4),e=858993459&(e|e<<2),e=1431655765&(e|e<<1),t=16711935&(t|t<<8),t=252645135&(t|t<<4),t=858993459&(t|t<<2),t=1431655765&(t|t<<1),e|t<<1}function ma(e){let t=e,a=e;do(t.x<a.x||t.x===a.x&&t.y<a.y)&&(a=t),t=t.next;while(t!==e);return a}function fa(e,t,a,r,i,n,o,s){return 0<=(i-o)*(t-s)-(e-o)*(n-s)&&0<=(e-o)*(r-s)-(a-o)*(t-s)&&0<=(a-o)*(n-s)-(i-o)*(r-s)}function ga(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!ba(e,t)&&(Sa(e,t)&&Sa(t,e)&&Ma(e,t)&&(ha(e.prev,e,t.prev)||ha(e,t.prev,t))||ya(e,t)&&0<ha(e.prev,e,e.next)&&0<ha(t.prev,t,t.next))}function ha(e,t,a){return(t.y-e.y)*(a.x-t.x)-(t.x-e.x)*(a.y-t.y)}function ya(e,t){return e.x===t.x&&e.y===t.y}function xa(e,t,a,r){const i=_a(ha(e,t,a)),n=_a(ha(e,t,r)),o=_a(ha(a,r,e)),s=_a(ha(a,r,t));return i!==n&&o!==s||!!(0===i&&va(e,a,t))||!!(0===n&&va(e,r,t))||!!(0===o&&va(a,e,r))||!!(0===s&&va(a,t,r))}function va(e,t,a){return t.x<=n(e.x,a.x)&&t.x>=o(e.x,a.x)&&t.y<=n(e.y,a.y)&&t.y>=o(e.y,a.y)}function _a(e){return 0<e?1:0>e?-1:0}function ba(e,t){let a=e;do{if(a.i!==e.i&&a.next.i!==e.i&&a.i!==t.i&&a.next.i!==t.i&&xa(a,a.next,e,t))return!0;a=a.next}while(a!==e);return!1}function Sa(e,t){return 0>ha(e.prev,e,e.next)?0<=ha(e,t,e.next)&&0<=ha(e,e.prev,t):0>ha(e,t,e.prev)||0>ha(e,e.next,t)}function Ma(e,t){let a=e,r=!1;const i=(e.x+t.x)/2,n=(e.y+t.y)/2;do a.y>n!=a.next.y>n&&a.next.y!==a.y&&i<(a.next.x-a.x)*(n-a.y)/(a.next.y-a.y)+a.x&&(r=!r),a=a.next;while(a!==e);return r}function Ta(e,t){const a=new Aa(e.i,e.x,e.y),r=new Aa(t.i,t.x,t.y),i=e.next,n=t.prev;return e.next=t,t.prev=e,a.next=i,i.prev=a,r.next=a,a.prev=r,n.next=r,r.prev=n,r}function Ea(e,t,a,r){const i=new Aa(e,t,a);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function wa(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function Aa(e,t,a){this.i=e,this.x=t,this.y=a,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Ra(e,t,a,r){let n=0;for(let o=t,i=a-r;o<a;o+=r)n+=(e[i]-e[o])*(e[o+1]+e[i+1]),i=o;return n}function La(e){const t=e.length;2<t&&e[t-1].equals(e[0])&&e.pop()}function Ca(e,t){for(let a=0;a<t.length;a++)e.push(t[a].x),e.push(t[a].y)}function Pa(e,t,a){if(a.shapes=[],Array.isArray(e))for(let t=0,r=e.length;t<r;t++){const r=e[t];a.shapes.push(r.uuid)}else a.shapes.push(e.uuid);return void 0!==t.extrudePath&&(a.options.extrudePath=t.extrudePath.toJSON()),a}function Da(e,t){if(t.shapes=[],Array.isArray(e))for(let a=0,r=e.length;a<r;a++){const r=e[a];t.shapes.push(r.uuid)}else t.shapes.push(e.uuid);return t}function Ia(e,t,a){const r=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`,i=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`;return!0!==a.has(r)&&!0!==a.has(i)&&(a.add(r),a.add(i),!0)}function za(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return wu;case"vector":case"vector2":case"vector3":case"vector4":return Cu;case"color":return Eu;case"quaternion":return Ru;case"bool":case"boolean":return Tu;case"string":return Lu;}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}function Ba(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=za(e.type);if(void 0===e.times){const t=[],a=[];xu.flattenJSON(e.keys,t,a,"value"),e.times=t,e.values=a}return void 0===t.parse?new t(e.name,e.times,e.values,e.interpolation):t.parse(e)}function Na(){return("undefined"==typeof performance?Date:performance).now()}function Ua(e,t){return e.distance-t.distance}function Ha(e,t,a,r){if(e.layers.test(t.layers)&&e.raycast(t,a),!0===r){const r=e.children;for(let e=0,i=r.length;e<i;e++)Ha(r[e],t,a,!0)}}function Oa(e){const t=[];!0===e.isBone&&t.push(e);for(let a=0;a<e.children.length;a++)t.push.apply(t,Oa(e.children[a]));return t}function Fa(e,t,a,r,i,n,o){Cf.set(i,n,o).unproject(r);const s=t[e];if(void 0!==s){const e=a.getAttribute("position");for(let t=0,a=s.length;t<a;t++)e.setXYZ(s[t],Cf.x,Cf.y,Cf.z)}}function Ga(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e}function Va(e=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,e.materials=e,e.clone=function(){return e.slice()},e}function ka(){console.error("THREE.CanvasRenderer has been removed")}function Wa(){console.error("THREE.JSONLoader has been removed.")}function ja(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}function qa(){console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js")}function Xa(){console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js")}function Ya(){console.error("THREE.ImmediateRenderObject has been removed.")}var Za=Math.sign,Ka=Math.log2,Ja=Math.atan,Qa=Number.EPSILON,$a=Math.acos,er=Math.atan2,tr=Math.round,ar=Math.sin,rr=Math.cos,ir=Math.ceil,nr=Math.LN2,or=Math.log,sr=Math.floor,dr=Math.abs,lr=Math.exp;d.r(i),d.d(i,{ACESFilmicToneMapping:()=>li,AddEquation:()=>Dr,AddOperation:()=>ii,AdditiveAnimationBlendMode:()=>Nn,AdditiveBlending:()=>Rr,AlphaFormat:()=>Gi,AlwaysDepth:()=>Zr,AlwaysStencilFunc:()=>co,AmbientLight:()=>nm,AmbientLightProbe:()=>Sm,AnimationClip:()=>Pu,AnimationLoader:()=>Hu,AnimationMixer:()=>ef,AnimationObjectGroup:()=>Qm,AnimationUtils:()=>xu,ArcCurve:()=>yc,ArrayCamera:()=>ep,ArrowHelper:()=>Ff,Audio:()=>Im,AudioAnalyser:()=>Om,AudioContext:()=>vm,AudioListener:()=>Dm,AudioLoader:()=>_m,AxesHelper:()=>Gf,AxisHelper:()=>_g,BackSide:()=>Sr,BasicDepthPacking:()=>Vn,BasicShadowMap:()=>yr,BinaryTextureLoader:()=>Eg,Bone:()=>Up,BooleanKeyframeTrack:()=>Tu,BoundingBoxHelper:()=>bg,Box2:()=>lf,Box3:()=>as,Box3Helper:()=>Bf,BoxBufferGeometry:()=>el,BoxGeometry:()=>el,BoxHelper:()=>zf,BufferAttribute:()=>yd,BufferGeometry:()=>Bd,BufferGeometryLoader:()=>um,ByteType:()=>Pi,Cache:()=>Du,Camera:()=>rl,CameraHelper:()=>Df,CanvasRenderer:()=>ka,CanvasTexture:()=>fc,CapsuleBufferGeometry:()=>zc,CapsuleGeometry:()=>zc,CatmullRomCurve3:()=>Sc,CineonToneMapping:()=>di,CircleBufferGeometry:()=>Bc,CircleGeometry:()=>Bc,ClampToEdgeWrapping:()=>xi,Clock:()=>Am,Color:()=>Oo,ColorKeyframeTrack:()=>Eu,ColorManagement:()=>zo,CompressedTexture:()=>mc,CompressedTextureLoader:()=>Ou,ConeBufferGeometry:()=>Uc,ConeGeometry:()=>Uc,CubeCamera:()=>sl,CubeReflectionMapping:()=>ui,CubeRefractionMapping:()=>mi,CubeTexture:()=>dl,CubeTextureLoader:()=>Gu,CubeUVReflectionMapping:()=>hi,CubicBezierCurve:()=>Mc,CubicBezierCurve3:()=>Tc,CubicInterpolant:()=>_u,CullFaceBack:()=>fr,CullFaceFront:()=>gr,CullFaceFrontBack:()=>hr,CullFaceNone:()=>mr,Curve:()=>gc,CurvePath:()=>Pc,CustomBlending:()=>Pr,CustomToneMapping:()=>pi,CylinderBufferGeometry:()=>Nc,CylinderGeometry:()=>Nc,Cylindrical:()=>sf,Data3DTexture:()=>Zo,DataArrayTexture:()=>Xo,DataTexture:()=>Hp,DataTexture2DArray:()=>Pg,DataTexture3D:()=>Dg,DataTextureLoader:()=>Vu,DataUtils:()=>kf,DecrementStencilOp:()=>$n,DecrementWrapStencilOp:()=>to,DefaultLoadingManager:()=>zu,DepthFormat:()=>qi,DepthStencilFormat:()=>Xi,DepthTexture:()=>ip,DirectionalLight:()=>im,DirectionalLightHelper:()=>Lf,DiscreteInterpolant:()=>Su,DodecahedronBufferGeometry:()=>Oc,DodecahedronGeometry:()=>Oc,DoubleSide:()=>Mr,DstAlphaFactor:()=>kr,DstColorFactor:()=>jr,DynamicBufferAttribute:()=>pg,DynamicCopyUsage:()=>vo,DynamicDrawUsage:()=>mo,DynamicReadUsage:()=>ho,EdgesGeometry:()=>Wc,EdgesHelper:()=>Sg,EllipseCurve:()=>hc,EqualDepth:()=>Qr,EqualStencilFunc:()=>no,EquirectangularReflectionMapping:()=>fi,EquirectangularRefractionMapping:()=>gi,Euler:()=>Os,EventDispatcher:()=>To,ExtrudeBufferGeometry:()=>Yc,ExtrudeGeometry:()=>Yc,FaceColors:()=>tg,FileLoader:()=>Uu,FlatShading:()=>Tr,Float16BufferAttribute:()=>Ed,Float32Attribute:()=>xg,Float32BufferAttribute:()=>wd,Float64Attribute:()=>vg,Float64BufferAttribute:()=>Ad,FloatType:()=>Ni,Fog:()=>dp,FogExp2:()=>sp,Font:()=>Xa,FontLoader:()=>qa,FramebufferTexture:()=>uc,FrontSide:()=>br,Frustum:()=>hl,GLBufferAttribute:()=>rf,GLSL1:()=>bo,GLSL3:()=>So,GreaterDepth:()=>ei,GreaterEqualDepth:()=>$r,GreaterEqualStencilFunc:()=>po,GreaterStencilFunc:()=>so,GridHelper:()=>Tf,Group:()=>tp,HalfFloatType:()=>Ui,HemisphereLight:()=>ju,HemisphereLightHelper:()=>Mf,HemisphereLightProbe:()=>bm,IcosahedronBufferGeometry:()=>Kc,IcosahedronGeometry:()=>Kc,ImageBitmapLoader:()=>ym,ImageLoader:()=>Fu,ImageUtils:()=>Go,ImmediateRenderObject:()=>Ya,IncrementStencilOp:()=>Qn,IncrementWrapStencilOp:()=>eo,InstancedBufferAttribute:()=>Vp,InstancedBufferGeometry:()=>cm,InstancedInterleavedBuffer:()=>af,InstancedMesh:()=>Xp,Int16Attribute:()=>fg,Int16BufferAttribute:()=>bd,Int32Attribute:()=>hg,Int32BufferAttribute:()=>Md,Int8Attribute:()=>cg,Int8BufferAttribute:()=>xd,IntType:()=>zi,InterleavedBuffer:()=>pp,InterleavedBufferAttribute:()=>up,Interpolant:()=>vu,InterpolateDiscrete:()=>Ln,InterpolateLinear:()=>Cn,InterpolateSmooth:()=>Pn,InvertStencilOp:()=>ao,JSONLoader:()=>Wa,KeepStencilOp:()=>Kn,KeyframeTrack:()=>Mu,LOD:()=>Cp,LatheBufferGeometry:()=>Ic,LatheGeometry:()=>Ic,Layers:()=>Fs,LensFlare:()=>ja,LessDepth:()=>Kr,LessEqualDepth:()=>Jr,LessEqualStencilFunc:()=>oo,LessStencilFunc:()=>io,Light:()=>Wu,LightProbe:()=>dm,Line:()=>ec,Line3:()=>uf,LineBasicMaterial:()=>Yp,LineCurve:()=>Ec,LineCurve3:()=>wc,LineDashedMaterial:()=>hu,LineLoop:()=>ic,LinePieces:()=>$f,LineSegments:()=>rc,LineStrip:()=>Qf,LinearEncoding:()=>Fn,LinearFilter:()=>Ei,LinearInterpolant:()=>bu,LinearMipMapLinearFilter:()=>Li,LinearMipMapNearestFilter:()=>Ai,LinearMipmapLinearFilter:()=>Ri,LinearMipmapNearestFilter:()=>wi,LinearSRGBColorSpace:()=>Yn,LinearToneMapping:()=>oi,Loader:()=>Bu,LoaderUtils:()=>pm,LoadingManager:()=>Iu,LoopOnce:()=>wn,LoopPingPong:()=>Rn,LoopRepeat:()=>An,LuminanceAlphaFormat:()=>ji,LuminanceFormat:()=>Wi,MOUSE:()=>cr,Material:()=>md,MaterialLoader:()=>lm,Math:()=>Lo,MathUtils:()=>Lo,Matrix3:()=>Po,Matrix4:()=>Ls,MaxEquation:()=>Nr,Mesh:()=>$d,MeshBasicMaterial:()=>fd,MeshDepthMaterial:()=>Kl,MeshDistanceMaterial:()=>Jl,MeshFaceMaterial:()=>Ga,MeshLambertMaterial:()=>fu,MeshMatcapMaterial:()=>gu,MeshNormalMaterial:()=>mu,MeshPhongMaterial:()=>cu,MeshPhysicalMaterial:()=>pu,MeshStandardMaterial:()=>lu,MeshToonMaterial:()=>uu,MinEquation:()=>Br,MirroredRepeatWrapping:()=>vi,MixOperation:()=>ri,MultiMaterial:()=>Va,MultiplyBlending:()=>Cr,MultiplyOperation:()=>ai,NearestFilter:()=>_i,NearestMipMapLinearFilter:()=>Ti,NearestMipMapNearestFilter:()=>Si,NearestMipmapLinearFilter:()=>Mi,NearestMipmapNearestFilter:()=>bi,NeverDepth:()=>Yr,NeverStencilFunc:()=>ro,NoBlending:()=>wr,NoColorSpace:()=>qn,NoColors:()=>eg,NoToneMapping:()=>ni,NormalAnimationBlendMode:()=>Bn,NormalBlending:()=>Ar,NotEqualDepth:()=>ti,NotEqualStencilFunc:()=>lo,NumberKeyframeTrack:()=>wu,Object3D:()=>ed,ObjectLoader:()=>mm,ObjectSpaceNormalMap:()=>jn,OctahedronBufferGeometry:()=>Jc,OctahedronGeometry:()=>Jc,OneFactor:()=>Hr,OneMinusDstAlphaFactor:()=>Wr,OneMinusDstColorFactor:()=>qr,OneMinusSrcAlphaFactor:()=>Vr,OneMinusSrcColorFactor:()=>Fr,OrthographicCamera:()=>bl,PCFShadowMap:()=>xr,PCFSoftShadowMap:()=>vr,PMREMGenerator:()=>Pl,ParametricGeometry:()=>Rg,Particle:()=>ig,ParticleBasicMaterial:()=>sg,ParticleSystem:()=>ng,ParticleSystemMaterial:()=>dg,Path:()=>Dc,PerspectiveCamera:()=>il,Plane:()=>ml,PlaneBufferGeometry:()=>yl,PlaneGeometry:()=>yl,PlaneHelper:()=>Nf,PointCloud:()=>rg,PointCloudMaterial:()=>og,PointLight:()=>am,PointLightHelper:()=>vf,Points:()=>pc,PointsMaterial:()=>nc,PolarGridHelper:()=>Ef,PolyhedronBufferGeometry:()=>Hc,PolyhedronGeometry:()=>Hc,PositionalAudio:()=>Hm,PropertyBinding:()=>Jm,PropertyMixer:()=>Fm,QuadraticBezierCurve:()=>Ac,QuadraticBezierCurve3:()=>Rc,Quaternion:()=>Qo,QuaternionKeyframeTrack:()=>Ru,QuaternionLinearInterpolant:()=>Au,REVISION:()=>pr,RGBADepthPacking:()=>kn,RGBAFormat:()=>ki,RGBAIntegerFormat:()=>Qi,RGBA_ASTC_10x10_Format:()=>Sn,RGBA_ASTC_10x5_Format:()=>vn,RGBA_ASTC_10x6_Format:()=>_n,RGBA_ASTC_10x8_Format:()=>bn,RGBA_ASTC_12x10_Format:()=>Mn,RGBA_ASTC_12x12_Format:()=>Tn,RGBA_ASTC_4x4_Format:()=>cn,RGBA_ASTC_5x4_Format:()=>un,RGBA_ASTC_5x5_Format:()=>mn,RGBA_ASTC_6x5_Format:()=>fn,RGBA_ASTC_6x6_Format:()=>gn,RGBA_ASTC_8x5_Format:()=>hn,RGBA_ASTC_8x6_Format:()=>yn,RGBA_ASTC_8x8_Format:()=>xn,RGBA_BPTC_Format:()=>En,RGBA_ETC2_EAC_Format:()=>pn,RGBA_PVRTC_2BPPV1_Format:()=>sn,RGBA_PVRTC_4BPPV1_Format:()=>on,RGBA_S3TC_DXT1_Format:()=>en,RGBA_S3TC_DXT3_Format:()=>tn,RGBA_S3TC_DXT5_Format:()=>an,RGBFormat:()=>Vi,RGB_ETC1_Format:()=>dn,RGB_ETC2_Format:()=>ln,RGB_PVRTC_2BPPV1_Format:()=>nn,RGB_PVRTC_4BPPV1_Format:()=>rn,RGB_S3TC_DXT1_Format:()=>$i,RGFormat:()=>Ki,RGIntegerFormat:()=>Ji,RawShaderMaterial:()=>du,Ray:()=>Rs,Raycaster:()=>nf,RectAreaLight:()=>om,RedFormat:()=>Yi,RedIntegerFormat:()=>Zi,ReinhardToneMapping:()=>si,RepeatWrapping:()=>yi,ReplaceStencilOp:()=>Jn,ReverseSubtractEquation:()=>zr,RingBufferGeometry:()=>Qc,RingGeometry:()=>Qc,SRGBColorSpace:()=>Xn,Scene:()=>lp,SceneUtils:()=>Ag,ShaderChunk:()=>xl,ShaderLib:()=>_l,ShaderMaterial:()=>al,ShadowMaterial:()=>su,Shape:()=>jc,ShapeBufferGeometry:()=>$c,ShapeGeometry:()=>$c,ShapePath:()=>Vf,ShapeUtils:()=>Xc,ShortType:()=>Di,Skeleton:()=>Gp,SkeletonHelper:()=>xf,SkinnedMesh:()=>Np,SmoothShading:()=>Er,Source:()=>Vo,Sphere:()=>_s,SphereBufferGeometry:()=>eu,SphereGeometry:()=>eu,Spherical:()=>of,SphericalHarmonics3:()=>sm,SplineCurve:()=>Lc,SpotLight:()=>Ju,SpotLightHelper:()=>ff,Sprite:()=>Ap,SpriteMaterial:()=>mp,SrcAlphaFactor:()=>Gr,SrcAlphaSaturateFactor:()=>Xr,SrcColorFactor:()=>Or,StaticCopyUsage:()=>xo,StaticDrawUsage:()=>uo,StaticReadUsage:()=>go,StereoCamera:()=>wm,StreamCopyUsage:()=>_o,StreamDrawUsage:()=>fo,StreamReadUsage:()=>yo,StringKeyframeTrack:()=>Lu,SubtractEquation:()=>Ir,SubtractiveBlending:()=>Lr,TOUCH:()=>ur,TangentSpaceNormalMap:()=>Wn,TetrahedronBufferGeometry:()=>tu,TetrahedronGeometry:()=>tu,TextGeometry:()=>Lg,Texture:()=>Wo,TextureLoader:()=>ku,TorusBufferGeometry:()=>au,TorusGeometry:()=>au,TorusKnotBufferGeometry:()=>ru,TorusKnotGeometry:()=>ru,Triangle:()=>cd,TriangleFanDrawMode:()=>On,TriangleStripDrawMode:()=>Hn,TrianglesDrawMode:()=>Un,TubeBufferGeometry:()=>iu,TubeGeometry:()=>iu,UVMapping:()=>ci,Uint16Attribute:()=>gg,Uint16BufferAttribute:()=>Sd,Uint32Attribute:()=>yg,Uint32BufferAttribute:()=>Td,Uint8Attribute:()=>ug,Uint8BufferAttribute:()=>vd,Uint8ClampedAttribute:()=>mg,Uint8ClampedBufferAttribute:()=>_d,Uniform:()=>tf,UniformsLib:()=>vl,UniformsUtils:()=>tl,UnsignedByteType:()=>Ci,UnsignedInt248Type:()=>Fi,UnsignedIntType:()=>Bi,UnsignedShort4444Type:()=>Hi,UnsignedShort5551Type:()=>Oi,UnsignedShortType:()=>Ii,VSMShadowMap:()=>_r,Vector2:()=>Co,Vector3:()=>$o,Vector4:()=>jo,VectorKeyframeTrack:()=>Cu,Vertex:()=>lg,VertexColors:()=>ag,VideoTexture:()=>cc,WebGL1Renderer:()=>op,WebGL3DRenderTarget:()=>Ko,WebGLArrayRenderTarget:()=>Yo,WebGLCubeRenderTarget:()=>ll,WebGLMultipleRenderTargets:()=>Jo,WebGLMultisampleRenderTarget:()=>Cg,WebGLRenderTarget:()=>qo,WebGLRenderTargetCube:()=>wg,WebGLRenderer:()=>Ht,WebGLUtils:()=>Bt,WireframeGeometry:()=>nu,WireframeHelper:()=>Mg,WrapAroundEnding:()=>zn,XHRLoader:()=>Tg,ZeroCurvatureEnding:()=>Dn,ZeroFactor:()=>Ur,ZeroSlopeEnding:()=>In,ZeroStencilOp:()=>Zn,_SRGBAFormat:()=>Mo,sRGBEncoding:()=>Gn});const pr="140",cr={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},ur={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},mr=0,fr=1,gr=2,hr=3,yr=0,xr=1,vr=2,_r=3,br=0,Sr=1,Mr=2,Tr=1,Er=2,wr=0,Ar=1,Rr=2,Lr=3,Cr=4,Pr=5,Dr=100,Ir=101,zr=102,Br=103,Nr=104,Ur=200,Hr=201,Or=202,Fr=203,Gr=204,Vr=205,kr=206,Wr=207,jr=208,qr=209,Xr=210,Yr=0,Zr=1,Kr=2,Jr=3,Qr=4,$r=5,ei=6,ti=7,ai=0,ri=1,ii=2,ni=0,oi=1,si=2,di=3,li=4,pi=5,ci=300,ui=301,mi=302,fi=303,gi=304,hi=306,yi=1e3,xi=1001,vi=1002,_i=1003,bi=1004,Si=1004,Mi=1005,Ti=1005,Ei=1006,wi=1007,Ai=1007,Ri=1008,Li=1008,Ci=1009,Pi=1010,Di=1011,Ii=1012,zi=1013,Bi=1014,Ni=1015,Ui=1016,Hi=1017,Oi=1018,Fi=1020,Gi=1021,Vi=1022,ki=1023,Wi=1024,ji=1025,qi=1026,Xi=1027,Yi=1028,Zi=1029,Ki=1030,Ji=1031,Qi=1033,$i=33776,en=33777,tn=33778,an=33779,rn=35840,nn=35841,on=35842,sn=35843,dn=36196,ln=37492,pn=37496,cn=37808,un=37809,mn=37810,fn=37811,gn=37812,hn=37813,yn=37814,xn=37815,vn=37816,_n=37817,bn=37818,Sn=37819,Mn=37820,Tn=37821,En=36492,wn=2200,An=2201,Rn=2202,Ln=2300,Cn=2301,Pn=2302,Dn=2400,In=2401,zn=2402,Bn=2500,Nn=2501,Un=0,Hn=1,On=2,Fn=3e3,Gn=3001,Vn=3200,kn=3201,Wn=0,jn=1,qn="",Xn="srgb",Yn="srgb-linear",Zn=0,Kn=7680,Jn=7681,Qn=7682,$n=7683,eo=34055,to=34056,ao=5386,ro=512,io=513,no=514,oo=515,so=516,lo=517,po=518,co=519,uo=35044,mo=35048,fo=35040,go=35045,ho=35049,yo=35041,xo=35046,vo=35050,_o=35042,bo="100",So="300 es",Mo=1035;class To{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const a=this._listeners;void 0===a[e]&&(a[e]=[]),-1===a[e].indexOf(t)&&a[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const a=this._listeners;return void 0!==a[e]&&-1!==a[e].indexOf(t)}removeEventListener(e,t){if(void 0!==this._listeners){const a=this._listeners,r=a[e];if(void 0!==r){const e=r.indexOf(t);-1!==e&&r.splice(e,1)}}}dispatchEvent(e){if(void 0!==this._listeners){const t=this._listeners,a=t[e.type];if(void 0!==a){e.target=this;const t=a.slice(0);for(let a=0,r=t.length;a<r;a++)t[a].call(this,e);e.target=null}}}}const Eo=[];for(let t=0;256>t;t++)Eo[t]=(16>t?"0":"")+t.toString(16);let wo=1234567;const Ao=s/180,Ro=180/s;var Lo=Object.freeze({__proto__:null,DEG2RAD:Ao,RAD2DEG:Ro,generateUUID:l,clamp:p,euclideanModulo:c,mapLinear:function(e,t,a,r,i){return r+(e-t)*(i-r)/(a-t)},inverseLerp:function(e,t,a){return e===t?0:(a-e)/(t-e)},lerp:u,damp:function(e,t,a,r){return u(e,t,1-lr(-a*r))},pingpong:function(e,t=1){return t-dr(c(e,2*t)-t)},smoothstep:function(e,t,a){return e<=t?0:e>=a?1:(e=(e-t)/(a-t),e*e*(3-2*e))},smootherstep:function(e,t,a){return e<=t?0:e>=a?1:(e=(e-t)/(a-t),e*e*e*(e*(6*e-15)+10))},randInt:function(e,t){return e+sr(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){var a=Math.imul;void 0!==e&&(wo=e);let r=wo+=1831565813;return r=a(r^r>>>15,1|r),r^=r+a(r^r>>>7,61|r),((r^r>>>14)>>>0)/4294967296},degToRad:function(e){return e*Ao},radToDeg:function(e){return e*Ro},isPowerOfTwo:m,ceilPowerOfTwo:f,floorPowerOfTwo:g,setQuaternionFromProperEuler:function(e,t,a,r,i){const n=rr,o=ar,s=n(a/2),d=o(a/2),l=n((t+r)/2),p=o((t+r)/2),c=n((t-r)/2),u=o((t-r)/2),m=n((r-t)/2),f=o((r-t)/2);"XYX"===i?e.set(s*p,d*c,d*u,s*l):"YZY"===i?e.set(d*u,s*p,d*c,s*l):"ZXZ"===i?e.set(d*c,d*u,s*p,s*l):"XZX"===i?e.set(s*p,d*f,d*m,s*l):"YXY"===i?e.set(d*m,s*p,d*f,s*l):"ZYZ"===i?e.set(d*f,d*m,s*p,s*l):console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)},normalize:function(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return tr(65535*e);case Uint8Array:return tr(255*e);case Int16Array:return tr(32767*e);case Int8Array:return tr(127*e);default:throw new Error("Invalid component type.");}},denormalize:function(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int16Array:return n(e/32767,-1);case Int8Array:return n(e/127,-1);default:throw new Error("Invalid component type.");}}});class Co{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e);}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e);}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0===t?(this.x+=e.x,this.y+=e.y,this):(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t))}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0===t?(this.x-=e.x,this.y-=e.y,this):(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t))}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(t){const a=this.x,r=this.y,i=t.elements;return this.x=i[0]*a+i[3]*r+i[6],this.y=i[1]*a+i[4]*r+i[7],this}min(e){return this.x=o(this.x,e.x),this.y=o(this.y,e.y),this}max(e){return this.x=n(this.x,e.x),this.y=n(this.y,e.y),this}clamp(e,t){return this.x=n(e.x,o(t.x,this.x)),this.y=n(e.y,o(t.y,this.y)),this}clampScalar(e,t){return this.x=n(e,o(t,this.x)),this.y=n(e,o(t,this.y)),this}clampLength(e,t){const a=this.length();return this.divideScalar(a||1).multiplyScalar(n(e,o(t,a)))}floor(){return this.x=sr(this.x),this.y=sr(this.y),this}ceil(){return this.x=ir(this.x),this.y=ir(this.y),this}round(){return this.x=tr(this.x),this.y=tr(this.y),this}roundToZero(){return this.x=0>this.x?ir(this.x):sr(this.x),this.y=0>this.y?ir(this.y):sr(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return r(this.x*this.x+this.y*this.y)}manhattanLength(){return dr(this.x)+dr(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){const e=er(-this.y,-this.x)+s;return e}distanceTo(e){return r(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,a=this.y-e.y;return t*t+a*a}manhattanDistanceTo(e){return dr(this.x-e.x)+dr(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,a){return this.x=e.x+(t.x-e.x)*a,this.y=e.y+(t.y-e.y)*a,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,a){return void 0!==a&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const a=rr(t),r=ar(t),i=this.x-e.x,n=this.y-e.y;return this.x=i*a-n*r+e.x,this.y=i*r+n*a+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}Co.prototype.isVector2=!0;class Po{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,a,r,i,n,o,s,d){const l=this.elements;return l[0]=e,l[1]=r,l[2]=o,l[3]=t,l[4]=i,l[5]=s,l[6]=a,l[7]=n,l[8]=d,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,a=e.elements;return t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[3],t[4]=a[4],t[5]=a[5],t[6]=a[6],t[7]=a[7],t[8]=a[8],this}extractBasis(e,t,a){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),a.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const a=e.elements,r=t.elements,i=this.elements,n=a[0],o=a[3],s=a[6],d=a[1],l=a[4],p=a[7],c=a[2],u=a[5],m=a[8],f=r[0],g=r[3],h=r[6],y=r[1],x=r[4],v=r[7],_=r[2],b=r[5],S=r[8];return i[0]=n*f+o*y+s*_,i[3]=n*g+o*x+s*b,i[6]=n*h+o*v+s*S,i[1]=d*f+l*y+p*_,i[4]=d*g+l*x+p*b,i[7]=d*h+l*v+p*S,i[2]=c*f+u*y+m*_,i[5]=c*g+u*x+m*b,i[8]=c*h+u*v+m*S,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const t=this.elements,r=t[0],a=t[1],n=t[2],o=t[3],s=t[4],e=t[5],d=t[6],l=t[7],p=t[8];return r*s*p-r*e*l-a*o*p+a*e*d+n*o*l-n*s*d}invert(){const e=this.elements,t=e[0],a=e[1],r=e[2],i=e[3],n=e[4],o=e[5],s=e[6],d=e[7],l=e[8],p=l*n-o*d,c=o*s-l*i,u=d*i-n*s,m=t*p+a*c+r*u;if(0==m)return this.set(0,0,0,0,0,0,0,0,0);const f=1/m;return e[0]=p*f,e[1]=(r*d-l*a)*f,e[2]=(o*a-r*n)*f,e[3]=c*f,e[4]=(l*t-r*s)*f,e[5]=(r*i-o*t)*f,e[6]=u*f,e[7]=(a*s-d*t)*f,e[8]=(n*t-a*i)*f,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,a,r,i,n,o){const d=rr(i),l=ar(i);return this.set(a*d,a*l,-a*(d*n+l*o)+n+e,-r*l,r*d,-r*(-l*n+d*o)+o+t,0,0,1),this}scale(e,t){const a=this.elements;return a[0]*=e,a[3]*=e,a[6]*=e,a[1]*=t,a[4]*=t,a[7]*=t,this}rotate(e){const t=rr(e),a=ar(e),r=this.elements,i=r[0],n=r[3],o=r[6],d=r[1],l=r[4],p=r[7];return r[0]=t*i+a*d,r[3]=t*n+a*l,r[6]=t*o+a*p,r[1]=-a*i+t*d,r[4]=-a*n+t*l,r[7]=-a*o+t*p,this}translate(e,t){const a=this.elements;return a[0]+=e*a[2],a[3]+=e*a[5],a[6]+=e*a[8],a[1]+=t*a[2],a[4]+=t*a[5],a[7]+=t*a[8],this}equals(e){const t=this.elements,a=e.elements;for(let r=0;9>r;r++)if(t[r]!==a[r])return!1;return!0}fromArray(e,t=0){for(let a=0;9>a;a++)this.elements[a]=e[a+t];return this}toArray(e=[],t=0){const a=this.elements;return e[t]=a[0],e[t+1]=a[1],e[t+2]=a[2],e[t+3]=a[3],e[t+4]=a[4],e[t+5]=a[5],e[t+6]=a[6],e[t+7]=a[7],e[t+8]=a[8],e}clone(){return new this.constructor().fromArray(this.elements)}}Po.prototype.isMatrix3=!0;const Do={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array},Io={[Xn]:{[Yn]:v},[Yn]:{[Xn]:_}},zo={legacyMode:!0,get workingColorSpace(){return Yn},set workingColorSpace(e){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(e,t,a){if(this.legacyMode||t===a||!t||!a)return e;if(Io[t]&&void 0!==Io[t][a]){const r=Io[t][a];return e.r=r(e.r),e.g=r(e.g),e.b=r(e.b),e}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(e,t){return this.convert(e,this.workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this.workingColorSpace)}},Bo={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},No={r:0,g:0,b:0},Uo={h:0,s:0,l:0},Ho={h:0,s:0,l:0};class Oo{constructor(e,t,a){return void 0===t&&void 0===a?this.set(e):this.setRGB(e,t,a)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Xn){return e=sr(e),this.r=(255&e>>16)/255,this.g=(255&e>>8)/255,this.b=(255&e)/255,zo.toWorkingColorSpace(this,t),this}setRGB(e,t,a,r=Yn){return this.r=e,this.g=t,this.b=a,zo.toWorkingColorSpace(this,r),this}setHSL(e,t,a,r=Yn){if(e=c(e,1),t=p(t,0,1),a=p(a,0,1),0===t)this.r=this.g=this.b=a;else{const r=.5>=a?a*(1+t):a+t-a*t,i=2*a-r;this.r=b(i,r,e+1/3),this.g=b(i,r,e),this.b=b(i,r,e-1/3)}return zo.toWorkingColorSpace(this,r),this}setStyle(e,t=Xn){function a(t){void 0===t||1>parseFloat(t)&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let e;const i=r[1],n=r[2];switch(i){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(n))return this.r=o(255,parseInt(e[1],10))/255,this.g=o(255,parseInt(e[2],10))/255,this.b=o(255,parseInt(e[3],10))/255,zo.toWorkingColorSpace(this,t),a(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(n))return this.r=o(100,parseInt(e[1],10))/100,this.g=o(100,parseInt(e[2],10))/100,this.b=o(100,parseInt(e[3],10))/100,zo.toWorkingColorSpace(this,t),a(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(n)){const r=parseFloat(e[1])/360,i=parseInt(e[2],10)/100,n=parseInt(e[3],10)/100;return a(e[4]),this.setHSL(r,i,n,t)}}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const e=r[1],a=e.length;if(3===a)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,zo.toWorkingColorSpace(this,t),this;if(6===a)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,zo.toWorkingColorSpace(this,t),this}return e&&0<e.length?this.setColorName(e,t):this}setColorName(e,t=Xn){const a=Bo[e.toLowerCase()];return void 0===a?console.warn("THREE.Color: Unknown color "+e):this.setHex(a,t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=v(e.r),this.g=v(e.g),this.b=v(e.b),this}copyLinearToSRGB(e){return this.r=_(e.r),this.g=_(e.g),this.b=_(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Xn){return zo.fromWorkingColorSpace(S(this,No),e),p(255*No.r,0,255)<<16^p(255*No.g,0,255)<<8^p(255*No.b,0,255)<<0}getHexString(e=Xn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Yn){zo.fromWorkingColorSpace(S(this,No),t);const a=No.r,r=No.g,i=No.b,s=n(a,r,i),d=o(a,r,i);let l,p;const c=(d+s)/2;if(d===s)l=0,p=0;else{const e=s-d;p=.5>=c?e/(s+d):e/(2-s-d),s===a?l=(r-i)/e+(r<i?6:0):s===r?l=(i-a)/e+2:s===i?l=(a-r)/e+4:void 0,l/=6}return e.h=l,e.s=p,e.l=c,e}getRGB(e,t=Yn){return zo.fromWorkingColorSpace(S(this,No),t),e.r=No.r,e.g=No.g,e.b=No.b,e}getStyle(e=Xn){return zo.fromWorkingColorSpace(S(this,No),e),e===Xn?`rgb(${0|255*No.r},${0|255*No.g},${0|255*No.b})`:`color(${e} ${No.r} ${No.g} ${No.b})`}offsetHSL(e,t,a){return this.getHSL(Uo),Uo.h+=e,Uo.s+=t,Uo.l+=a,this.setHSL(Uo.h,Uo.s,Uo.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=n(0,this.r-e.r),this.g=n(0,this.g-e.g),this.b=n(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,a){return this.r=e.r+(t.r-e.r)*a,this.g=e.g+(t.g-e.g)*a,this.b=e.b+(t.b-e.b)*a,this}lerpHSL(e,t){this.getHSL(Uo),e.getHSL(Ho);const a=u(Uo.h,Ho.h,t),r=u(Uo.s,Ho.s,t),i=u(Uo.l,Ho.l,t);return this.setHSL(a,r,i),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Oo.NAMES=Bo,Oo.prototype.isColor=!0,Oo.prototype.r=1,Oo.prototype.g=1,Oo.prototype.b=1;let Fo;class Go{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===Fo&&(Fo=x("canvas")),Fo.width=e.width,Fo.height=e.height;const a=Fo.getContext("2d");e instanceof ImageData?a.putImageData(e,0,0):a.drawImage(e,0,0,e.width,e.height),t=Fo}return 2048<t.width||2048<t.height?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const t=x("canvas");t.width=e.width,t.height=e.height;const a=t.getContext("2d");a.drawImage(e,0,0,e.width,e.height);const r=a.getImageData(0,0,e.width,e.height),n=r.data;for(let e=0;e<n.length;e++)n[e]=255*v(n[e]/255);return a.putImageData(r,0,0),t}if(e.data){const t=e.data.slice(0);for(let e=0;e<t.length;e++)t[e]=t instanceof Uint8Array||t instanceof Uint8ClampedArray?sr(255*v(t[e]/255)):v(t[e]);return{data:t,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class Vo{constructor(e=null){this.uuid=l(),this.data=e,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];const a={uuid:this.uuid,url:""},r=this.data;if(null!==r){let e;if(Array.isArray(r)){e=[];for(let t=0,a=r.length;t<a;t++)r[t].isDataTexture?e.push(M(r[t].image)):e.push(M(r[t]))}else e=M(r);a.url=e}return t||(e.images[this.uuid]=a),a}}Vo.prototype.isSource=!0;let ko=0;class Wo extends To{constructor(e=Wo.DEFAULT_IMAGE,t=Wo.DEFAULT_MAPPING,a=xi,r=xi,i=Ei,n=Ri,o=ki,s=Ci,d=1,p=Fn){super(),Object.defineProperty(this,"id",{value:ko++}),this.uuid=l(),this.name="",this.source=new Vo(e),this.mipmaps=[],this.mapping=t,this.wrapS=a,this.wrapT=r,this.magFilter=i,this.minFilter=n,this.anisotropy=d,this.format=o,this.internalFormat=null,this.type=s,this.offset=new Co(0,0),this.repeat=new Co(1,1),this.center=new Co(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Po,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=p,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const a={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(a.userData=this.userData),t||(e.textures[this.uuid]=a),a}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==ci)return e;if(e.applyMatrix3(this.matrix),0>e.x||1<e.x)switch(this.wrapS){case yi:e.x-=sr(e.x);break;case xi:e.x=0>e.x?0:1;break;case vi:1===dr(sr(e.x)%2)?e.x=ir(e.x)-e.x:e.x-=sr(e.x);}if(0>e.y||1<e.y)switch(this.wrapT){case yi:e.y-=sr(e.y);break;case xi:e.y=0>e.y?0:1;break;case vi:1===dr(sr(e.y)%2)?e.y=ir(e.y)-e.y:e.y-=sr(e.y);}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}}Wo.DEFAULT_IMAGE=null,Wo.DEFAULT_MAPPING=ci,Wo.prototype.isTexture=!0;class jo{constructor(e=0,t=0,a=0,r=1){this.x=e,this.y=t,this.z=a,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,a,r){return this.x=e,this.y=t,this.z=a,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e);}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e);}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0===e.w?1:e.w,this}add(e,t){return void 0===t?(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this):(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t))}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0===t?(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this):(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t))}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(t){const a=this.x,r=this.y,i=this.z,n=this.w,o=t.elements;return this.x=o[0]*a+o[4]*r+o[8]*i+o[12]*n,this.y=o[1]*a+o[5]*r+o[9]*i+o[13]*n,this.z=o[2]*a+o[6]*r+o[10]*i+o[14]*n,this.w=o[3]*a+o[7]*r+o[11]*i+o[15]*n,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*$a(e.w);const t=r(1-e.w*e.w);return 1e-4>t?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,a,i,n;const o=.01,d=.1,l=e.elements,p=l[0],c=l[4],u=l[8],m=l[1],f=l[5],g=l[9],h=l[2],y=l[6],x=l[10];if(dr(c-m)<o&&dr(u-h)<o&&dr(g-y)<o){if(dr(c+m)<d&&dr(u+h)<d&&dr(g+y)<d&&dr(p+f+x-3)<d)return this.set(1,0,0,0),this;t=s;const e=(p+1)/2,l=(f+1)/2,v=(x+1)/2,_=(c+m)/4,b=(u+h)/4,S=(g+y)/4;return e>l&&e>v?e<o?(a=0,i=.707106781,n=.707106781):(a=r(e),i=_/a,n=b/a):l>v?l<o?(a=.707106781,i=0,n=.707106781):(i=r(l),a=_/i,n=S/i):v<o?(a=.707106781,i=.707106781,n=0):(n=r(v),a=b/n,i=S/n),this.set(a,i,n,t),this}let v=r((y-g)*(y-g)+(u-h)*(u-h)+(m-c)*(m-c));return .001>dr(v)&&(v=1),this.x=(y-g)/v,this.y=(u-h)/v,this.z=(m-c)/v,this.w=$a((p+f+x-1)/2),this}min(e){return this.x=o(this.x,e.x),this.y=o(this.y,e.y),this.z=o(this.z,e.z),this.w=o(this.w,e.w),this}max(e){return this.x=n(this.x,e.x),this.y=n(this.y,e.y),this.z=n(this.z,e.z),this.w=n(this.w,e.w),this}clamp(e,t){return this.x=n(e.x,o(t.x,this.x)),this.y=n(e.y,o(t.y,this.y)),this.z=n(e.z,o(t.z,this.z)),this.w=n(e.w,o(t.w,this.w)),this}clampScalar(e,t){return this.x=n(e,o(t,this.x)),this.y=n(e,o(t,this.y)),this.z=n(e,o(t,this.z)),this.w=n(e,o(t,this.w)),this}clampLength(e,t){const a=this.length();return this.divideScalar(a||1).multiplyScalar(n(e,o(t,a)))}floor(){return this.x=sr(this.x),this.y=sr(this.y),this.z=sr(this.z),this.w=sr(this.w),this}ceil(){return this.x=ir(this.x),this.y=ir(this.y),this.z=ir(this.z),this.w=ir(this.w),this}round(){return this.x=tr(this.x),this.y=tr(this.y),this.z=tr(this.z),this.w=tr(this.w),this}roundToZero(){return this.x=0>this.x?ir(this.x):sr(this.x),this.y=0>this.y?ir(this.y):sr(this.y),this.z=0>this.z?ir(this.z):sr(this.z),this.w=0>this.w?ir(this.w):sr(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return r(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return dr(this.x)+dr(this.y)+dr(this.z)+dr(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,a){return this.x=e.x+(t.x-e.x)*a,this.y=e.y+(t.y-e.y)*a,this.z=e.z+(t.z-e.z)*a,this.w=e.w+(t.w-e.w)*a,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,a){return void 0!==a&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}jo.prototype.isVector4=!0;class qo extends To{constructor(e,t,a={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new jo(0,0,e,t),this.scissorTest=!1,this.viewport=new jo(0,0,e,t),this.texture=new Wo({width:e,height:t,depth:1},a.mapping,a.wrapS,a.wrapT,a.magFilter,a.minFilter,a.format,a.type,a.anisotropy,a.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==a.generateMipmaps&&a.generateMipmaps,this.texture.internalFormat=void 0===a.internalFormat?null:a.internalFormat,this.texture.minFilter=void 0===a.minFilter?Ei:a.minFilter,this.depthBuffer=void 0===a.depthBuffer||a.depthBuffer,this.stencilBuffer=void 0!==a.stencilBuffer&&a.stencilBuffer,this.depthTexture=void 0===a.depthTexture?null:a.depthTexture,this.samples=void 0===a.samples?0:a.samples}setSize(e,t,a=1){(this.width!==e||this.height!==t||this.depth!==a)&&(this.width=e,this.height=t,this.depth=a,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=a,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0,this.texture.image=Object.assign({},e.texture.image),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}qo.prototype.isWebGLRenderTarget=!0;class Xo extends Wo{constructor(e=null,t=1,a=1,r=1){super(null),this.image={data:e,width:t,height:a,depth:r},this.magFilter=_i,this.minFilter=_i,this.wrapR=xi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Xo.prototype.isDataArrayTexture=!0;class Yo extends qo{constructor(e,t,a){super(e,t),this.depth=a,this.texture=new Xo(null,e,t,a),this.texture.isRenderTargetTexture=!0}}Yo.prototype.isWebGLArrayRenderTarget=!0;class Zo extends Wo{constructor(e=null,t=1,a=1,r=1){super(null),this.image={data:e,width:t,height:a,depth:r},this.magFilter=_i,this.minFilter=_i,this.wrapR=xi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Zo.prototype.isData3DTexture=!0;class Ko extends qo{constructor(e,t,a){super(e,t),this.depth=a,this.texture=new Zo(null,e,t,a),this.texture.isRenderTargetTexture=!0}}Ko.prototype.isWebGL3DRenderTarget=!0;class Jo extends qo{constructor(e,t,a,r={}){super(e,t,r);const n=this.texture;this.texture=[];for(let o=0;o<a;o++)this.texture[o]=n.clone(),this.texture[o].isRenderTargetTexture=!0}setSize(e,t,a=1){if(this.width!==e||this.height!==t||this.depth!==a){this.width=e,this.height=t,this.depth=a;for(let r=0,i=this.texture.length;r<i;r++)this.texture[r].image.width=e,this.texture[r].image.height=t,this.texture[r].image.depth=a;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,a=e.texture.length;t<a;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}Jo.prototype.isWebGLMultipleRenderTargets=!0;class Qo{constructor(e=0,t=0,a=0,r=1){this._x=e,this._y=t,this._z=a,this._w=r}static slerp(e,a,r,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),r.slerpQuaternions(e,a,i)}static slerpFlat(e,a,i,n,o,s,d){let t=i[n+0],l=i[n+1],p=i[n+2],c=i[n+3];const u=o[s+0],m=o[s+1],f=o[s+2],g=o[s+3];if(0===d)return e[a+0]=t,e[a+1]=l,e[a+2]=p,void(e[a+3]=c);if(1===d)return e[a+0]=u,e[a+1]=m,e[a+2]=f,void(e[a+3]=g);if(c!==g||t!==u||l!==m||p!==f){let e=1-d;const a=t*u+l*m+p*f+c*g,i=0<=a?1:-1,n=1-a*a;if(n>Qa){const t=r(n),o=er(t,a*i);e=ar(e*o)/t,d=ar(d*o)/t}const o=d*i;if(t=t*e+u*o,l=l*e+m*o,p=p*e+f*o,c=c*e+g*o,e==1-d){const e=1/r(t*t+l*l+p*p+c*c);t*=e,l*=e,p*=e,c*=e}}e[a]=t,e[a+1]=l,e[a+2]=p,e[a+3]=c}static multiplyQuaternionsFlat(e,t,a,r,i,n){const o=a[r],s=a[r+1],d=a[r+2],l=a[r+3],p=i[n],c=i[n+1],u=i[n+2],m=i[n+3];return e[t]=o*m+l*p+s*u-d*c,e[t+1]=s*m+l*c+d*p-o*u,e[t+2]=d*m+l*u+o*c-s*p,e[t+3]=l*m-o*p-s*c-d*u,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,a,r){return this._x=e,this._y=t,this._z=a,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const a=e._x,r=e._y,i=e._z,n=e._order,o=rr,s=ar,d=o(a/2),l=o(r/2),p=o(i/2),c=s(a/2),u=s(r/2),m=s(i/2);return"XYZ"===n?(this._x=c*l*p+d*u*m,this._y=d*u*p-c*l*m,this._z=d*l*m+c*u*p,this._w=d*l*p-c*u*m):"YXZ"===n?(this._x=c*l*p+d*u*m,this._y=d*u*p-c*l*m,this._z=d*l*m-c*u*p,this._w=d*l*p+c*u*m):"ZXY"===n?(this._x=c*l*p-d*u*m,this._y=d*u*p+c*l*m,this._z=d*l*m+c*u*p,this._w=d*l*p-c*u*m):"ZYX"===n?(this._x=c*l*p-d*u*m,this._y=d*u*p+c*l*m,this._z=d*l*m-c*u*p,this._w=d*l*p+c*u*m):"YZX"===n?(this._x=c*l*p+d*u*m,this._y=d*u*p+c*l*m,this._z=d*l*m-c*u*p,this._w=d*l*p-c*u*m):"XZY"===n?(this._x=c*l*p-d*u*m,this._y=d*u*p-c*l*m,this._z=d*l*m+c*u*p,this._w=d*l*p+c*u*m):console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+n),!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const a=t/2,r=ar(a);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=rr(a),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,a=t[0],i=t[4],n=t[8],o=t[1],d=t[5],l=t[9],p=t[2],c=t[6],u=t[10],m=a+d+u;if(0<m){const e=.5/r(m+1);this._w=.25/e,this._x=(c-l)*e,this._y=(n-p)*e,this._z=(o-i)*e}else if(a>d&&a>u){const e=2*r(1+a-d-u);this._w=(c-l)/e,this._x=.25*e,this._y=(i+o)/e,this._z=(n+p)/e}else if(d>u){const e=2*r(1+d-a-u);this._w=(n-p)/e,this._x=(i+o)/e,this._y=.25*e,this._z=(l+c)/e}else{const e=2*r(1+u-a-d);this._w=(o-i)/e,this._x=(n+p)/e,this._y=(l+c)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let a=e.dot(t)+1;return a<Qa?(a=0,dr(e.x)>dr(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=a):(this._x=0,this._y=-e.z,this._z=e.y,this._w=a)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=a),this.normalize()}angleTo(e){return 2*$a(dr(p(this.dot(e),-1,1)))}rotateTowards(e,a){const r=this.angleTo(e);if(0===r)return this;const i=o(1,a/r);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return r(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x*=e,this._y*=e,this._z*=e,this._w*=e),this._onChangeCallback(),this}multiply(e,t){return void 0===t?this.multiplyQuaternions(this,e):(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t))}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const a=e._x,r=e._y,i=e._z,n=e._w,o=t._x,s=t._y,d=t._z,l=t._w;return this._x=a*l+n*o+r*d-i*s,this._y=r*l+n*s+i*o-a*d,this._z=i*l+n*d+a*s-r*o,this._w=n*l-a*o-r*s-i*d,this._onChangeCallback(),this}slerp(e,a){if(0===a)return this;if(1===a)return this.copy(e);const t=this._x,i=this._y,n=this._z,o=this._w;let s=o*e._w+t*e._x+i*e._y+n*e._z;if(0>s?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),1<=s)return this._w=o,this._x=t,this._y=i,this._z=n,this;const d=1-s*s;if(d<=Qa){const e=1-a;return this._w=e*o+a*this._w,this._x=e*t+a*this._x,this._y=e*i+a*this._y,this._z=e*n+a*this._z,this.normalize(),this._onChangeCallback(),this}const l=r(d),p=er(l,s),c=ar((1-a)*p)/l,u=ar(a*p)/l;return this._w=o*c+this._w*u,this._x=t*c+this._x*u,this._y=i*c+this._y*u,this._z=n*c+this._z*u,this._onChangeCallback(),this}slerpQuaternions(e,a,r){return this.copy(e).slerp(a,r)}random(){const e=Math.random(),t=r(1-e),a=r(e),i=2*s*Math.random(),n=2*s*Math.random();return this.set(t*rr(i),a*ar(n),a*rr(n),t*ar(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}Qo.prototype.isQuaternion=!0;class $o{constructor(e=0,t=0,a=0){this.x=e,this.y=t,this.z=a}set(e,t,a){return void 0===a&&(a=this.z),this.x=e,this.y=t,this.z=a,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e);}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e);}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0===t?(this.x+=e.x,this.y+=e.y,this.z+=e.z,this):(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t))}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0===t?(this.x-=e.x,this.y-=e.y,this.z-=e.z,this):(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t))}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0===t?(this.x*=e.x,this.y*=e.y,this.z*=e.z,this):(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t))}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(ts.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(ts.setFromAxisAngle(e,t))}applyMatrix3(t){const a=this.x,r=this.y,i=this.z,n=t.elements;return this.x=n[0]*a+n[3]*r+n[6]*i,this.y=n[1]*a+n[4]*r+n[7]*i,this.z=n[2]*a+n[5]*r+n[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(t){const a=this.x,r=this.y,i=this.z,n=t.elements,e=1/(n[3]*a+n[7]*r+n[11]*i+n[15]);return this.x=(n[0]*a+n[4]*r+n[8]*i+n[12])*e,this.y=(n[1]*a+n[5]*r+n[9]*i+n[13])*e,this.z=(n[2]*a+n[6]*r+n[10]*i+n[14])*e,this}applyQuaternion(e){const t=this.x,a=this.y,r=this.z,i=e.x,n=e.y,o=e.z,s=e.w,d=s*t+n*r-o*a,l=s*a+o*t-i*r,p=s*r+i*a-n*t,c=-i*t-n*a-o*r;return this.x=d*s+c*-i+l*-o-p*-n,this.y=l*s+c*-n+p*-i-d*-o,this.z=p*s+c*-o+d*-n-l*-i,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(t){const a=this.x,r=this.y,i=this.z,n=t.elements;return this.x=n[0]*a+n[4]*r+n[8]*i,this.y=n[1]*a+n[5]*r+n[9]*i,this.z=n[2]*a+n[6]*r+n[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=o(this.x,e.x),this.y=o(this.y,e.y),this.z=o(this.z,e.z),this}max(e){return this.x=n(this.x,e.x),this.y=n(this.y,e.y),this.z=n(this.z,e.z),this}clamp(e,t){return this.x=n(e.x,o(t.x,this.x)),this.y=n(e.y,o(t.y,this.y)),this.z=n(e.z,o(t.z,this.z)),this}clampScalar(e,t){return this.x=n(e,o(t,this.x)),this.y=n(e,o(t,this.y)),this.z=n(e,o(t,this.z)),this}clampLength(e,t){const a=this.length();return this.divideScalar(a||1).multiplyScalar(n(e,o(t,a)))}floor(){return this.x=sr(this.x),this.y=sr(this.y),this.z=sr(this.z),this}ceil(){return this.x=ir(this.x),this.y=ir(this.y),this.z=ir(this.z),this}round(){return this.x=tr(this.x),this.y=tr(this.y),this.z=tr(this.z),this}roundToZero(){return this.x=0>this.x?ir(this.x):sr(this.x),this.y=0>this.y?ir(this.y):sr(this.y),this.z=0>this.z?ir(this.z):sr(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return r(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return dr(this.x)+dr(this.y)+dr(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,a){return this.x=e.x+(t.x-e.x)*a,this.y=e.y+(t.y-e.y)*a,this.z=e.z+(t.z-e.z)*a,this}cross(e,t){return void 0===t?this.crossVectors(this,e):(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t))}crossVectors(e,t){const a=e.x,r=e.y,i=e.z,n=t.x,o=t.y,s=t.z;return this.x=r*s-i*o,this.y=i*n-a*s,this.z=a*o-r*n,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const a=e.dot(this)/t;return this.copy(e).multiplyScalar(a)}projectOnPlane(e){return es.copy(this).projectOnVector(e),this.sub(es)}reflect(e){return this.sub(es.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=r(this.lengthSq()*e.lengthSq());if(0===t)return s/2;const a=this.dot(e)/t;return $a(p(a,-1,1))}distanceTo(e){return r(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,a=this.y-e.y,r=this.z-e.z;return t*t+a*a+r*r}manhattanDistanceTo(e){return dr(this.x-e.x)+dr(this.y-e.y)+dr(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,a){const r=ar(t)*e;return this.x=r*ar(a),this.y=rr(t)*e,this.z=r*rr(a),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,a){return this.x=e*ar(t),this.y=a,this.z=e*rr(t),this}setFromMatrixPosition(t){const a=t.elements;return this.x=a[12],this.y=a[13],this.z=a[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),a=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=a,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,a){return void 0!==a&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=2*(Math.random()-.5),a=2*(Math.random()*s),t=r(1-e**2);return this.x=t*rr(a),this.y=t*ar(a),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}$o.prototype.isVector3=!0;const es=new $o,ts=new Qo;class as{constructor(e=new $o(+Infinity,+Infinity,+Infinity),t=new $o(-Infinity,-Infinity,-Infinity)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=+Infinity,a=+Infinity,r=+Infinity,n=-Infinity,o=-Infinity,s=-Infinity;for(let d=0,i=e.length;d<i;d+=3){const i=e[d],l=e[d+1],p=e[d+2];i<t&&(t=i),l<a&&(a=l),p<r&&(r=p),i>n&&(n=i),l>o&&(o=l),p>s&&(s=p)}return this.min.set(t,a,r),this.max.set(n,o,s),this}setFromBufferAttribute(e){let t=+Infinity,a=+Infinity,r=+Infinity,n=-Infinity,o=-Infinity,s=-Infinity;for(let d=0,i=e.count;d<i;d++){const i=e.getX(d),l=e.getY(d),p=e.getZ(d);i<t&&(t=i),l<a&&(a=l),p<r&&(r=p),i>n&&(n=i),l>o&&(o=l),p>s&&(s=p)}return this.min.set(t,a,r),this.max.set(n,o,s),this}setFromPoints(e){this.makeEmpty();for(let t=0,a=e.length;t<a;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const a=is.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(a),this.max.copy(e).add(a),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=+Infinity,this.max.x=this.max.y=this.max.z=-Infinity,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const a=e.geometry;if(void 0!==a)if(t&&void 0!=a.attributes&&void 0!==a.attributes.position){const t=a.attributes.position;for(let a=0,r=t.count;a<r;a++)is.fromBufferAttribute(t,a).applyMatrix4(e.matrixWorld),this.expandByPoint(is)}else null===a.boundingBox&&a.computeBoundingBox(),ns.copy(a.boundingBox),ns.applyMatrix4(e.matrixWorld),this.union(ns);const r=e.children;for(let a=0,i=r.length;a<i;a++)this.expandByObject(r[a],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,is),is.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,a;return 0<e.normal.x?(t=e.normal.x*this.min.x,a=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,a=e.normal.x*this.min.x),0<e.normal.y?(t+=e.normal.y*this.min.y,a+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,a+=e.normal.y*this.min.y),0<e.normal.z?(t+=e.normal.z*this.min.z,a+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,a+=e.normal.z*this.min.z),t<=-e.constant&&a>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(us),ms.subVectors(this.max,us),os.subVectors(e.a,us),ss.subVectors(e.b,us),ds.subVectors(e.c,us),ls.subVectors(ss,os),ps.subVectors(ds,ss),cs.subVectors(os,ds);let t=[0,-ls.z,ls.y,0,-ps.z,ps.y,0,-cs.z,cs.y,ls.z,0,-ls.x,ps.z,0,-ps.x,cs.z,0,-cs.x,-ls.y,ls.x,0,-ps.y,ps.x,0,-cs.y,cs.x,0];return!!T(t,os,ss,ds,ms)&&(t=[1,0,0,0,1,0,0,0,1],!!T(t,os,ss,ds,ms))&&(fs.crossVectors(ls,ps),t=[fs.x,fs.y,fs.z],T(t,os,ss,ds,ms))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){const t=is.copy(e).clamp(this.min,this.max);return t.sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize(is).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(rs[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),rs[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),rs[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),rs[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),rs[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),rs[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),rs[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),rs[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(rs),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}as.prototype.isBox3=!0;const rs=[new $o,new $o,new $o,new $o,new $o,new $o,new $o,new $o],is=new $o,ns=new as,os=new $o,ss=new $o,ds=new $o,ls=new $o,ps=new $o,cs=new $o,us=new $o,ms=new $o,fs=new $o,gs=new $o,hs=new as,ys=new $o,xs=new $o,vs=new $o;class _s{constructor(e=new $o,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const a=this.center;void 0===t?hs.setFromPoints(e).getCenter(a):a.copy(t);let o=0;for(let r=0,i=e.length;r<i;r++)o=n(o,a.distanceToSquared(e[r]));return this.radius=r(o),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return 0>this.radius}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return dr(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const a=this.center.distanceToSquared(e);return t.copy(e),a>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius*=e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){vs.subVectors(e,this.center);const t=vs.lengthSq();if(t>this.radius*this.radius){const e=r(t),a=.5*(e-this.radius);this.center.add(vs.multiplyScalar(a/e)),this.radius+=a}return this}union(e){return!0===this.center.equals(e.center)?xs.set(0,0,1).multiplyScalar(e.radius):xs.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(ys.copy(e.center).add(xs)),this.expandByPoint(ys.copy(e.center).sub(xs)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const bs=new $o,Ss=new $o,Ms=new $o,Ts=new $o,Es=new $o,ws=new $o,As=new $o;class Rs{constructor(e=new $o,t=new $o(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,bs)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const a=t.dot(this.direction);return 0>a?t.copy(this.origin):t.copy(this.direction).multiplyScalar(a).add(this.origin)}distanceToPoint(e){return r(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=bs.subVectors(e,this.origin).dot(this.direction);return 0>t?this.origin.distanceToSquared(e):(bs.copy(this.direction).multiplyScalar(t).add(this.origin),bs.distanceToSquared(e))}distanceSqToSegment(e,t,a,r){Ss.copy(e).add(t).multiplyScalar(.5),Ms.copy(t).sub(e).normalize(),Ts.copy(this.origin).sub(Ss);const i=.5*e.distanceTo(t),s=-this.direction.dot(Ms),d=Ts.dot(this.direction),l=-Ts.dot(Ms),p=Ts.lengthSq(),c=dr(1-s*s);let u,m,f,g;if(!(0<c))m=0<s?-i:i,u=n(0,-(s*m+d)),f=-u*u+m*(m+2*l)+p;else if(u=s*l-d,m=s*d-l,g=i*c,!(0<=u))m<=-g?(u=n(0,-(-s*i+d)),m=0<u?-i:o(n(-i,-l),i),f=-u*u+m*(m+2*l)+p):m<=g?(u=0,m=o(n(-i,-l),i),f=m*(m+2*l)+p):(u=n(0,-(s*i+d)),m=0<u?i:o(n(-i,-l),i),f=-u*u+m*(m+2*l)+p);else if(!(m>=-g))m=-i,u=n(0,-(s*m+d)),f=-u*u+m*(m+2*l)+p;else if(m<=g){const e=1/c;u*=e,m*=e,f=u*(u+s*m+2*d)+m*(s*u+m+2*l)+p}else m=i,u=n(0,-(s*m+d)),f=-u*u+m*(m+2*l)+p;return a&&a.copy(this.direction).multiplyScalar(u).add(this.origin),r&&r.copy(Ms).multiplyScalar(m).add(Ss),f}intersectSphere(e,t){bs.subVectors(e.center,this.origin);const a=bs.dot(this.direction),i=bs.dot(bs)-a*a,n=e.radius*e.radius;if(i>n)return null;const o=r(n-i),s=a-o,d=a+o;return 0>s&&0>d?null:0>s?this.at(d,t):this.at(s,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const a=e.normal.dot(this.direction);if(0===a)return 0===e.distanceToPoint(this.origin)?0:null;const r=-(this.origin.dot(e.normal)+e.constant)/a;return 0<=r?r:null}intersectPlane(e,a){const r=this.distanceToPlane(e);return null===r?null:this.at(r,a)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);if(0===t)return!0;const a=e.normal.dot(this.direction);return!!(0>a*t)}intersectBox(e,t){let a,r,i,n,o,s;const d=1/this.direction.x,l=1/this.direction.y,p=1/this.direction.z,c=this.origin;return(0<=d?(a=(e.min.x-c.x)*d,r=(e.max.x-c.x)*d):(a=(e.max.x-c.x)*d,r=(e.min.x-c.x)*d),0<=l?(i=(e.min.y-c.y)*l,n=(e.max.y-c.y)*l):(i=(e.max.y-c.y)*l,n=(e.min.y-c.y)*l),a>n||i>r)?null:((i>a||a!=a)&&(a=i),(n<r||r!=r)&&(r=n),0<=p?(o=(e.min.z-c.z)*p,s=(e.max.z-c.z)*p):(o=(e.max.z-c.z)*p,s=(e.min.z-c.z)*p),a>s||o>r)?null:((o>a||a!=a)&&(a=o),(s<r||r!=r)&&(r=s),0>r?null:this.at(0<=a?a:r,t))}intersectsBox(e){return null!==this.intersectBox(e,bs)}intersectTriangle(e,t,a,r,i){Es.subVectors(t,e),ws.subVectors(a,e),As.crossVectors(Es,ws);let n=this.direction.dot(As),o;if(0<n){if(r)return null;o=1}else if(0>n)o=-1,n=-n;else return null;Ts.subVectors(this.origin,e);const s=o*this.direction.dot(ws.crossVectors(Ts,ws));if(0>s)return null;const d=o*this.direction.dot(Es.cross(Ts));if(0>d)return null;if(s+d>n)return null;const l=-o*Ts.dot(As);return 0>l?null:this.at(l/n,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Ls{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,a,r,i,n,o,s,d,l,p,c,u,m,f,g){const h=this.elements;return h[0]=e,h[4]=t,h[8]=a,h[12]=r,h[1]=i,h[5]=n,h[9]=o,h[13]=s,h[2]=d,h[6]=l,h[10]=p,h[14]=c,h[3]=u,h[7]=m,h[11]=f,h[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Ls().fromArray(this.elements)}copy(e){const t=this.elements,a=e.elements;return t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[3],t[4]=a[4],t[5]=a[5],t[6]=a[6],t[7]=a[7],t[8]=a[8],t[9]=a[9],t[10]=a[10],t[11]=a[11],t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15],this}copyPosition(e){const t=this.elements,a=e.elements;return t[12]=a[12],t[13]=a[13],t[14]=a[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,a){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),a.setFromMatrixColumn(this,2),this}makeBasis(e,t,a){return this.set(e.x,t.x,a.x,0,e.y,t.y,a.y,0,e.z,t.z,a.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,a=e.elements,r=1/Cs.setFromMatrixColumn(e,0).length(),i=1/Cs.setFromMatrixColumn(e,1).length(),n=1/Cs.setFromMatrixColumn(e,2).length();return t[0]=a[0]*r,t[1]=a[1]*r,t[2]=a[2]*r,t[3]=0,t[4]=a[4]*i,t[5]=a[5]*i,t[6]=a[6]*i,t[7]=0,t[8]=a[8]*n,t[9]=a[9]*n,t[10]=a[10]*n,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const r=this.elements,i=t.x,n=t.y,o=t.z,s=rr(i),l=ar(i),p=rr(n),u=ar(n),m=rr(o),e=ar(o);if("XYZ"===t.order){const t=s*m,a=s*e,i=l*m,n=l*e;r[0]=p*m,r[4]=-p*e,r[8]=u,r[1]=a+i*u,r[5]=t-n*u,r[9]=-l*p,r[2]=n-t*u,r[6]=i+a*u,r[10]=s*p}else if("YXZ"===t.order){const t=p*m,a=p*e,i=u*m,n=u*e;r[0]=t+n*l,r[4]=i*l-a,r[8]=s*u,r[1]=s*e,r[5]=s*m,r[9]=-l,r[2]=a*l-i,r[6]=n+t*l,r[10]=s*p}else if("ZXY"===t.order){const t=p*m,i=p*e,n=u*m,o=u*e;r[0]=t-o*l,r[4]=-s*e,r[8]=n+i*l,r[1]=i+n*l,r[5]=s*m,r[9]=o-t*l,r[2]=-s*u,r[6]=l,r[10]=s*p}else if("ZYX"===t.order){const t=s*m,a=s*e,i=l*m,n=l*e;r[0]=p*m,r[4]=i*u-a,r[8]=t*u+n,r[1]=p*e,r[5]=n*u+t,r[9]=a*u-i,r[2]=-u,r[6]=l*p,r[10]=s*p}else if("YZX"===t.order){const t=s*p,a=s*u,i=l*p,n=l*u;r[0]=p*m,r[4]=n-t*e,r[8]=i*e+a,r[1]=e,r[5]=s*m,r[9]=-l*m,r[2]=-u*m,r[6]=a*e+i,r[10]=t-n*e}else if("XZY"===t.order){const t=s*p,a=s*u,i=l*p,n=l*u;r[0]=p*m,r[4]=-e,r[8]=u*m,r[1]=t*e+n,r[5]=s*m,r[9]=a*e-i,r[2]=i*e-a,r[6]=l*m,r[10]=n*e+t}return r[3]=0,r[7]=0,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Ds,e,Is)}lookAt(e,t,a){const r=this.elements;return Ns.subVectors(e,t),0===Ns.lengthSq()&&(Ns.z=1),Ns.normalize(),zs.crossVectors(a,Ns),0===zs.lengthSq()&&(1===dr(a.z)?Ns.x+=1e-4:Ns.z+=1e-4,Ns.normalize(),zs.crossVectors(a,Ns)),zs.normalize(),Bs.crossVectors(Ns,zs),r[0]=zs.x,r[4]=Bs.x,r[8]=Ns.x,r[1]=zs.y,r[5]=Bs.y,r[9]=Ns.y,r[2]=zs.z,r[6]=Bs.z,r[10]=Ns.z,this}multiply(e,t){return void 0===t?this.multiplyMatrices(this,e):(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t))}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const a=e.elements,r=t.elements,i=this.elements,n=a[0],o=a[4],s=a[8],d=a[12],l=a[1],p=a[5],c=a[9],u=a[13],m=a[2],f=a[6],g=a[10],h=a[14],y=a[3],x=a[7],v=a[11],_=a[15],b=r[0],S=r[4],M=r[8],T=r[12],E=r[1],w=r[5],A=r[9],R=r[13],L=r[2],C=r[6],P=r[10],D=r[14],I=r[3],z=r[7],B=r[11],N=r[15];return i[0]=n*b+o*E+s*L+d*I,i[4]=n*S+o*w+s*C+d*z,i[8]=n*M+o*A+s*P+d*B,i[12]=n*T+o*R+s*D+d*N,i[1]=l*b+p*E+c*L+u*I,i[5]=l*S+p*w+c*C+u*z,i[9]=l*M+p*A+c*P+u*B,i[13]=l*T+p*R+c*D+u*N,i[2]=m*b+f*E+g*L+h*I,i[6]=m*S+f*w+g*C+h*z,i[10]=m*M+f*A+g*P+h*B,i[14]=m*T+f*R+g*D+h*N,i[3]=y*b+x*E+v*L+_*I,i[7]=y*S+x*w+v*C+_*z,i[11]=y*M+x*A+v*P+_*B,i[15]=y*T+x*R+v*D+_*N,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],a=e[4],r=e[8],i=e[12],n=e[1],o=e[5],s=e[9],d=e[13],l=e[2],p=e[6],c=e[10],u=e[14],m=e[3],f=e[7],g=e[11],h=e[15];return m*(+i*s*p-r*d*p-i*o*c+a*d*c+r*o*u-a*s*u)+f*(+t*s*u-t*d*c+i*n*c-r*n*u+r*d*l-i*s*l)+g*(+t*d*p-t*o*u-i*n*p+a*n*u+i*o*l-a*d*l)+h*(-r*o*l-t*s*p+t*o*c+r*n*p-a*n*c+a*s*l)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,a){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=a),this}invert(){const e=this.elements,t=e[0],a=e[1],r=e[2],i=e[3],n=e[4],o=e[5],s=e[6],d=e[7],l=e[8],p=e[9],c=e[10],u=e[11],m=e[12],f=e[13],g=e[14],h=e[15],y=p*g*d-f*c*d+f*s*u-o*g*u-p*s*h+o*c*h,x=m*c*d-l*g*d-m*s*u+n*g*u+l*s*h-n*c*h,v=l*f*d-m*p*d+m*o*u-n*f*u-l*o*h+n*p*h,_=m*p*s-l*f*s-m*o*c+n*f*c+l*o*g-n*p*g,b=t*y+a*x+r*v+i*_;if(0==b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const S=1/b;return e[0]=y*S,e[1]=(f*c*i-p*g*i-f*r*u+a*g*u+p*r*h-a*c*h)*S,e[2]=(o*g*i-f*s*i+f*r*d-a*g*d-o*r*h+a*s*h)*S,e[3]=(p*s*i-o*c*i-p*r*d+a*c*d+o*r*u-a*s*u)*S,e[4]=x*S,e[5]=(l*g*i-m*c*i+m*r*u-t*g*u-l*r*h+t*c*h)*S,e[6]=(m*s*i-n*g*i-m*r*d+t*g*d+n*r*h-t*s*h)*S,e[7]=(n*c*i-l*s*i+l*r*d-t*c*d-n*r*u+t*s*u)*S,e[8]=v*S,e[9]=(m*p*i-l*f*i-m*a*u+t*f*u+l*a*h-t*p*h)*S,e[10]=(n*f*i-m*o*i+m*a*d-t*f*d-n*a*h+t*o*h)*S,e[11]=(l*o*i-n*p*i-l*a*d+t*p*d+n*a*u-t*o*u)*S,e[12]=_*S,e[13]=(l*f*r-m*p*r+m*a*c-t*f*c-l*a*g+t*p*g)*S,e[14]=(m*o*r-n*f*r-m*a*s+t*f*s+n*a*g-t*o*g)*S,e[15]=(n*p*r-l*o*r+l*a*s-t*p*s-n*a*c+t*o*c)*S,this}scale(e){const t=this.elements,a=e.x,r=e.y,i=e.z;return t[0]*=a,t[4]*=r,t[8]*=i,t[1]*=a,t[5]*=r,t[9]*=i,t[2]*=a,t[6]*=r,t[10]*=i,t[3]*=a,t[7]*=r,t[11]*=i,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],a=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return r(n(t,a,i))}makeTranslation(e,t,a){return this.set(1,0,0,e,0,1,0,t,0,0,1,a,0,0,0,1),this}makeRotationX(e){const t=rr(e),a=ar(e);return this.set(1,0,0,0,0,t,-a,0,0,a,t,0,0,0,0,1),this}makeRotationY(e){const t=rr(e),a=ar(e);return this.set(t,0,a,0,0,1,0,0,-a,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=rr(e),a=ar(e);return this.set(t,-a,0,0,a,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,a){const r=rr(a),i=ar(a),n=1-r,t=e.x,o=e.y,s=e.z,d=n*t,l=n*o;return this.set(d*t+r,d*o-i*s,d*s+i*o,0,d*o+i*s,l*o+r,l*s-i*t,0,d*s-i*o,l*s+i*t,n*s*s+r,0,0,0,0,1),this}makeScale(e,t,a){return this.set(e,0,0,0,0,t,0,0,0,0,a,0,0,0,0,1),this}makeShear(e,t,a,r,i,n){return this.set(1,a,i,0,e,1,n,0,t,r,1,0,0,0,0,1),this}compose(e,t,a){const r=this.elements,i=t._x,n=t._y,o=t._z,s=t._w,d=i+i,l=n+n,p=o+o,c=i*d,u=i*l,m=i*p,f=n*l,g=n*p,h=o*p,y=s*d,x=s*l,v=s*p,_=a.x,b=a.y,S=a.z;return r[0]=(1-(f+h))*_,r[1]=(u+v)*_,r[2]=(m-x)*_,r[3]=0,r[4]=(u-v)*b,r[5]=(1-(c+h))*b,r[6]=(g+y)*b,r[7]=0,r[8]=(m+x)*S,r[9]=(g-y)*S,r[10]=(1-(c+f))*S,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,a){const r=this.elements;let i=Cs.set(r[0],r[1],r[2]).length();const n=Cs.set(r[4],r[5],r[6]).length(),o=Cs.set(r[8],r[9],r[10]).length(),s=this.determinant();0>s&&(i=-i),e.x=r[12],e.y=r[13],e.z=r[14],Ps.copy(this);const d=1/i,l=1/n,p=1/o;return Ps.elements[0]*=d,Ps.elements[1]*=d,Ps.elements[2]*=d,Ps.elements[4]*=l,Ps.elements[5]*=l,Ps.elements[6]*=l,Ps.elements[8]*=p,Ps.elements[9]*=p,Ps.elements[10]*=p,t.setFromRotationMatrix(Ps),a.x=i,a.y=n,a.z=o,this}makePerspective(e,t,a,r,i,n){void 0===n&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements;return o[0]=2*i/(t-e),o[4]=0,o[8]=(t+e)/(t-e),o[12]=0,o[1]=0,o[5]=2*i/(a-r),o[9]=(a+r)/(a-r),o[13]=0,o[2]=0,o[6]=0,o[10]=-(n+i)/(n-i),o[14]=-2*n*i/(n-i),o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,a,r,i,n){const o=this.elements,s=1/(t-e),d=1/(a-r),l=1/(n-i);return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-((t+e)*s),o[1]=0,o[5]=2*d,o[9]=0,o[13]=-((a+r)*d),o[2]=0,o[6]=0,o[10]=-2*l,o[14]=-((n+i)*l),o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,a=e.elements;for(let r=0;16>r;r++)if(t[r]!==a[r])return!1;return!0}fromArray(e,t=0){for(let a=0;16>a;a++)this.elements[a]=e[a+t];return this}toArray(e=[],t=0){const a=this.elements;return e[t]=a[0],e[t+1]=a[1],e[t+2]=a[2],e[t+3]=a[3],e[t+4]=a[4],e[t+5]=a[5],e[t+6]=a[6],e[t+7]=a[7],e[t+8]=a[8],e[t+9]=a[9],e[t+10]=a[10],e[t+11]=a[11],e[t+12]=a[12],e[t+13]=a[13],e[t+14]=a[14],e[t+15]=a[15],e}}Ls.prototype.isMatrix4=!0;const Cs=new $o,Ps=new Ls,Ds=new $o(0,0,0),Is=new $o(1,1,1),zs=new $o,Bs=new $o,Ns=new $o,Us=new Ls,Hs=new Qo;class Os{constructor(e=0,t=0,a=0,r=Os.DefaultOrder){this._x=e,this._y=t,this._z=a,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,a,r=this._order){return this._x=e,this._y=t,this._z=a,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,a=!0){var r=Math.asin;const i=e.elements,n=i[0],o=i[4],s=i[8],d=i[1],l=i[5],c=i[9],u=i[2],m=i[6],f=i[10];return"XYZ"===t?(this._y=r(p(s,-1,1)),.9999999>dr(s)?(this._x=er(-c,f),this._z=er(-o,n)):(this._x=er(m,l),this._z=0)):"YXZ"===t?(this._x=r(-p(c,-1,1)),.9999999>dr(c)?(this._y=er(s,f),this._z=er(d,l)):(this._y=er(-u,n),this._z=0)):"ZXY"===t?(this._x=r(p(m,-1,1)),.9999999>dr(m)?(this._y=er(-u,f),this._z=er(-o,l)):(this._y=0,this._z=er(d,n))):"ZYX"===t?(this._y=r(-p(u,-1,1)),.9999999>dr(u)?(this._x=er(m,f),this._z=er(d,n)):(this._x=0,this._z=er(-o,l))):"YZX"===t?(this._z=r(p(d,-1,1)),.9999999>dr(d)?(this._x=er(-c,l),this._y=er(-u,n)):(this._x=0,this._y=er(s,f))):"XZY"===t?(this._z=r(-p(o,-1,1)),.9999999>dr(o)?(this._x=er(m,l),this._y=er(s,n)):(this._x=er(-c,f),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t),this._order=t,!0===a&&this._onChangeCallback(),this}setFromQuaternion(e,t,a){return Us.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Us,t,a)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Hs.setFromEuler(this),this.setFromQuaternion(Hs,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Os.prototype.isEuler=!0,Os.DefaultOrder="XYZ",Os.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Fs{constructor(){this.mask=1}set(e){this.mask=(0|1<<e)>>>0}enable(e){this.mask|=0|1<<e}enableAll(){this.mask=-1}toggle(e){this.mask^=0|1<<e}disable(e){this.mask&=~(0|1<<e)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}isEnabled(e){return 0!=(this.mask&(0|1<<e))}}let Gs=0;const Vs=new $o,ks=new Qo,Ws=new Ls,js=new $o,qs=new $o,Xs=new $o,Ys=new Qo,Zs=new $o(1,0,0),Ks=new $o(0,1,0),Js=new $o(0,0,1),Qs={type:"added"},$s={type:"removed"};class ed extends To{constructor(){super(),Object.defineProperty(this,"id",{value:Gs++}),this.uuid=l(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ed.DefaultUp.clone();const e=new $o,t=new Os,a=new Qo,r=new $o(1,1,1);t._onChange(function(){a.setFromEuler(t,!1)}),a._onChange(function(){t.setFromQuaternion(a,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:a},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Ls},normalMatrix:{value:new Po}}),this.matrix=new Ls,this.matrixWorld=new Ls,this.matrixAutoUpdate=ed.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Fs,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ks.setFromAxisAngle(e,t),this.quaternion.multiply(ks),this}rotateOnWorldAxis(e,t){return ks.setFromAxisAngle(e,t),this.quaternion.premultiply(ks),this}rotateX(e){return this.rotateOnAxis(Zs,e)}rotateY(e){return this.rotateOnAxis(Ks,e)}rotateZ(e){return this.rotateOnAxis(Js,e)}translateOnAxis(e,t){return Vs.copy(e).applyQuaternion(this.quaternion),this.position.add(Vs.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Zs,e)}translateY(e){return this.translateOnAxis(Ks,e)}translateZ(e){return this.translateOnAxis(Js,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Ws.copy(this.matrixWorld).invert())}lookAt(e,t,a){e.isVector3?js.copy(e):js.set(e,t,a);const r=this.parent;this.updateWorldMatrix(!0,!1),qs.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ws.lookAt(qs,js,this.up):Ws.lookAt(js,qs,this.up),this.quaternion.setFromRotationMatrix(Ws),r&&(Ws.extractRotation(r.matrixWorld),ks.setFromRotationMatrix(Ws),this.quaternion.premultiply(ks.invert()))}add(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Qs)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent($s)),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent($s)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Ws.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),Ws.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ws),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let a=0,r=this.children.length;a<r;a++){const r=this.children[a],i=r.getObjectByProperty(e,t);if(void 0!==i)return i}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(qs,e,Xs),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(qs,Ys,e),e}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const a=this.matrixWorld.elements;return t.set(a[8],a[9],a[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let a=0,r=t.length;a<r;a++)t[a].traverse(e)}traverseVisible(e){if(!1!==this.visible){e(this);const t=this.children;for(let a=0,r=t.length;a<r;a++)t[a].traverseVisible(e)}}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let a=0,r=t.length;a<r;a++)t[a].updateMatrixWorld(e)}updateWorldMatrix(e,t){const a=this.parent;if(!0===e&&null!==a&&a.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,a=e.length;t<a;t++)e[t].updateWorldMatrix(!1,!0)}}toJSON(e){function t(t,a){return void 0===t[a.uuid]&&(t[a.uuid]=a.toJSON(e)),a.uuid}function a(e){const t=[];for(const a in e){const r=e[a];delete r.metadata,t.push(r)}return t}const r=void 0===e||"string"==typeof e,i={};r&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const n={};if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(n.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=t(e.geometries,this.geometry);const a=this.geometry.parameters;if(void 0!==a&&void 0!==a.shapes){const r=a.shapes;if(Array.isArray(r))for(let a=0,i=r.length;a<i;a++){const i=r[a];t(e.shapes,i)}else t(e.shapes,r)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(t(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const a=[];for(let r=0,i=this.material.length;r<i;r++)a.push(t(e.materials,this.material[r]));n.material=a}else n.material=t(e.materials,this.material);if(0<this.children.length){n.children=[];for(let t=0;t<this.children.length;t++)n.children.push(this.children[t].toJSON(e).object)}if(0<this.animations.length){n.animations=[];for(let a=0;a<this.animations.length;a++){const r=this.animations[a];n.animations.push(t(e.animations,r))}}if(r){const t=a(e.geometries),r=a(e.materials),n=a(e.textures),o=a(e.images),s=a(e.shapes),d=a(e.skeletons),l=a(e.animations),p=a(e.nodes);0<t.length&&(i.geometries=t),0<r.length&&(i.materials=r),0<n.length&&(i.textures=n),0<o.length&&(i.images=o),0<s.length&&(i.shapes=s),0<d.length&&(i.skeletons=d),0<l.length&&(i.animations=l),0<p.length&&(i.nodes=p)}return i.object=n,i}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const a=e.children[t];this.add(a.clone())}return this}}ed.DefaultUp=new $o(0,1,0),ed.DefaultMatrixAutoUpdate=!0,ed.prototype.isObject3D=!0;const td=new $o,ad=new $o,rd=new $o,id=new $o,nd=new $o,od=new $o,sd=new $o,dd=new $o,ld=new $o,pd=new $o;class cd{constructor(e=new $o,t=new $o,a=new $o){this.a=e,this.b=t,this.c=a}static getNormal(e,t,a,i){i.subVectors(a,t),td.subVectors(e,t),i.cross(td);const n=i.lengthSq();return 0<n?i.multiplyScalar(1/r(n)):i.set(0,0,0)}static getBarycoord(e,t,a,r,i){td.subVectors(r,t),ad.subVectors(a,t),rd.subVectors(e,t);const n=td.dot(td),o=td.dot(ad),s=td.dot(rd),d=ad.dot(ad),l=ad.dot(rd),p=n*d-o*o;if(0==p)return i.set(-2,-1,-1);const c=1/p,m=(d*s-o*l)*c,u=(n*l-o*s)*c;return i.set(1-m-u,u,m)}static containsPoint(e,t,a,r){return this.getBarycoord(e,t,a,r,id),0<=id.x&&0<=id.y&&1>=id.x+id.y}static getUV(e,t,a,r,i,n,o,s){return this.getBarycoord(e,t,a,r,id),s.set(0,0),s.addScaledVector(i,id.x),s.addScaledVector(n,id.y),s.addScaledVector(o,id.z),s}static isFrontFacing(e,t,a,r){return td.subVectors(a,t),ad.subVectors(e,t),!!(0>td.cross(ad).dot(r))}set(e,t,a){return this.a.copy(e),this.b.copy(t),this.c.copy(a),this}setFromPointsAndIndices(e,t,a,r){return this.a.copy(e[t]),this.b.copy(e[a]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,a,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,a),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return td.subVectors(this.c,this.b),ad.subVectors(this.a,this.b),.5*td.cross(ad).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return cd.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return cd.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,a,r,i){return cd.getUV(e,this.a,this.b,this.c,t,a,r,i)}containsPoint(e){return cd.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return cd.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const r=this.a,a=this.b,i=this.c;let n,o;nd.subVectors(a,r),od.subVectors(i,r),dd.subVectors(e,r);const s=nd.dot(dd),d=od.dot(dd);if(0>=s&&0>=d)return t.copy(r);ld.subVectors(e,a);const l=nd.dot(ld),p=od.dot(ld);if(0<=l&&p<=l)return t.copy(a);const c=s*p-l*d;if(0>=c&&0<=s&&0>=l)return n=s/(s-l),t.copy(r).addScaledVector(nd,n);pd.subVectors(e,i);const u=nd.dot(pd),m=od.dot(pd);if(0<=m&&u<=m)return t.copy(i);const f=u*d-s*m;if(0>=f&&0<=d&&0>=m)return o=d/(d-m),t.copy(r).addScaledVector(od,o);const g=l*m-u*p;if(0>=g&&0<=p-l&&0<=u-m)return sd.subVectors(i,a),o=(p-l)/(p-l+(u-m)),t.copy(a).addScaledVector(sd,o);const h=1/(g+f+c);return n=f*h,o=c*h,t.copy(r).addScaledVector(nd,n).addScaledVector(od,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let ud=0;class md extends To{constructor(){super(),Object.defineProperty(this,"id",{value:ud++}),this.uuid=l(),this.name="",this.type="Material",this.blending=Ar,this.side=br,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Gr,this.blendDst=Vr,this.blendEquation=Dr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Jr,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=co,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Kn,this.stencilZFail=Kn,this.stencilZPass=Kn,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){0<this._alphaTest!=0<e&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const t in e){const a=e[t];if(void 0===a){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"==t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=a===Tr;continue}const r=this[t];if(void 0===r){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}r&&r.isColor?r.set(a):r&&r.isVector3&&a&&a.isVector3?r.copy(a):this[t]=a}}toJSON(e){function t(e){const t=[];for(const a in e){const r=e[a];delete r.metadata,t.push(r)}return t}const a=void 0===e||"string"==typeof e;a&&(e={textures:{},images:{}});const r={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),this.color&&this.color.isColor&&(r.color=this.color.getHex()),void 0!==this.roughness&&(r.roughness=this.roughness),void 0!==this.metalness&&(r.metalness=this.metalness),void 0!==this.sheen&&(r.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(r.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(r.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(r.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(r.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(r.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(r.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(r.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(r.shininess=this.shininess),void 0!==this.clearcoat&&(r.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(r.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(r.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(r.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(r.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,r.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(r.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(r.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(r.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(r.lightMap=this.lightMap.toJSON(e).uuid,r.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(r.aoMap=this.aoMap.toJSON(e).uuid,r.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(r.bumpMap=this.bumpMap.toJSON(e).uuid,r.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(r.normalMap=this.normalMap.toJSON(e).uuid,r.normalMapType=this.normalMapType,r.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(r.displacementMap=this.displacementMap.toJSON(e).uuid,r.displacementScale=this.displacementScale,r.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(r.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(r.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(r.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(r.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(r.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(r.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(r.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(r.combine=this.combine)),void 0!==this.envMapIntensity&&(r.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(r.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(r.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(r.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(r.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(r.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(r.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(r.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(r.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(r.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(r.size=this.size),null!==this.shadowSide&&(r.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(r.sizeAttenuation=this.sizeAttenuation),this.blending!==Ar&&(r.blending=this.blending),this.side!==br&&(r.side=this.side),this.vertexColors&&(r.vertexColors=!0),1>this.opacity&&(r.opacity=this.opacity),!0===this.transparent&&(r.transparent=this.transparent),r.depthFunc=this.depthFunc,r.depthTest=this.depthTest,r.depthWrite=this.depthWrite,r.colorWrite=this.colorWrite,r.stencilWrite=this.stencilWrite,r.stencilWriteMask=this.stencilWriteMask,r.stencilFunc=this.stencilFunc,r.stencilRef=this.stencilRef,r.stencilFuncMask=this.stencilFuncMask,r.stencilFail=this.stencilFail,r.stencilZFail=this.stencilZFail,r.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(r.rotation=this.rotation),!0===this.polygonOffset&&(r.polygonOffset=!0),0!==this.polygonOffsetFactor&&(r.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(r.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(r.linewidth=this.linewidth),void 0!==this.dashSize&&(r.dashSize=this.dashSize),void 0!==this.gapSize&&(r.gapSize=this.gapSize),void 0!==this.scale&&(r.scale=this.scale),!0===this.dithering&&(r.dithering=!0),0<this.alphaTest&&(r.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(r.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(r.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(r.wireframe=this.wireframe),1<this.wireframeLinewidth&&(r.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(r.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(r.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(r.flatShading=this.flatShading),!1===this.visible&&(r.visible=!1),!1===this.toneMapped&&(r.toneMapped=!1),!1===this.fog&&(r.fog=!1),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),a){const a=t(e.textures),i=t(e.images);0<a.length&&(r.textures=a),0<i.length&&(r.images=i)}return r}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let a=null;if(null!==t){const e=t.length;a=Array(e);for(let r=0;r!==e;++r)a[r]=t[r].clone()}return this.clippingPlanes=a,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}md.prototype.isMaterial=!0,md.fromType=function(){return null};class fd extends md{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new Oo(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ai,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}fd.prototype.isMeshBasicMaterial=!0;const gd=new $o,hd=new Co;class yd{constructor(e,t,a){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0===e?0:e.length/t,this.normalized=!0===a,this.usage=uo,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,a){e*=this.itemSize,a*=t.itemSize;for(let r=0,i=this.itemSize;r<i;r++)this.array[e+r]=t.array[a+r];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let a=0;for(let r=0,i=e.length,n;r<i;r++)n=e[r],void 0===n&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),n=new Oo),t[a++]=n.r,t[a++]=n.g,t[a++]=n.b;return this}copyVector2sArray(e){const t=this.array;let a=0;for(let r=0,i=e.length,n;r<i;r++)n=e[r],void 0===n&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),n=new Co),t[a++]=n.x,t[a++]=n.y;return this}copyVector3sArray(e){const t=this.array;let a=0;for(let r=0,i=e.length,n;r<i;r++)n=e[r],void 0===n&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),n=new $o),t[a++]=n.x,t[a++]=n.y,t[a++]=n.z;return this}copyVector4sArray(e){const t=this.array;let a=0;for(let r=0,i=e.length,n;r<i;r++)n=e[r],void 0===n&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),n=new jo),t[a++]=n.x,t[a++]=n.y,t[a++]=n.z,t[a++]=n.w;return this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,a=this.count;t<a;t++)hd.fromBufferAttribute(this,t),hd.applyMatrix3(e),this.setXY(t,hd.x,hd.y);else if(3===this.itemSize)for(let t=0,a=this.count;t<a;t++)gd.fromBufferAttribute(this,t),gd.applyMatrix3(e),this.setXYZ(t,gd.x,gd.y,gd.z);return this}applyMatrix4(e){for(let t=0,a=this.count;t<a;t++)gd.fromBufferAttribute(this,t),gd.applyMatrix4(e),this.setXYZ(t,gd.x,gd.y,gd.z);return this}applyNormalMatrix(e){for(let t=0,a=this.count;t<a;t++)gd.fromBufferAttribute(this,t),gd.applyNormalMatrix(e),this.setXYZ(t,gd.x,gd.y,gd.z);return this}transformDirection(e){for(let t=0,a=this.count;t<a;t++)gd.fromBufferAttribute(this,t),gd.transformDirection(e),this.setXYZ(t,gd.x,gd.y,gd.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,a){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=a,this}setXYZ(e,t,a,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=a,this.array[e+2]=r,this}setXYZW(e,t,a,r,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=a,this.array[e+2]=r,this.array[e+3]=i,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==uo&&(e.usage=this.usage),(0!==this.updateRange.offset||-1!==this.updateRange.count)&&(e.updateRange=this.updateRange),e}}yd.prototype.isBufferAttribute=!0;class xd extends yd{constructor(e,t,a){super(new Int8Array(e),t,a)}}class vd extends yd{constructor(e,t,a){super(new Uint8Array(e),t,a)}}class _d extends yd{constructor(e,t,a){super(new Uint8ClampedArray(e),t,a)}}class bd extends yd{constructor(e,t,a){super(new Int16Array(e),t,a)}}class Sd extends yd{constructor(e,t,a){super(new Uint16Array(e),t,a)}}class Md extends yd{constructor(e,t,a){super(new Int32Array(e),t,a)}}class Td extends yd{constructor(e,t,a){super(new Uint32Array(e),t,a)}}class Ed extends yd{constructor(e,t,a){super(new Uint16Array(e),t,a)}}Ed.prototype.isFloat16BufferAttribute=!0;class wd extends yd{constructor(e,t,a){super(new Float32Array(e),t,a)}}class Ad extends yd{constructor(e,t,a){super(new Float64Array(e),t,a)}}let Rd=0;const Ld=new Ls,Cd=new ed,Pd=new $o,Dd=new as,Id=new as,zd=new $o;class Bd extends To{constructor(){super(),Object.defineProperty(this,"id",{value:Rd++}),this.uuid=l(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:Infinity},this.userData={}}getIndex(){return this.index}setIndex(e){return this.index=Array.isArray(e)?new(h(e)?Td:Sd)(e,1):e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,a=0){this.groups.push({start:e,count:t,materialIndex:a})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const a=this.attributes.normal;if(void 0!==a){const t=new Po().getNormalMatrix(e);a.applyNormalMatrix(t),a.needsUpdate=!0}const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(e),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return Ld.makeRotationFromQuaternion(e),this.applyMatrix4(Ld),this}rotateX(e){return Ld.makeRotationX(e),this.applyMatrix4(Ld),this}rotateY(e){return Ld.makeRotationY(e),this.applyMatrix4(Ld),this}rotateZ(e){return Ld.makeRotationZ(e),this.applyMatrix4(Ld),this}translate(e,t,a){return Ld.makeTranslation(e,t,a),this.applyMatrix4(Ld),this}scale(e,t,a){return Ld.makeScale(e,t,a),this.applyMatrix4(Ld),this}lookAt(e){return Cd.lookAt(e),Cd.updateMatrix(),this.applyMatrix4(Cd.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Pd).negate(),this.translate(Pd.x,Pd.y,Pd.z),this}setFromPoints(e){const t=[];for(let a=0,r=e.length;a<r;a++){const r=e[a];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new wd(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new as);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".",this),void this.boundingBox.set(new $o(-Infinity,-Infinity,-Infinity),new $o(+Infinity,+Infinity,+Infinity));if(void 0===e)this.boundingBox.makeEmpty();else if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,a=t.length;e<a;e++){const a=t[e];Dd.setFromBufferAttribute(a),this.morphTargetsRelative?(zd.addVectors(this.boundingBox.min,Dd.min),this.boundingBox.expandByPoint(zd),zd.addVectors(this.boundingBox.max,Dd.max),this.boundingBox.expandByPoint(zd)):(this.boundingBox.expandByPoint(Dd.min),this.boundingBox.expandByPoint(Dd.max))}(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error("THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.",this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new _s);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".",this),void this.boundingSphere.set(new $o,Infinity);if(e){const a=this.boundingSphere.center;if(Dd.setFromBufferAttribute(e),t)for(let e=0,a=t.length;e<a;e++){const a=t[e];Id.setFromBufferAttribute(a),this.morphTargetsRelative?(zd.addVectors(Dd.min,Id.min),Dd.expandByPoint(zd),zd.addVectors(Dd.max,Id.max),Dd.expandByPoint(zd)):(Dd.expandByPoint(Id.min),Dd.expandByPoint(Id.max))}Dd.getCenter(a);let o=0;for(let t=0,r=e.count;t<r;t++)zd.fromBufferAttribute(e,t),o=n(o,a.distanceToSquared(zd));if(t)for(let r=0,i=t.length;r<i;r++){const i=t[r],s=this.morphTargetsRelative;for(let t=0,r=i.count;t<r;t++)zd.fromBufferAttribute(i,t),s&&(Pd.fromBufferAttribute(e,t),zd.add(Pd)),o=n(o,a.distanceToSquared(zd))}this.boundingSphere.radius=r(o),isNaN(this.boundingSphere.radius)&&console.error("THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.",this)}}computeTangents(){function e(e,t,a){f.fromArray(o,3*e),g.fromArray(o,3*t),h.fromArray(o,3*a),y.fromArray(d,2*e),x.fromArray(d,2*t),v.fromArray(d,2*a),g.sub(f),h.sub(f),x.sub(y),v.sub(y);const i=1/(x.x*v.y-v.x*x.y);isFinite(i)&&(_.copy(g).multiplyScalar(v.y).addScaledVector(h,-x.y).multiplyScalar(i),S.copy(h).multiplyScalar(x.x).addScaledVector(g,-v.x).multiplyScalar(i),u[e].add(_),u[t].add(_),u[a].add(_),m[e].add(S),m[t].add(S),m[a].add(S))}function t(e){T.fromArray(s,3*e),n.copy(T);const a=u[e];b.copy(a),b.sub(T.multiplyScalar(T.dot(a))).normalize(),M.crossVectors(n,a);const t=M.dot(m[e]),r=0>t?-1:1;p[4*e]=b.x,p[4*e+1]=b.y,p[4*e+2]=b.z,p[4*e+3]=r}const a=this.index,r=this.attributes;if(null===a||void 0===r.position||void 0===r.normal||void 0===r.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const i=a.array,o=r.position.array,s=r.normal.array,d=r.uv.array,l=o.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new yd(new Float32Array(4*l),4));const p=this.getAttribute("tangent").array,u=[],m=[];for(let e=0;e<l;e++)u[e]=new $o,m[e]=new $o;const f=new $o,g=new $o,h=new $o,y=new Co,x=new Co,v=new Co,_=new $o,S=new $o;let c=this.groups;0===c.length&&(c=[{start:0,count:i.length}]);for(let t=0,a=c.length;t<a;++t){const a=c[t],r=a.start,n=a.count;for(let t=r;t<r+n;t+=3)e(i[t+0],i[t+1],i[t+2])}const b=new $o,M=new $o,T=new $o,n=new $o;for(let e=0,a=c.length;e<a;++e){const a=c[e],r=a.start,n=a.count;for(let e=r;e<r+n;e+=3)t(i[e+0]),t(i[e+1]),t(i[e+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let a=this.getAttribute("normal");if(void 0===a)a=new yd(new Float32Array(3*t.count),3),this.setAttribute("normal",a);else for(let e=0,t=a.count;e<t;e++)a.setXYZ(e,0,0,0);const r=new $o,n=new $o,o=new $o,s=new $o,d=new $o,l=new $o,p=new $o,c=new $o;if(e)for(let u=0,i=e.count;u<i;u+=3){const i=e.getX(u+0),m=e.getX(u+1),f=e.getX(u+2);r.fromBufferAttribute(t,i),n.fromBufferAttribute(t,m),o.fromBufferAttribute(t,f),p.subVectors(o,n),c.subVectors(r,n),p.cross(c),s.fromBufferAttribute(a,i),d.fromBufferAttribute(a,m),l.fromBufferAttribute(a,f),s.add(p),d.add(p),l.add(p),a.setXYZ(i,s.x,s.y,s.z),a.setXYZ(m,d.x,d.y,d.z),a.setXYZ(f,l.x,l.y,l.z)}else for(let e=0,i=t.count;e<i;e+=3)r.fromBufferAttribute(t,e+0),n.fromBufferAttribute(t,e+1),o.fromBufferAttribute(t,e+2),p.subVectors(o,n),c.subVectors(r,n),p.cross(c),a.setXYZ(e+0,p.x,p.y,p.z),a.setXYZ(e+1,p.x,p.y,p.z),a.setXYZ(e+2,p.x,p.y,p.z);this.normalizeNormals(),a.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry))return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const a=this.attributes;for(const r in a){if(void 0===e.attributes[r])continue;const i=a[r],n=i.array,s=e.attributes[r],d=s.array,l=s.itemSize*t,p=o(d.length,n.length-l);for(let e=0,t=l;e<p;e++,t++)n[t]=d[e]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,a=e.count;t<a;t++)zd.fromBufferAttribute(e,t),zd.normalize(),e.setXYZ(t,zd.x,zd.y,zd.z)}toNonIndexed(){function e(e,t){const a=e.array,r=e.itemSize,i=e.normalized,n=new a.constructor(t.length*r);let o=0,s=0;for(let d=0,i=t.length;d<i;d++){o=e.isInterleavedBufferAttribute?t[d]*e.data.stride+e.offset:t[d]*r;for(let e=0;e<r;e++)n[s++]=a[o++]}return new yd(n,r,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Bd,a=this.index.array,r=this.attributes;for(const i in r){const n=r[i],o=e(n,a);t.setAttribute(i,o)}const i=this.morphAttributes;for(const r in i){const n=[],o=i[r];for(let t=0,r=o.length;t<r;t++){const r=o[t],i=e(r,a);n.push(i)}t.morphAttributes[r]=n}t.morphTargetsRelative=this.morphTargetsRelative;const n=this.groups;for(let e=0,a=n.length;e<a;e++){const a=n[e];t.addGroup(a.start,a.count,a.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),0<Object.keys(this.userData).length&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const a in t)void 0!==t[a]&&(e[a]=t[a]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const a=this.attributes;for(const t in a){const r=a[t];e.data.attributes[t]=r.toJSON(e.data)}const r={};let i=!1;for(const t in this.morphAttributes){const a=this.morphAttributes[t],n=[];for(let t=0,r=a.length;t<r;t++){const r=a[t];n.push(r.toJSON(e.data))}0<n.length&&(r[t]=n,i=!0)}i&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const n=this.groups;0<n.length&&(e.data.groups=JSON.parse(JSON.stringify(n)));const o=this.boundingSphere;return null!==o&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const a=e.index;null!==a&&this.setIndex(a.clone(t));const r=e.attributes;for(const a in r){const e=r[a];this.setAttribute(a,e.clone(t))}const i=e.morphAttributes;for(const a in i){const e=[],r=i[a];for(let a=0,i=r.length;a<i;a++)e.push(r[a].clone(t));this.morphAttributes[a]=e}this.morphTargetsRelative=e.morphTargetsRelative;const n=e.groups;for(let t=0,a=n.length;t<a;t++){const e=n[t];this.addGroup(e.start,e.count,e.materialIndex)}const o=e.boundingBox;null!==o&&(this.boundingBox=o.clone());const s=e.boundingSphere;return null!==s&&(this.boundingSphere=s.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}Bd.prototype.isBufferGeometry=!0;const Nd=new Ls,Ud=new Rs,Hd=new _s,Od=new $o,Fd=new $o,Gd=new $o,Vd=new $o,kd=new $o,Wd=new $o,jd=new $o,qd=new $o,Xd=new $o,Yd=new Co,Zd=new Co,Kd=new Co,Jd=new $o,Qd=new $o;class $d extends ed{constructor(e=new Bd,t=new fd){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,a=Object.keys(t);if(0<a.length){const e=t[a[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,a=e.length;t<a;t++){const a=e[t].name||t+"";this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=t}}}}else{const t=e.morphTargets;void 0!==t&&0<t.length&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const a=this.geometry,r=this.material,i=this.matrixWorld;if(void 0===r)return;if(null===a.boundingSphere&&a.computeBoundingSphere(),Hd.copy(a.boundingSphere),Hd.applyMatrix4(i),!1===e.ray.intersectsSphere(Hd))return;if(Nd.copy(i).invert(),Ud.copy(e.ray).applyMatrix4(Nd),null!==a.boundingBox&&!1===Ud.intersectsBox(a.boundingBox))return;let s;if(a.isBufferGeometry){const d=a.index,l=a.attributes.position,p=a.morphAttributes.position,u=a.morphTargetsRelative,m=a.attributes.uv,f=a.attributes.uv2,c=a.groups,g=a.drawRange;if(null!==d){if(Array.isArray(r))for(let a=0,i=c.length;a<i;a++){const i=c[a],h=r[i.materialIndex],y=n(i.start,g.start),x=o(d.count,o(i.start+i.count,g.start+g.count));for(let r=y;r<x;r+=3){const n=d.getX(r),a=d.getX(r+1),o=d.getX(r+2);s=w(this,h,e,Ud,l,p,u,m,f,n,a,o),s&&(s.faceIndex=sr(r/3),s.face.materialIndex=i.materialIndex,t.push(s))}}else{const a=n(0,g.start),c=o(d.count,g.start+g.count);for(let n=a;n<c;n+=3){const i=d.getX(n),a=d.getX(n+1),o=d.getX(n+2);s=w(this,r,e,Ud,l,p,u,m,f,i,a,o),s&&(s.faceIndex=sr(n/3),t.push(s))}}}else if(void 0!==l)if(Array.isArray(r))for(let a=0,i=c.length;a<i;a++){const i=c[a],d=r[i.materialIndex],h=n(i.start,g.start),y=o(l.count,o(i.start+i.count,g.start+g.count));for(let r=h;r<y;r+=3){const n=r,a=r+1,o=r+2;s=w(this,d,e,Ud,l,p,u,m,f,n,a,o),s&&(s.faceIndex=sr(r/3),s.face.materialIndex=i.materialIndex,t.push(s))}}else{const a=n(0,g.start),d=o(l.count,g.start+g.count);for(let n=a;n<d;n+=3){const i=n,a=n+1,o=n+2;s=w(this,r,e,Ud,l,p,u,m,f,i,a,o),s&&(s.faceIndex=sr(n/3),t.push(s))}}}else a.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}$d.prototype.isMesh=!0;class el extends Bd{constructor(e=1,t=1,a=1,r=1,i=1,n=1){function o(e,t,a,r,i,n,o,u,g,h,y){const x=g+1;let v=0,_=0;const b=new $o;for(let s=0;s<h+1;s++){const l=s*(o/h)-o/2;for(let o=0;o<x;o++){const m=o*(n/g)-n/2;b[e]=m*r,b[t]=l*i,b[a]=u/2,d.push(b.x,b.y,b.z),b[e]=0,b[t]=0,b[a]=0<u?1:-1,p.push(b.x,b.y,b.z),c.push(o/g),c.push(1-s/h),v+=1}}for(let s=0;s<h;s++)for(let e=0;e<g;e++){const t=m+e+x*s,a=m+e+x*(s+1),r=m+(e+1)+x*(s+1),i=m+(e+1)+x*s;l.push(t,a,i),l.push(a,r,i),_+=6}s.addGroup(f,_,y),f+=_,m+=v}super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:a,widthSegments:r,heightSegments:i,depthSegments:n};const s=this;r=sr(r),i=sr(i),n=sr(n);const l=[],d=[],p=[],c=[];let m=0,f=0;o("z","y","x",-1,-1,a,t,e,n,i,0),o("z","y","x",1,-1,a,t,-e,n,i,1),o("x","z","y",1,1,e,a,t,r,n,2),o("x","z","y",1,-1,e,a,-t,r,n,3),o("x","y","z",1,-1,e,t,a,r,i,4),o("x","y","z",-1,-1,e,t,-a,r,i,5),this.setIndex(l),this.setAttribute("position",new wd(d,3)),this.setAttribute("normal",new wd(p,3)),this.setAttribute("uv",new wd(c,2))}static fromJSON(e){return new el(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}const tl={clone:A,merge:R};class al extends md{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=A(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);for(const a in t.glslVersion=this.glslVersion,t.uniforms={},this.uniforms){const r=this.uniforms[a],i=r.value;t.uniforms[a]=i&&i.isTexture?{type:"t",value:i.toJSON(e).uuid}:i&&i.isColor?{type:"c",value:i.getHex()}:i&&i.isVector2?{type:"v2",value:i.toArray()}:i&&i.isVector3?{type:"v3",value:i.toArray()}:i&&i.isVector4?{type:"v4",value:i.toArray()}:i&&i.isMatrix3?{type:"m3",value:i.toArray()}:i&&i.isMatrix4?{type:"m4",value:i.toArray()}:{value:i}}0<Object.keys(this.defines).length&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const a={};for(const t in this.extensions)!0===this.extensions[t]&&(a[t]=!0);return 0<Object.keys(a).length&&(t.extensions=a),t}}al.prototype.isShaderMaterial=!0;class rl extends ed{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new Ls,this.projectionMatrix=new Ls,this.projectionMatrixInverse=new Ls}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const a=this.matrixWorld.elements;return t.set(-a[8],-a[9],-a[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}rl.prototype.isCamera=!0;class il extends rl{constructor(e=50,t=1,a=.1,r=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=a,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*Ro*Ja(t),this.updateProjectionMatrix()}getFocalLength(){const e=t(.5*Ao*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*Ro*Ja(t(.5*Ao*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*o(this.aspect,1)}getFilmHeight(){return this.filmGauge/n(this.aspect,1)}setViewOffset(e,t,a,r,i,n){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=a,this.view.offsetY=r,this.view.width=i,this.view.height=n,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let a=e*t(.5*Ao*this.fov)/this.zoom,r=2*a,i=this.aspect*r,n=-.5*i;const o=this.view;if(null!==this.view&&this.view.enabled){const e=o.fullWidth,t=o.fullHeight;n+=o.offsetX*i/e,a-=o.offsetY*r/t,i*=o.width/e,r*=o.height/t}const s=this.filmOffset;0!==s&&(n+=e*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(n,n+i,a,a-r,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}il.prototype.isPerspectiveCamera=!0;const nl=90,ol=1;class sl extends ed{constructor(e,t,a){if(super(),this.type="CubeCamera",!0!==a.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=a;const r=new il(nl,ol,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new $o(1,0,0)),this.add(r);const i=new il(nl,ol,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new $o(-1,0,0)),this.add(i);const n=new il(nl,ol,e,t);n.layers=this.layers,n.up.set(0,0,1),n.lookAt(new $o(0,1,0)),this.add(n);const o=new il(nl,ol,e,t);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new $o(0,-1,0)),this.add(o);const s=new il(nl,ol,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new $o(0,0,1)),this.add(s);const d=new il(nl,ol,e,t);d.layers=this.layers,d.up.set(0,-1,0),d.lookAt(new $o(0,0,-1)),this.add(d)}update(e,t){null===this.parent&&this.updateMatrixWorld();const a=this.renderTarget,[r,i,n,o,s,d]=this.children,l=e.getRenderTarget(),p=e.toneMapping,c=e.xr.enabled;e.toneMapping=ni,e.xr.enabled=!1;const u=a.texture.generateMipmaps;a.texture.generateMipmaps=!1,e.setRenderTarget(a,0),e.render(t,r),e.setRenderTarget(a,1),e.render(t,i),e.setRenderTarget(a,2),e.render(t,n),e.setRenderTarget(a,3),e.render(t,o),e.setRenderTarget(a,4),e.render(t,s),a.texture.generateMipmaps=u,e.setRenderTarget(a,5),e.render(t,d),e.setRenderTarget(l),e.toneMapping=p,e.xr.enabled=c,a.texture.needsPMREMUpdate=!0}}class dl extends Wo{constructor(e,t,a,r,i,n,o,s,d,l){e=void 0===e?[]:e,t=void 0===t?ui:t,super(e,t,a,r,i,n,o,s,d,l),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}dl.prototype.isCubeTexture=!0;class ll extends qo{constructor(e,t={}){super(e,e,t);const a={width:e,height:e,depth:1};this.texture=new dl([a,a,a,a,a,a],t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0===t.minFilter?Ei:t.minFilter}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const a={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new el(5,5,5),i=new al({name:"CubemapFromEquirect",uniforms:A(a.uniforms),vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,side:Sr,blending:wr});i.uniforms.tEquirect.value=t;const n=new $d(r,i),o=t.minFilter;t.minFilter===Ri&&(t.minFilter=Ei);const s=new sl(1,10,this);return s.update(e,n),t.minFilter=o,n.geometry.dispose(),n.material.dispose(),this}clear(e,t,a,r){const i=e.getRenderTarget();for(let n=0;6>n;n++)e.setRenderTarget(this,n),e.clear(t,a,r);e.setRenderTarget(i)}}ll.prototype.isWebGLCubeRenderTarget=!0;const pl=new $o,cl=new $o,ul=new Po;class ml{constructor(e=new $o(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,a,r){return this.normal.set(e,t,a),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,a){const r=pl.subVectors(a,t).cross(cl.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,a){const r=e.delta(pl),i=this.normal.dot(r);if(0===i)return 0===this.distanceToPoint(e.start)?a.copy(e.start):null;const n=-(e.start.dot(this.normal)+this.constant)/i;return 0>n||1<n?null:a.copy(r).multiplyScalar(n).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),a=this.distanceToPoint(e.end);return 0>t&&0<a||0>a&&0<t}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const a=t||ul.getNormalMatrix(e),r=this.coplanarPoint(pl).applyMatrix4(e),i=this.normal.applyMatrix3(a).normalize();return this.constant=-r.dot(i),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}ml.prototype.isPlane=!0;const fl=new _s,gl=new $o;class hl{constructor(e=new ml,t=new ml,a=new ml,r=new ml,i=new ml,n=new ml){this.planes=[e,t,a,r,i,n]}set(e,t,a,r,i,n){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(a),o[3].copy(r),o[4].copy(i),o[5].copy(n),this}copy(e){const t=this.planes;for(let a=0;6>a;a++)t[a].copy(e.planes[a]);return this}setFromProjectionMatrix(e){const t=this.planes,a=e.elements,r=a[0],i=a[1],n=a[2],o=a[3],s=a[4],d=a[5],l=a[6],p=a[7],c=a[8],u=a[9],m=a[10],f=a[11],g=a[12],h=a[13],y=a[14],x=a[15];return t[0].setComponents(o-r,p-s,f-c,x-g).normalize(),t[1].setComponents(o+r,p+s,f+c,x+g).normalize(),t[2].setComponents(o+i,p+d,f+u,x+h).normalize(),t[3].setComponents(o-i,p-d,f-u,x-h).normalize(),t[4].setComponents(o-n,p-l,f-m,x-y).normalize(),t[5].setComponents(o+n,p+l,f+m,x+y).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),fl.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(fl)}intersectsSprite(e){return fl.center.set(0,0,0),fl.radius=.7071067811865476,fl.applyMatrix4(e.matrixWorld),this.intersectsSphere(fl)}intersectsSphere(e){const t=this.planes,a=e.center,r=-e.radius;for(let n=0;6>n;n++){const e=t[n].distanceToPoint(a);if(e<r)return!1}return!0}intersectsBox(e){const t=this.planes;for(let a=0;6>a;a++){const r=t[a];if(gl.x=0<r.normal.x?e.max.x:e.min.x,gl.y=0<r.normal.y?e.max.y:e.min.y,gl.z=0<r.normal.z?e.max.z:e.min.z,0>r.distanceToPoint(gl))return!1}return!0}containsPoint(e){const t=this.planes;for(let a=0;6>a;a++)if(0>t[a].distanceToPoint(e))return!1;return!0}clone(){return new this.constructor().copy(this)}}class yl extends Bd{constructor(e=1,t=1,a=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:a,heightSegments:r};const i=sr(a),n=sr(r),o=i+1,s=[],d=[],l=[],p=[];for(let s=0;s<n+1;s++){const a=s*(t/n)-t/2;for(let t=0;t<o;t++){const r=t*(e/i)-e/2;d.push(r,-a,0),l.push(0,0,1),p.push(t/i),p.push(1-s/n)}}for(let l=0;l<n;l++)for(let e=0;e<i;e++){const t=e+o*l,a=e+o*(l+1),r=e+1+o*(l+1),i=e+1+o*l;s.push(t,a,i),s.push(a,r,i)}this.setIndex(s),this.setAttribute("position",new wd(d,3)),this.setAttribute("normal",new wd(l,3)),this.setAttribute("uv",new wd(p,2))}static fromJSON(e){return new yl(e.width,e.height,e.widthSegments,e.heightSegments)}}const xl={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n\t#endif\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},vl={common:{diffuse:{value:new Oo(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Po},uv2Transform:{value:new Po},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Co(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Oo(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Oo(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Po}},sprite:{diffuse:{value:new Oo(16777215)},opacity:{value:1},center:{value:new Co(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Po}}},_l={basic:{uniforms:R([vl.common,vl.specularmap,vl.envmap,vl.aomap,vl.lightmap,vl.fog]),vertexShader:xl.meshbasic_vert,fragmentShader:xl.meshbasic_frag},lambert:{uniforms:R([vl.common,vl.specularmap,vl.envmap,vl.aomap,vl.lightmap,vl.emissivemap,vl.fog,vl.lights,{emissive:{value:new Oo(0)}}]),vertexShader:xl.meshlambert_vert,fragmentShader:xl.meshlambert_frag},phong:{uniforms:R([vl.common,vl.specularmap,vl.envmap,vl.aomap,vl.lightmap,vl.emissivemap,vl.bumpmap,vl.normalmap,vl.displacementmap,vl.fog,vl.lights,{emissive:{value:new Oo(0)},specular:{value:new Oo(1118481)},shininess:{value:30}}]),vertexShader:xl.meshphong_vert,fragmentShader:xl.meshphong_frag},standard:{uniforms:R([vl.common,vl.envmap,vl.aomap,vl.lightmap,vl.emissivemap,vl.bumpmap,vl.normalmap,vl.displacementmap,vl.roughnessmap,vl.metalnessmap,vl.fog,vl.lights,{emissive:{value:new Oo(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:xl.meshphysical_vert,fragmentShader:xl.meshphysical_frag},toon:{uniforms:R([vl.common,vl.aomap,vl.lightmap,vl.emissivemap,vl.bumpmap,vl.normalmap,vl.displacementmap,vl.gradientmap,vl.fog,vl.lights,{emissive:{value:new Oo(0)}}]),vertexShader:xl.meshtoon_vert,fragmentShader:xl.meshtoon_frag},matcap:{uniforms:R([vl.common,vl.bumpmap,vl.normalmap,vl.displacementmap,vl.fog,{matcap:{value:null}}]),vertexShader:xl.meshmatcap_vert,fragmentShader:xl.meshmatcap_frag},points:{uniforms:R([vl.points,vl.fog]),vertexShader:xl.points_vert,fragmentShader:xl.points_frag},dashed:{uniforms:R([vl.common,vl.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:xl.linedashed_vert,fragmentShader:xl.linedashed_frag},depth:{uniforms:R([vl.common,vl.displacementmap]),vertexShader:xl.depth_vert,fragmentShader:xl.depth_frag},normal:{uniforms:R([vl.common,vl.bumpmap,vl.normalmap,vl.displacementmap,{opacity:{value:1}}]),vertexShader:xl.meshnormal_vert,fragmentShader:xl.meshnormal_frag},sprite:{uniforms:R([vl.sprite,vl.fog]),vertexShader:xl.sprite_vert,fragmentShader:xl.sprite_frag},background:{uniforms:{uvTransform:{value:new Po},t2D:{value:null}},vertexShader:xl.background_vert,fragmentShader:xl.background_frag},cube:{uniforms:R([vl.envmap,{opacity:{value:1}}]),vertexShader:xl.cube_vert,fragmentShader:xl.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:xl.equirect_vert,fragmentShader:xl.equirect_frag},distanceRGBA:{uniforms:R([vl.common,vl.displacementmap,{referencePosition:{value:new $o},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:xl.distanceRGBA_vert,fragmentShader:xl.distanceRGBA_frag},shadow:{uniforms:R([vl.lights,vl.fog,{color:{value:new Oo(0)},opacity:{value:1}}]),vertexShader:xl.shadow_vert,fragmentShader:xl.shadow_frag}};_l.physical={uniforms:R([_l.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Co(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new Oo(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Co},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Oo(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Oo(1,1,1)},specularColorMap:{value:null}}]),vertexShader:xl.meshphysical_vert,fragmentShader:xl.meshphysical_frag};class bl extends rl{constructor(e=-1,t=1,a=1,r=-1,i=.1,n=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=a,this.bottom=r,this.near=i,this.far=n,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,a,r,i,n){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=a,this.view.offsetY=r,this.view.width=i,this.view.height=n,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),a=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let i=a-e,n=a+e,o=r+t,s=r-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=e*this.view.offsetX,n=i+e*this.view.width,o-=t*this.view.offsetY,s=o-t*this.view.height}this.projectionMatrix.makeOrthographic(i,n,o,s,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}bl.prototype.isOrthographicCamera=!0;const Sl=4,Ml=[.125,.215,.35,.446,.526,.582],Tl=20,El=new bl,wl=new Oo;let Al=null;const Rl=(1+2.23606797749979)/2,Ll=1/Rl,Cl=[new $o(1,1,1),new $o(-1,1,1),new $o(1,1,-1),new $o(-1,1,-1),new $o(0,Rl,Ll),new $o(0,Rl,-Ll),new $o(Ll,0,Rl),new $o(-Ll,0,Rl),new $o(Rl,Ll,0),new $o(-Rl,Ll,0)];class Pl{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,a=.1,r=100){Al=this._renderer.getRenderTarget(),this._setSize(256);const i=this._allocateTargets();return i.depthBuffer=!0,this._sceneToCubeUV(e,a,r,i),0<t&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=V(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=G(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=sr(Ka(e)),this._cubeSize=a(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Al),e.scissorTest=!1,O(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===ui||e.mapping===mi?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Al=this._renderer.getRenderTarget();const a=t||this._allocateTargets();return this._textureToCubeUV(e,a),this._applyPMREM(a),this._cleanup(a),a}_allocateTargets(){const e=3*n(this._cubeSize,112),t=4*this._cubeSize,a={magFilter:Ei,minFilter:Ei,generateMipmaps:!1,type:Ui,format:ki,encoding:Fn,depthBuffer:!1},r=H(e,t,a);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=H(e,t,a);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=U(r)),this._blurMaterial=F(r,e,t)}return r}_compileMaterial(e){const t=new $d(this._lodPlanes[0],e);this._renderer.compile(t,El)}_sceneToCubeUV(e,t,a,r){const n=new il(90,1,t,a),o=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],d=this._renderer,i=d.autoClear,l=d.toneMapping;d.getClearColor(wl),d.toneMapping=ni,d.autoClear=!1;const p=new fd({name:"PMREM.Background",side:Sr,depthWrite:!1,depthTest:!1}),c=new $d(new el(),p);let u=!1;const m=e.background;m?m.isColor&&(p.color.copy(m),e.background=null,u=!0):(p.color.copy(wl),u=!0);for(let l=0;6>l;l++){const t=l%3;0==t?(n.up.set(0,o[l],0),n.lookAt(s[l],0,0)):1==t?(n.up.set(0,0,o[l]),n.lookAt(0,s[l],0)):(n.up.set(0,o[l],0),n.lookAt(0,0,s[l]));const a=this._cubeSize;O(r,t*a,2<l?a:0,a,a),d.setRenderTarget(r),u&&d.render(c,n),d.render(e,n)}c.geometry.dispose(),c.material.dispose(),d.toneMapping=l,d.autoClear=i,e.background=m}_textureToCubeUV(e,t){const a=this._renderer,r=e.mapping===ui||e.mapping===mi;r?(null===this._cubemapMaterial&&(this._cubemapMaterial=V()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=G());const i=r?this._cubemapMaterial:this._equirectMaterial,n=new $d(this._lodPlanes[0],i),o=i.uniforms;o.envMap.value=e;const s=this._cubeSize;O(t,0,0,3*s,2*s),a.setRenderTarget(t),a.render(n,El)}_applyPMREM(e){const t=this._renderer,a=t.autoClear;t.autoClear=!1;for(let t=1;t<this._lodPlanes.length;t++){const a=r(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),i=Cl[(t-1)%Cl.length];this._blur(e,t-1,t,a,i)}t.autoClear=a}_blur(e,t,a,r,i){const n=this._pingPongRenderTarget;this._halfBlur(e,n,t,a,r,"latitudinal",i),this._halfBlur(n,e,a,a,r,"longitudinal",i)}_halfBlur(e,t,a,r,i,n,o){const d=this._renderer,l=this._blurMaterial;"latitudinal"!==n&&"longitudinal"!==n&&console.error("blur direction must be either latitudinal or longitudinal!");const p=new $d(this._lodPlanes[r],l),c=l.uniforms,u=this._sizeLods[a]-1,m=isFinite(i)?s/(2*u):2*s/(2*Tl-1),f=i/m,g=isFinite(i)?1+sr(3*f):Tl;g>Tl&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Tl}`);const h=[];let v=0;for(let s=0;s<Tl;++s){const e=s/f,t=lr(-e*e/2);h.push(t),0===s?v+=t:s<g&&(v+=2*t)}for(let s=0;s<h.length;s++)h[s]/=v;c.envMap.value=e.texture,c.samples.value=g,c.weights.value=h,c.latitudinal.value="latitudinal"===n,o&&(c.poleAxis.value=o);const{_lodMax:_}=this;c.dTheta.value=m,c.mipInt.value=_-a;const b=this._sizeLods[r],S=3*b*(r>_-Sl?r-_+Sl:0),x=4*(this._cubeSize-b);O(t,S,x,3*b,2*b),d.setRenderTarget(t),d.render(p,El)}}const Dl=new Wo,Il=new Xo,zl=new Zo,Bl=new dl,Nl=[],Ul=[],Hl=new Float32Array(16),Ol=new Float32Array(9),Fl=new Float32Array(4);qe.prototype.setValue=function(e,t,a){const r=this.seq;for(let o=0,i=r.length;o!==i;++o){const i=r[o];i.setValue(e,t[i.id],a)}};const Gl=/(\w+)(\])?(\[|\.)?/g;Ze.prototype.setValue=function(e,t,a,r){const i=this.map[t];void 0!==i&&i.setValue(e,a,r)},Ze.prototype.setOptional=function(e,t,a){const r=t[a];void 0!==r&&this.setValue(e,a,r)},Ze.upload=function(e,t,a,r){for(let o=0,i=t.length;o!==i;++o){const i=t[o],n=a[i.id];!1!==n.needsUpdate&&i.setValue(e,n.value,r)}},Ze.seqWithValue=function(e,t){const a=[];for(let r=0,i=e.length;r!==i;++r){const i=e[r];i.id in t&&a.push(i)}return a};let Vl=0;const kl=/^[ \t]*#include +<([\w\d./]+)>/gm,Wl=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,jl=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;let ql=0;class Xl{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,a=e.fragmentShader,r=this._getShaderStage(t),i=this._getShaderStage(a),n=this._getShaderCacheForMaterial(e);return!1===n.has(r)&&(n.add(r),r.usedTimes++),!1===n.has(i)&&(n.add(i),i.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const a of t)a.usedTimes--,0===a.usedTimes&&this.shaderCache.delete(a.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return!1===t.has(e)&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(!1===t.has(e)){const a=new Yl(e);t.set(e,a)}return t.get(e)}}class Yl{constructor(e){this.id=ql++,this.code=e,this.usedTimes=0}}let Zl=0;class Kl extends md{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=Vn,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}Kl.prototype.isMeshDepthMaterial=!0;class Jl extends md{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new $o,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}Jl.prototype.isMeshDistanceMaterial=!0;const Ql="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",$l="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";class ep extends il{constructor(e=[]){super(),this.cameras=e}}ep.prototype.isArrayCamera=!0;class tp extends ed{constructor(){super(),this.type="Group"}}tp.prototype.isGroup=!0;const ap={type:"move"};class rp{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new tp,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new tp,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new $o,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new $o),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new tp,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new $o,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new $o),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,a){let r=null,i=null,n=null;const o=this._targetRay,s=this._grip,d=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(null!==o&&(r=t.getPose(e.targetRaySpace,a),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(ap))),d&&e.hand){n=!0;for(const r of e.hand.values()){const e=t.getJointPose(r,a);if(void 0===d.joints[r.jointName]){const e=new tp;e.matrixAutoUpdate=!1,e.visible=!1,d.joints[r.jointName]=e,d.add(e)}const i=d.joints[r.jointName];null!==e&&(i.matrix.fromArray(e.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),i.jointRadius=e.radius),i.visible=null!==e}const r=d.joints["index-finger-tip"],i=d.joints["thumb-tip"],o=r.position.distanceTo(i.position),s=.02,l=.005;d.inputState.pinching&&o>s+l?(d.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!d.inputState.pinching&&o<=s-l&&(d.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==s&&e.gripSpace&&(i=t.getPose(e.gripSpace,a),null!==i&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),i.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(i.linearVelocity)):s.hasLinearVelocity=!1,i.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(i.angularVelocity)):s.hasAngularVelocity=!1));return null!==o&&(o.visible=null!==r),null!==s&&(s.visible=null!==i),null!==d&&(d.visible=null!==n),this}}class ip extends Wo{constructor(e,t,a,r,i,n,o,s,d,l){if(l=void 0===l?qi:l,l!==qi&&l!==Xi)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===a&&l===qi&&(a=Ii),void 0===a&&l===Xi&&(a=Fi),super(null,r,i,n,o,s,l,a,d),this.image={width:e,height:t},this.magFilter=void 0===o?_i:o,this.minFilter=void 0===s?_i:s,this.flipY=!1,this.generateMipmaps=!1}}ip.prototype.isDepthTexture=!0;class np extends To{constructor(e,t){function a(e){const t=M.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function r(){M.forEach(function(e,t){e.disconnect(t)}),M.clear(),R=null,C=null,e.setRenderTarget(_),y=null,h=null,g=null,l=null,b=null,z.stop(),d.isPresenting=!1,d.dispatchEvent({type:"sessionend"})}function i(e){const t=l.inputSources;for(let a=0;a<t.length;a++){const e="right"===t[a].handedness?1:0;M.set(t[a],S[e])}for(let t=0;t<e.removed.length;t++){const a=e.removed[t],r=M.get(a);r&&(r.dispatchEvent({type:"disconnected",data:a}),M.delete(a))}for(let t=0;t<e.added.length;t++){const a=e.added[t],r=M.get(a);r&&r.dispatchEvent({type:"connected",data:a})}}function n(e,t,a){P.setFromMatrixPosition(t.matrixWorld),D.setFromMatrixPosition(a.matrixWorld);const r=P.distanceTo(D),i=t.projectionMatrix.elements,n=a.projectionMatrix.elements,o=i[14]/(i[10]-1),s=i[14]/(i[10]+1),d=(i[9]+1)/i[5],l=(i[9]-1)/i[5],p=(i[8]-1)/i[0],c=(n[8]+1)/n[0],u=r/(-p+c),m=u*-p;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(m),e.translateZ(u),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();const f=o+u,g=s+u;e.projectionMatrix.makePerspective(o*p-m,o*c+(r-m),d*s/g*f,l*s/g*f,f,g)}function o(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}function s(t,a){if(f=a.getViewerPose(m||c),x=a,null!==f){const t=f.views;null!=y&&(e.setRenderTargetFramebuffer(b,y.framebuffer),e.setRenderTarget(b));let a=!1;t.length!==A.cameras.length&&(A.cameras.length=0,a=!0);for(let r=0;r<t.length;r++){const i=t[r];let n=null;if(null!=y)n=y.getViewport(i);else{const t=g.getViewSubImage(h,i);n=t.viewport,0===r&&(e.setRenderTargetTextures(b,t.colorTexture,h.ignoreDepthValues?void 0:t.depthStencilTexture),e.setRenderTarget(b))}const o=w[r];o.matrix.fromArray(i.transform.matrix),o.projectionMatrix.fromArray(i.projectionMatrix),o.viewport.set(n.x,n.y,n.width,n.height),0===r&&A.matrix.copy(o.matrix),!0==a&&A.cameras.push(o)}}const r=l.inputSources;for(let e=0;e<S.length;e++){const t=r[e],i=M.get(t);void 0!==i&&i.update(t,a,m||c)}I&&I(t,a),x=null}super();const d=this;let l=null,p=1,c=null,u="local-floor",m=null,f=null,g=null,h=null,y=null,x=null;const v=t.getContextAttributes();let _=null,b=null;const S=[],M=new Map,T=new il;T.layers.enable(1),T.viewport=new jo;const E=new il;E.layers.enable(2),E.viewport=new jo;const w=[T,E],A=new ep;A.layers.enable(1),A.layers.enable(2);let R=null,C=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=S[e];return void 0===t&&(t=new rp,S[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=S[e];return void 0===t&&(t=new rp,S[e]=t),t.getGripSpace()},this.getHand=function(e){let t=S[e];return void 0===t&&(t=new rp,S[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){p=e,!0===d.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){u=e,!0===d.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return m||c},this.setReferenceSpace=function(e){m=e},this.getBaseLayer=function(){return null===h?y:h},this.getBinding=function(){return g},this.getFrame=function(){return x},this.getSession=function(){return l},this.setSession=async function(n){if(l=n,null!==l){if(_=e.getRenderTarget(),l.addEventListener("select",a),l.addEventListener("selectstart",a),l.addEventListener("selectend",a),l.addEventListener("squeeze",a),l.addEventListener("squeezestart",a),l.addEventListener("squeezeend",a),l.addEventListener("end",r),l.addEventListener("inputsourceschange",i),!0!==v.xrCompatible&&(await t.makeXRCompatible()),void 0===l.renderState.layers||!1===e.capabilities.isWebGL2){const a={antialias:void 0!==l.renderState.layers||v.antialias,alpha:v.alpha,depth:v.depth,stencil:v.stencil,framebufferScaleFactor:p};y=new XRWebGLLayer(l,t,a),l.updateRenderState({baseLayer:y}),b=new qo(y.framebufferWidth,y.framebufferHeight,{format:ki,type:Ci,encoding:e.outputEncoding})}else{let a=null,r=null,i=null;v.depth&&(i=v.stencil?35056:33190,a=v.stencil?Xi:qi,r=v.stencil?Fi:Ii);const n={colorFormat:e.outputEncoding===Gn?35907:32856,depthFormat:i,scaleFactor:p};g=new XRWebGLBinding(l,t),h=g.createProjectionLayer(n),l.updateRenderState({layers:[h]}),b=new qo(h.textureWidth,h.textureHeight,{format:ki,type:Ci,depthTexture:new ip(h.textureWidth,h.textureHeight,r,void 0,void 0,void 0,void 0,void 0,void 0,a),stencilBuffer:v.stencil,encoding:e.outputEncoding,samples:v.antialias?4:0});const o=e.properties.get(b);o.__ignoreDepthValues=h.ignoreDepthValues}b.isXRRenderTarget=!0,this.setFoveation(1),c=await l.requestReferenceSpace(u),z.setContext(l),z.start(),d.isPresenting=!0,d.dispatchEvent({type:"sessionstart"})}};const P=new $o,D=new $o;this.updateCamera=function(e){if(null!==l){A.near=E.near=T.near=e.near,A.far=E.far=T.far=e.far,(R!==A.near||C!==A.far)&&(l.updateRenderState({depthNear:A.near,depthFar:A.far}),R=A.near,C=A.far);const t=e.parent,a=A.cameras;o(A,t);for(let e=0;e<a.length;e++)o(a[e],t);A.matrixWorld.decompose(A.position,A.quaternion,A.scale),e.position.copy(A.position),e.quaternion.copy(A.quaternion),e.scale.copy(A.scale),e.matrix.copy(A.matrix),e.matrixWorld.copy(A.matrixWorld);const r=e.children;for(let e=0,t=r.length;e<t;e++)r[e].updateMatrixWorld(!0);2===a.length?n(A,T,E):A.projectionMatrix.copy(T.projectionMatrix)}},this.getCamera=function(){return A},this.getFoveation=function(){return null===h?null===y?void 0:y.fixedFoveation:h.fixedFoveation},this.setFoveation=function(e){null!==h&&(h.fixedFoveation=e),null!==y&&void 0!==y.fixedFoveation&&(y.fixedFoveation=e)};let I=null;const z=new L;z.setAnimationLoop(s),this.setAnimationLoop=function(e){I=e},this.dispose=function(){}}}Ht.prototype.isWebGLRenderer=!0;class op extends Ht{}op.prototype.isWebGL1Renderer=!0;class sp{constructor(e,t=25e-5){this.name="",this.color=new Oo(e),this.density=t}clone(){return new sp(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}sp.prototype.isFogExp2=!0;class dp{constructor(e,t=1,a=1e3){this.name="",this.color=new Oo(e),this.near=t,this.far=a}clone(){return new dp(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}dp.prototype.isFog=!0;class lp extends ed{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}lp.prototype.isScene=!0;class pp{constructor(e,t){this.array=e,this.stride=t,this.count=void 0===e?0:e.length/t,this.usage=uo,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=l()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,a){e*=this.stride,a*=t.stride;for(let r=0,i=this.stride;r<i;r++)this.array[e+r]=t.array[a+r];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=l()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),a=new this.constructor(t,this.stride);return a.setUsage(this.usage),a}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=l()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}pp.prototype.isInterleavedBuffer=!0;const cp=new $o;class up{constructor(e,t,a,r=!1){this.name="",this.data=e,this.itemSize=t,this.offset=a,this.normalized=!0===r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,a=this.data.count;t<a;t++)cp.fromBufferAttribute(this,t),cp.applyMatrix4(e),this.setXYZ(t,cp.x,cp.y,cp.z);return this}applyNormalMatrix(e){for(let t=0,a=this.count;t<a;t++)cp.fromBufferAttribute(this,t),cp.applyNormalMatrix(e),this.setXYZ(t,cp.x,cp.y,cp.z);return this}transformDirection(e){for(let t=0,a=this.count;t<a;t++)cp.fromBufferAttribute(this,t),cp.transformDirection(e),this.setXYZ(t,cp.x,cp.y,cp.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,a){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=a,this}setXYZ(e,t,a,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=a,this.data.array[e+2]=r,this}setXYZW(e,t,a,r,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=a,this.data.array[e+2]=r,this.data.array[e+3]=i,this}clone(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const a=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[a+t])}return new yd(new this.array.constructor(e),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new up(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const a=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[a+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}up.prototype.isInterleavedBufferAttribute=!0;class mp extends md{constructor(e){super(),this.type="SpriteMaterial",this.color=new Oo(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}mp.prototype.isSpriteMaterial=!0;let fp;const gp=new $o,hp=new $o,yp=new $o,xp=new Co,vp=new Co,_p=new Ls,bp=new $o,Sp=new $o,Mp=new $o,Tp=new Co,Ep=new Co,wp=new Co;class Ap extends ed{constructor(e){if(super(),this.type="Sprite",void 0==fp){fp=new Bd;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new pp(e,5);fp.setIndex([0,1,2,0,2,3]),fp.setAttribute("position",new up(t,3,0,!1)),fp.setAttribute("uv",new up(t,2,3,!1))}this.geometry=fp,this.material=void 0===e?new mp:e,this.center=new Co(.5,.5)}raycast(e,t){null===e.camera&&console.error("THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites."),hp.setFromMatrixScale(this.matrixWorld),_p.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),yp.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&hp.multiplyScalar(-yp.z);const a=this.material.rotation;let r,i;0!==a&&(i=rr(a),r=ar(a));const n=this.center;Ot(bp.set(-.5,-.5,0),yp,n,hp,r,i),Ot(Sp.set(.5,-.5,0),yp,n,hp,r,i),Ot(Mp.set(.5,.5,0),yp,n,hp,r,i),Tp.set(0,0),Ep.set(1,0),wp.set(1,1);let o=e.ray.intersectTriangle(bp,Sp,Mp,!1,gp);if(!(null===o&&(Ot(Sp.set(-.5,.5,0),yp,n,hp,r,i),Ep.set(0,1),o=e.ray.intersectTriangle(bp,Mp,Sp,!1,gp),null===o))){const a=e.ray.origin.distanceTo(gp);a<e.near||a>e.far||t.push({distance:a,point:gp.clone(),uv:cd.getUV(gp,bp,Sp,Mp,Tp,Ep,wp,new Co),face:null,object:this})}}copy(e){return super.copy(e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}Ap.prototype.isSprite=!0;const Rp=new $o,Lp=new $o;class Cp extends ed{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let a=0,r=t.length;a<r;a++){const e=t[a];this.addLevel(e.object.clone(),e.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=dr(t);const a=this.levels;let r;for(r=0;r<a.length&&!(t<a[r].distance);r++);return a.splice(r,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(0<t.length){let a,r;for(a=1,r=t.length;a<r&&!(e<t[a].distance);a++);return t[a-1].object}return null}raycast(e,t){const a=this.levels;if(0<a.length){Rp.setFromMatrixPosition(this.matrixWorld);const a=e.ray.origin.distanceTo(Rp);this.getObjectForDistance(a).raycast(e,t)}}update(e){const t=this.levels;if(1<t.length){Rp.setFromMatrixPosition(e.matrixWorld),Lp.setFromMatrixPosition(this.matrixWorld);const a=Rp.distanceTo(Lp)/e.zoom;t[0].object.visible=!0;let r,i;for(r=1,i=t.length;r<i&&a>=t[r].distance;r++)t[r-1].object.visible=!1,t[r].object.visible=!0;for(this._currentLevel=r-1;r<i;r++)t[r].object.visible=!1}}toJSON(e){const t=super.toJSON(e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];const a=this.levels;for(let r=0,i=a.length;r<i;r++){const e=a[r];t.object.levels.push({object:e.object.uuid,distance:e.distance})}return t}}const Pp=new $o,Dp=new jo,Ip=new jo,zp=new $o,Bp=new Ls;class Np extends $d{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Ls,this.bindMatrixInverse=new Ls}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new jo,t=this.geometry.attributes.skinWeight;for(let a=0,r=t.count;a<r;a++){e.fromBufferAttribute(t,a);const r=1/e.manhattanLength();r==Infinity?e.set(1,0,0,0):e.multiplyScalar(r),t.setXYZW(a,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const a=this.skeleton,r=this.geometry;Dp.fromBufferAttribute(r.attributes.skinIndex,e),Ip.fromBufferAttribute(r.attributes.skinWeight,e),Pp.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;4>r;r++){const e=Ip.getComponent(r);if(0!==e){const i=Dp.getComponent(r);Bp.multiplyMatrices(a.bones[i].matrixWorld,a.boneInverses[i]),t.addScaledVector(zp.copy(Pp).applyMatrix4(Bp),e)}}return t.applyMatrix4(this.bindMatrixInverse)}}Np.prototype.isSkinnedMesh=!0;class Up extends ed{constructor(){super(),this.type="Bone"}}Up.prototype.isBone=!0;class Hp extends Wo{constructor(e=null,t=1,a=1,r,i,n,o,s,d=_i,l=_i,p,c){super(null,n,o,s,d,l,r,i,p,c),this.image={data:e,width:t,height:a},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Hp.prototype.isDataTexture=!0;const Op=new Ls,Fp=new Ls;class Gp{constructor(e=[],t=[]){this.uuid=l(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new Ls)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const t=new Ls;this.bones[e]&&t.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(t)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&t.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&(t.parent&&t.parent.isBone?(t.matrix.copy(t.parent.matrixWorld).invert(),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}}update(){const e=this.bones,t=this.boneInverses,a=this.boneMatrices,r=this.boneTexture;for(let r=0,i=e.length;r<i;r++){const i=e[r]?e[r].matrixWorld:Fp;Op.multiplyMatrices(i,t[r]),Op.toArray(a,16*r)}null!==r&&(r.needsUpdate=!0)}clone(){return new Gp(this.bones,this.boneInverses)}computeBoneTexture(){let e=r(4*this.bones.length);e=f(e),e=n(e,4);const t=new Float32Array(4*(e*e));t.set(this.boneMatrices);const a=new Hp(t,e,e,ki,Ni);return a.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=a,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,a=this.bones.length;t<a;t++){const a=this.bones[t];if(a.name===e)return a}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let a=0,r=e.bones.length;a<r;a++){const r=e.bones[a];let i=t[r];void 0===i&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),i=new Up),this.bones.push(i),this.boneInverses.push(new Ls().fromArray(e.boneInverses[a]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[],uuid:this.uuid},t=this.bones,a=this.boneInverses;for(let r=0,i=t.length;r<i;r++){const i=t[r];e.bones.push(i.uuid);const n=a[r];e.boneInverses.push(n.toArray())}return e}}class Vp extends yd{constructor(e,t,a,r=1){"number"==typeof a&&(r=a,a=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,a),this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}Vp.prototype.isInstancedBufferAttribute=!0;const kp=new Ls,Wp=new Ls,jp=[],qp=new $d;class Xp extends $d{constructor(e,t,a){super(e,t),this.instanceMatrix=new Vp(new Float32Array(16*a),16),this.instanceColor=null,this.count=a,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,t){const a=this.matrixWorld,r=this.count;if(qp.geometry=this.geometry,qp.material=this.material,void 0!==qp.material)for(let n=0;n<r;n++){this.getMatrixAt(n,kp),Wp.multiplyMatrices(a,kp),qp.matrixWorld=Wp,qp.raycast(e,jp);for(let e=0,a=jp.length;e<a;e++){const a=jp[e];a.instanceId=n,a.object=this,t.push(a)}jp.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new Vp(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}Xp.prototype.isInstancedMesh=!0;class Yp extends md{constructor(e){super(),this.type="LineBasicMaterial",this.color=new Oo(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}Yp.prototype.isLineBasicMaterial=!0;const Zp=new $o,Kp=new $o,Jp=new Ls,Qp=new Rs,$p=new _s;class ec extends ed{constructor(e=new Bd,t=new Yp){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(!e.isBufferGeometry)e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");else if(null===e.index){const t=e.attributes.position,a=[0];for(let e=1,r=t.count;e<r;e++)Zp.fromBufferAttribute(t,e-1),Kp.fromBufferAttribute(t,e),a[e]=a[e-1],a[e]+=Zp.distanceTo(Kp);e.setAttribute("lineDistance",new wd(a,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const a=this.geometry,r=this.matrixWorld,i=e.params.Line.threshold,s=a.drawRange;if(null===a.boundingSphere&&a.computeBoundingSphere(),$p.copy(a.boundingSphere),$p.applyMatrix4(r),$p.radius+=i,!1!==e.ray.intersectsSphere($p)){Jp.copy(r).invert(),Qp.copy(e.ray).applyMatrix4(Jp);const d=i/((this.scale.x+this.scale.y+this.scale.z)/3),l=d*d,p=new $o,c=new $o,u=new $o,m=new $o,f=this.isLineSegments?2:1;if(a.isBufferGeometry){const r=a.index,i=a.attributes,d=i.position;if(null!==r){const a=n(0,s.start),g=o(r.count,s.start+s.count);for(let n=a;n<g-1;n+=f){const o=r.getX(n),a=r.getX(n+1);p.fromBufferAttribute(d,o),c.fromBufferAttribute(d,a);const s=Qp.distanceSqToSegment(p,c,m,u);if(s>l)continue;m.applyMatrix4(this.matrixWorld);const f=e.ray.origin.distanceTo(m);f<e.near||f>e.far||t.push({distance:f,point:u.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else{const a=n(0,s.start),r=o(d.count,s.start+s.count);for(let n=a;n<r-1;n+=f){p.fromBufferAttribute(d,n),c.fromBufferAttribute(d,n+1);const a=Qp.distanceSqToSegment(p,c,m,u);if(a>l)continue;m.applyMatrix4(this.matrixWorld);const r=e.ray.origin.distanceTo(m);r<e.near||r>e.far||t.push({distance:r,point:u.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}}else a.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,a=Object.keys(t);if(0<a.length){const e=t[a[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,a=e.length;t<a;t++){const a=e[t].name||t+"";this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=t}}}}else{const t=e.morphTargets;void 0!==t&&0<t.length&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}ec.prototype.isLine=!0;const tc=new $o,ac=new $o;class rc extends ec{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(!e.isBufferGeometry)e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");else if(null===e.index){const t=e.attributes.position,a=[];for(let e=0,r=t.count;e<r;e+=2)tc.fromBufferAttribute(t,e),ac.fromBufferAttribute(t,e+1),a[e]=0==e?0:a[e-1],a[e+1]=a[e]+tc.distanceTo(ac);e.setAttribute("lineDistance",new wd(a,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}rc.prototype.isLineSegments=!0;class ic extends ec{constructor(e,t){super(e,t),this.type="LineLoop"}}ic.prototype.isLineLoop=!0;class nc extends md{constructor(e){super(),this.type="PointsMaterial",this.color=new Oo(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}nc.prototype.isPointsMaterial=!0;const oc=new Ls,sc=new Rs,dc=new _s,lc=new $o;class pc extends ed{constructor(e=new Bd,t=new nc){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const a=this.geometry,r=this.matrixWorld,i=e.params.Points.threshold,s=a.drawRange;if(null===a.boundingSphere&&a.computeBoundingSphere(),dc.copy(a.boundingSphere),dc.applyMatrix4(r),dc.radius+=i,!1!==e.ray.intersectsSphere(dc)){oc.copy(r).invert(),sc.copy(e.ray).applyMatrix4(oc);const d=i/((this.scale.x+this.scale.y+this.scale.z)/3),l=d*d;if(a.isBufferGeometry){const d=a.index,i=a.attributes,p=i.position;if(null!==d){const a=n(0,s.start),c=o(d.count,s.start+s.count);for(let n=a;n<c;n++){const i=d.getX(n);lc.fromBufferAttribute(p,i),Ft(lc,i,l,r,e,t,this)}}else{const a=n(0,s.start),d=o(p.count,s.start+s.count);for(let n=a;n<d;n++)lc.fromBufferAttribute(p,n),Ft(lc,n,l,r,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,a=Object.keys(t);if(0<a.length){const e=t[a[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,a=e.length;t<a;t++){const a=e[t].name||t+"";this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=t}}}}else{const t=e.morphTargets;void 0!==t&&0<t.length&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}pc.prototype.isPoints=!0;class cc extends Wo{constructor(e,t,a,r,i,n,o,s,d){function l(){p.needsUpdate=!0,e.requestVideoFrameCallback(l)}super(e,t,a,r,i,n,o,s,d),this.minFilter=void 0===n?Ei:n,this.magFilter=void 0===i?Ei:i,this.generateMipmaps=!1;const p=this;"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(l)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image,t="requestVideoFrameCallback"in e;!1==t&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}cc.prototype.isVideoTexture=!0;class uc extends Wo{constructor(e,t,a){super({width:e,height:t}),this.format=a,this.magFilter=_i,this.minFilter=_i,this.generateMipmaps=!1,this.needsUpdate=!0}}uc.prototype.isFramebufferTexture=!0;class mc extends Wo{constructor(e,t,a,r,i,n,o,s,d,l,p,c){super(null,n,o,s,d,l,r,i,p,c),this.image={width:t,height:a},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}mc.prototype.isCompressedTexture=!0;class fc extends Wo{constructor(e,t,a,r,i,n,o,s,d){super(e,t,a,r,i,n,o,s,d),this.needsUpdate=!0}}fc.prototype.isCanvasTexture=!0;class gc{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,a){const r=this.getUtoTmapping(e);return this.getPoint(r,a)}getPoints(e=5){const t=[];for(let a=0;a<=e;a++)t.push(this.getPoint(a/e));return t}getSpacedPoints(e=5){const t=[];for(let a=0;a<=e;a++)t.push(this.getPointAt(a/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let a=this.getPoint(0),r=0,i;t.push(0);for(let n=1;n<=e;n++)i=this.getPoint(n/e),r+=i.distanceTo(a),t.push(r),a=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,a){const r=this.getLengths();let n=0;const i=r.length;let o=a?a:e*r[i-1],s=0,d=i-1,l;for(;s<=d;)if(n=sr(s+(d-s)/2),l=r[n]-o,0>l)s=n+1;else if(0<l)d=n-1;else{d=n;break}if(n=d,r[n]===o)return n/(i-1);const p=r[n],c=r[n+1],u=(o-p)/(c-p),m=(n+u)/(i-1);return m}getTangent(e,t){const a=1e-4;let r=e-a,i=e+a;0>r&&(r=0),1<i&&(i=1);const n=this.getPoint(r),o=this.getPoint(i),s=t||(n.isVector2?new Co:new $o);return s.copy(o).sub(n).normalize(),s}getTangentAt(e,a){const r=this.getUtoTmapping(e);return this.getTangent(r,a)}computeFrenetFrames(e,t){const a=new $o,r=[],n=[],o=[],s=new $o,d=new Ls;for(let a=0;a<=e;a++){const t=a/e;r[a]=this.getTangentAt(t,new $o)}n[0]=new $o,o[0]=new $o;let i=Number.MAX_VALUE;const l=dr(r[0].x),c=dr(r[0].y),u=dr(r[0].z);l<=i&&(i=l,a.set(1,0,0)),c<=i&&(i=c,a.set(0,1,0)),u<=i&&a.set(0,0,1),s.crossVectors(r[0],a).normalize(),n[0].crossVectors(r[0],s),o[0].crossVectors(r[0],n[0]);for(let a=1;a<=e;a++){if(n[a]=n[a-1].clone(),o[a]=o[a-1].clone(),s.crossVectors(r[a-1],r[a]),s.length()>Qa){s.normalize();const e=$a(p(r[a-1].dot(r[a]),-1,1));n[a].applyMatrix4(d.makeRotationAxis(s,e))}o[a].crossVectors(r[a],n[a])}if(!0===t){let t=$a(p(n[0].dot(n[e]),-1,1));t/=e,0<r[0].dot(s.crossVectors(n[0],n[e]))&&(t=-t);for(let a=1;a<=e;a++)n[a].applyMatrix4(d.makeRotationAxis(r[a],t*a)),o[a].crossVectors(r[a],n[a])}return{tangents:r,normals:n,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"},arcLengthDivisions:this.arcLengthDivisions,type:this.type};return e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class hc extends gc{constructor(e=0,t=0,a=1,r=1,i=0,n=2*s,o=!1,d=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=a,this.yRadius=r,this.aStartAngle=i,this.aEndAngle=n,this.aClockwise=o,this.aRotation=d}getPoint(e,t){const a=t||new Co,r=2*s;let i=this.aEndAngle-this.aStartAngle;const n=dr(i)<Qa;for(;0>i;)i+=r;for(;i>r;)i-=r;i<Qa&&(n?i=0:i=r),!0!==this.aClockwise||n||(i==r?i=-r:i-=r);const o=this.aStartAngle+e*i;let d=this.aX+this.xRadius*rr(o),l=this.aY+this.yRadius*ar(o);if(0!==this.aRotation){const e=rr(this.aRotation),t=ar(this.aRotation),a=d-this.aX,r=l-this.aY;d=a*e-r*t+this.aX,l=a*t+r*e+this.aY}return a.set(d,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}hc.prototype.isEllipseCurve=!0;class yc extends hc{constructor(e,t,a,r,i,n){super(e,t,a,a,r,i,n),this.type="ArcCurve"}}yc.prototype.isArcCurve=!0;const xc=new $o,vc=new Gt,_c=new Gt,bc=new Gt;class Sc extends gc{constructor(e=[],t=!1,a="centripetal",r=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=a,this.tension=r}getPoint(e,t=new $o){const r=t,i=this.points,n=i.length,o=(n-(this.closed?0:1))*e;let s=sr(o),d=o-s;this.closed?s+=0<s?0:(sr(dr(s)/n)+1)*n:0==d&&s===n-1&&(s=n-2,d=1);let l,p;this.closed||0<s?l=i[(s-1)%n]:(xc.subVectors(i[0],i[1]).add(i[0]),l=xc);const c=i[s%n],u=i[(s+1)%n];if(this.closed||s+2<n?p=i[(s+2)%n]:(xc.subVectors(i[n-1],i[n-2]).add(i[n-1]),p=xc),"centripetal"===this.curveType||"chordal"===this.curveType){const e="chordal"===this.curveType?.5:.25;let t=a(l.distanceToSquared(c),e),r=a(c.distanceToSquared(u),e),i=a(u.distanceToSquared(p),e);1e-4>r&&(r=1),1e-4>t&&(t=r),1e-4>i&&(i=r),vc.initNonuniformCatmullRom(l.x,c.x,u.x,p.x,t,r,i),_c.initNonuniformCatmullRom(l.y,c.y,u.y,p.y,t,r,i),bc.initNonuniformCatmullRom(l.z,c.z,u.z,p.z,t,r,i)}else"catmullrom"===this.curveType&&(vc.initCatmullRom(l.x,c.x,u.x,p.x,this.tension),_c.initCatmullRom(l.y,c.y,u.y,p.y,this.tension),bc.initCatmullRom(l.z,c.z,u.z,p.z,this.tension));return r.set(vc.calc(d),_c.calc(d),bc.calc(d)),r}copy(e){super.copy(e),this.points=[];for(let t=0,a=e.points.length;t<a;t++){const a=e.points[t];this.points.push(a.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,a=this.points.length;t<a;t++){const a=this.points[t];e.points.push(a.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,a=e.points.length;t<a;t++){const a=e.points[t];this.points.push(new $o().fromArray(a))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}Sc.prototype.isCatmullRomCurve3=!0;class Mc extends gc{constructor(e=new Co,t=new Co,a=new Co,r=new Co){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=a,this.v3=r}getPoint(e,t=new Co){const a=t,r=this.v0,i=this.v1,n=this.v2,o=this.v3;return a.set(Jt(e,r.x,i.x,n.x,o.x),Jt(e,r.y,i.y,n.y,o.y)),a}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}Mc.prototype.isCubicBezierCurve=!0;class Tc extends gc{constructor(e=new $o,t=new $o,a=new $o,r=new $o){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=a,this.v3=r}getPoint(e,t=new $o){const a=t,r=this.v0,i=this.v1,n=this.v2,o=this.v3;return a.set(Jt(e,r.x,i.x,n.x,o.x),Jt(e,r.y,i.y,n.y,o.y),Jt(e,r.z,i.z,n.z,o.z)),a}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}Tc.prototype.isCubicBezierCurve3=!0;class Ec extends gc{constructor(e=new Co,t=new Co){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new Co){const a=t;return 1===e?a.copy(this.v2):(a.copy(this.v2).sub(this.v1),a.multiplyScalar(e).add(this.v1)),a}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const a=t||new Co;return a.copy(this.v2).sub(this.v1).normalize(),a}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Ec.prototype.isLineCurve=!0;class wc extends gc{constructor(e=new $o,t=new $o){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new $o){const a=t;return 1===e?a.copy(this.v2):(a.copy(this.v2).sub(this.v1),a.multiplyScalar(e).add(this.v1)),a}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Ac extends gc{constructor(e=new Co,t=new Co,a=new Co){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=a}getPoint(e,t=new Co){const a=t,r=this.v0,i=this.v1,n=this.v2;return a.set(qt(e,r.x,i.x,n.x),qt(e,r.y,i.y,n.y)),a}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Ac.prototype.isQuadraticBezierCurve=!0;class Rc extends gc{constructor(e=new $o,t=new $o,a=new $o){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=a}getPoint(e,t=new $o){const a=t,r=this.v0,i=this.v1,n=this.v2;return a.set(qt(e,r.x,i.x,n.x),qt(e,r.y,i.y,n.y),qt(e,r.z,i.z,n.z)),a}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Rc.prototype.isQuadraticBezierCurve3=!0;class Lc extends gc{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new Co){const a=t,r=this.points,i=(r.length-1)*e,n=sr(i),o=i-n,s=r[0===n?n:n-1],d=r[n],l=r[n>r.length-2?r.length-1:n+1],p=r[n>r.length-3?r.length-1:n+2];return a.set(Vt(o,s.x,d.x,l.x,p.x),Vt(o,s.y,d.y,l.y,p.y)),a}copy(e){super.copy(e),this.points=[];for(let t=0,a=e.points.length;t<a;t++){const a=e.points[t];this.points.push(a.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,a=this.points.length;t<a;t++){const a=this.points[t];e.points.push(a.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,a=e.points.length;t<a;t++){const a=e.points[t];this.points.push(new Co().fromArray(a))}return this}}Lc.prototype.isSplineCurve=!0;var Cc=Object.freeze({__proto__:null,ArcCurve:yc,CatmullRomCurve3:Sc,CubicBezierCurve:Mc,CubicBezierCurve3:Tc,EllipseCurve:hc,LineCurve:Ec,LineCurve3:wc,QuadraticBezierCurve:Ac,QuadraticBezierCurve3:Rc,SplineCurve:Lc});class Pc extends gc{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Ec(t,e))}getPoint(e,t){const a=e*this.getLength(),r=this.getCurveLengths();for(let n=0;n<r.length;){if(r[n]>=a){const e=r[n]-a,i=this.curves[n],o=i.getLength(),s=0===o?0:1-e/o;return i.getPointAt(s,t)}n++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let a=0,r=this.curves.length;a<r;a++)t+=this.curves[a].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let a=0;a<=e;a++)t.push(this.getPoint(a/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let a;for(let r=0,i=this.curves;r<i.length;r++){const n=i[r],o=n.isEllipseCurve?2*e:n.isLineCurve||n.isLineCurve3?1:n.isSplineCurve?e*n.points.length:e,s=n.getPoints(o);for(let e=0;e<s.length;e++){const r=s[e];a&&a.equals(r)||(t.push(r),a=r)}}return this.autoClose&&1<t.length&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,a=e.curves.length;t<a;t++){const a=e.curves[t];this.curves.push(a.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,a=this.curves.length;t<a;t++){const a=this.curves[t];e.curves.push(a.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,a=e.curves.length;t<a;t++){const a=e.curves[t];this.curves.push(new Cc[a.type]().fromJSON(a))}return this}}class Dc extends Pc{constructor(e){super(),this.type="Path",this.currentPoint=new Co,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,a=e.length;t<a;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const a=new Ec(this.currentPoint.clone(),new Co(e,t));return this.curves.push(a),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,a,r){const i=new Ac(this.currentPoint.clone(),new Co(e,t),new Co(a,r));return this.curves.push(i),this.currentPoint.set(a,r),this}bezierCurveTo(e,t,a,r,i,n){const o=new Mc(this.currentPoint.clone(),new Co(e,t),new Co(a,r),new Co(i,n));return this.curves.push(o),this.currentPoint.set(i,n),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),a=new Lc(t);return this.curves.push(a),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,a,r,i,n){const o=this.currentPoint.x,s=this.currentPoint.y;return this.absarc(e+o,t+s,a,r,i,n),this}absarc(e,t,a,r,i,n){return this.absellipse(e,t,a,a,r,i,n),this}ellipse(e,t,a,r,i,n,o,s){const d=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(e+d,t+l,a,r,i,n,o,s),this}absellipse(e,t,a,r,i,n,o,s){const d=new hc(e,t,a,r,i,n,o,s);if(0<this.curves.length){const e=d.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(d);const l=d.getPoint(1);return this.currentPoint.copy(l),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Ic extends Bd{constructor(e=[new Co(0,.5),new Co(.5,0),new Co(0,-.5)],t=12,a=0,r=2*s){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:a,phiLength:r},t=sr(t),r=p(r,0,2*s);const n=[],o=[],d=[],l=[],c=[],u=1/t,m=new $o,f=new Co,i=new $o,g=new $o,h=new $o;let y=0,x=0;for(let n=0;n<=e.length-1;n++)0===n?(y=e[n+1].x-e[n].x,x=e[n+1].y-e[n].y,i.x=1*x,i.y=-y,i.z=0*x,h.copy(i),i.normalize(),l.push(i.x,i.y,i.z)):n===e.length-1?l.push(h.x,h.y,h.z):(y=e[n+1].x-e[n].x,x=e[n+1].y-e[n].y,i.x=1*x,i.y=-y,i.z=0*x,g.copy(i),i.x+=h.x,i.y+=h.y,i.z+=h.z,i.normalize(),l.push(i.x,i.y,i.z),h.copy(g));for(let n=0;n<=t;n++){const i=a+n*u*r,s=ar(i),p=rr(i);for(let a=0;a<=e.length-1;a++){m.x=e[a].x*s,m.y=e[a].y,m.z=e[a].x*p,o.push(m.x,m.y,m.z),f.x=n/t,f.y=a/(e.length-1),d.push(f.x,f.y);const r=l[3*a+0]*s,i=l[3*a+1],u=l[3*a+0]*p;c.push(r,i,u)}}for(let o=0;o<t;o++)for(let t=0;t<e.length-1;t++){const a=t+o*e.length,r=a+e.length,i=a+e.length+1,s=a+1;n.push(a,r,s),n.push(i,s,r)}this.setIndex(n),this.setAttribute("position",new wd(o,3)),this.setAttribute("uv",new wd(d,2)),this.setAttribute("normal",new wd(c,3))}static fromJSON(e){return new Ic(e.points,e.segments,e.phiStart,e.phiLength)}}class zc extends Ic{constructor(e=1,t=1,a=4,r=8){const i=new Dc;i.absarc(0,-t/2,e,1.5*s,0),i.absarc(0,t/2,e,0,.5*s),super(i.getPoints(a),r),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:a,radialSegments:r}}static fromJSON(e){return new zc(e.radius,e.length,e.capSegments,e.radialSegments)}}class Bc extends Bd{constructor(e=1,t=8,a=0,r=2*s){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:a,thetaLength:r},t=n(3,t);const o=[],d=[],l=[],p=[],c=new $o,u=new Co;d.push(0,0,0),l.push(0,0,1),p.push(.5,.5);for(let n=0,o=3;n<=t;n++,o+=3){const i=a+n/t*r;c.x=e*rr(i),c.y=e*ar(i),d.push(c.x,c.y,c.z),l.push(0,0,1),u.x=(d[o]/e+1)/2,u.y=(d[o+1]/e+1)/2,p.push(u.x,u.y)}for(let n=1;n<=t;n++)o.push(n,n+1,0);this.setIndex(o),this.setAttribute("position",new wd(d,3)),this.setAttribute("normal",new wd(l,3)),this.setAttribute("uv",new wd(p,2))}static fromJSON(e){return new Bc(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Nc extends Bd{constructor(e=1,t=1,a=1,r=8,i=1,n=!1,o=0,d=2*s){function l(){const n=new $o,s=new $o;let l=0;for(let l=0;l<=i;l++){const p=[],c=l/i,b=c*(t-e)+e;for(let i=0;i<=r;i++){const l=i/r,u=l*d+o,x=ar(u),_=rr(u);s.x=b*x,s.y=-c*a+y,s.z=b*_,m.push(s.x,s.y,s.z),n.set(x,(t-e)/a,_).normalize(),f.push(n.x,n.y,n.z),g.push(l,1-c),p.push(h++)}_.push(p)}for(let e=0;e<r;e++)for(let t=0;t<i;t++){const r=_[t][e],a=_[t+1][e],i=_[t+1][e+1],n=_[t][e+1];u.push(r,a,n),u.push(a,i,n),l+=6}c.addGroup(x,l,0),x+=l}function p(a){const n=h,i=new Co,s=new $o;let l=0;const p=!0===a?e:t,v=!0===a?1:-1;for(let e=1;e<=r;e++)m.push(0,y*v,0),f.push(0,v,0),g.push(.5,.5),h++;const _=h;for(let e=0;e<=r;e++){const t=e/r,a=t*d+o,n=rr(a),l=ar(a);s.x=p*l,s.y=y*v,s.z=p*n,m.push(s.x,s.y,s.z),f.push(0,v,0),i.x=.5*n+.5,i.y=.5*l*v+.5,g.push(i.x,i.y),h++}for(let e=0;e<r;e++){const t=n+e,r=_+e;!0===a?u.push(r,r+1,t):u.push(r+1,r,t),l+=3}c.addGroup(x,l,!0===a?1:2),x+=l}super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:a,radialSegments:r,heightSegments:i,openEnded:n,thetaStart:o,thetaLength:d};const c=this;r=sr(r),i=sr(i);const u=[],m=[],f=[],g=[];let h=0;const _=[],y=a/2;let x=0;l(),!1===n&&(0<e&&p(!0),0<t&&p(!1)),this.setIndex(u),this.setAttribute("position",new wd(m,3)),this.setAttribute("normal",new wd(f,3)),this.setAttribute("uv",new wd(g,2))}static fromJSON(e){return new Nc(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Uc extends Nc{constructor(e=1,t=1,a=8,r=1,i=!1,n=0,o=2*s){super(0,e,t,a,r,i,n,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:a,heightSegments:r,openEnded:i,thetaStart:n,thetaLength:o}}static fromJSON(e){return new Uc(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Hc extends Bd{constructor(e=[],t=[],a=1,i=0){function d(e,t,a,r){const n=r+1,o=[];for(let s=0;s<=n;s++){o[s]=[];const r=e.clone().lerp(a,s/n),i=t.clone().lerp(a,s/n),d=n-s;for(let e=0;e<=d;e++)o[s][e]=0===e&&s===n?r:r.clone().lerp(i,e/d)}for(let s=0;s<n;s++)for(let e=0;e<2*(n-s)-1;e++){const t=sr(e/2);0==e%2?(p(o[s][t+1]),p(o[s+1][t]),p(o[s][t])):(p(o[s][t+1]),p(o[s+1][t+1]),p(o[s+1][t]))}}function l(){for(let e=0;e<y.length;e+=6){const t=y[e+0],a=y[e+2],r=y[e+4],i=n(t,a,r),s=o(t,a,r);.9<i&&.1>s&&(.2>t&&(y[e+0]+=1),.2>a&&(y[e+2]+=1),.2>r&&(y[e+4]+=1))}}function p(e){h.push(e.x,e.y,e.z)}function u(t,a){const r=3*t;a.x=e[r+0],a.y=e[r+1],a.z=e[r+2]}function c(){const e=new $o,t=new $o,a=new $o,r=new $o,n=new Co,o=new Co,s=new Co;for(let d=0,i=0;d<h.length;d+=9,i+=6){e.set(h[d+0],h[d+1],h[d+2]),t.set(h[d+3],h[d+4],h[d+5]),a.set(h[d+6],h[d+7],h[d+8]),n.set(y[i+0],y[i+1]),o.set(y[i+2],y[i+3]),s.set(y[i+4],y[i+5]),r.copy(e).add(t).add(a).divideScalar(3);const l=f(r);m(n,i+0,e,l),m(o,i+2,t,l),m(s,i+4,a,l)}}function m(e,t,a,r){0>r&&1===e.x&&(y[t]=e.x-1),0===a.x&&0===a.z&&(y[t]=r/2/s+.5)}function f(e){return er(e.z,-e.x)}function g(e){return er(-e.y,r(e.x*e.x+e.z*e.z))}super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:a,detail:i};const h=[],y=[];(function(e){const r=new $o,a=new $o,n=new $o;for(let o=0;o<t.length;o+=3)u(t[o+0],r),u(t[o+1],a),u(t[o+2],n),d(r,a,n,e)})(i),function(e){const t=new $o;for(let a=0;a<h.length;a+=3)t.x=h[a+0],t.y=h[a+1],t.z=h[a+2],t.normalize().multiplyScalar(e),h[a+0]=t.x,h[a+1]=t.y,h[a+2]=t.z}(a),function(){const e=new $o;for(let t=0;t<h.length;t+=3){e.x=h[t+0],e.y=h[t+1],e.z=h[t+2];const a=f(e)/2/s+.5,r=g(e)/s+.5;y.push(a,1-r)}c(),l()}(),this.setAttribute("position",new wd(h,3)),this.setAttribute("normal",new wd(h.slice(),3)),this.setAttribute("uv",new wd(y,2)),0===i?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(e){return new Hc(e.vertices,e.indices,e.radius,e.details)}}class Oc extends Hc{constructor(e=1,a=0){const i=(1+2.23606797749979)/2,n=1/i;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,a),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:a}}static fromJSON(e){return new Oc(e.radius,e.detail)}}const Fc=new $o,Gc=new $o,Vc=new $o,kc=new cd;class Wc extends Bd{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},null!==e){const r=10000,a=rr(Ao*t),n=e.getIndex(),o=e.getAttribute("position"),s=n?n.count:o.count,d=[0,0,0],i=["a","b","c"],l=[,,,],p={},c=[];for(let e=0;e<s;e+=3){n?(d[0]=n.getX(e),d[1]=n.getX(e+1),d[2]=n.getX(e+2)):(d[0]=e,d[1]=e+1,d[2]=e+2);const{a:t,b:s,c:u}=kc;if(t.fromBufferAttribute(o,d[0]),s.fromBufferAttribute(o,d[1]),u.fromBufferAttribute(o,d[2]),kc.getNormal(Vc),l[0]=`${tr(t.x*r)},${tr(t.y*r)},${tr(t.z*r)}`,l[1]=`${tr(s.x*r)},${tr(s.y*r)},${tr(s.z*r)}`,l[2]=`${tr(u.x*r)},${tr(u.y*r)},${tr(u.z*r)}`,l[0]!==l[1]&&l[1]!==l[2]&&l[2]!==l[0])for(let e=0;3>e;e++){const t=(e+1)%3,r=l[e],n=l[t],o=kc[i[e]],s=kc[i[t]],u=`${r}_${n}`,m=`${n}_${r}`;m in p&&p[m]?(Vc.dot(p[m].normal)<=a&&(c.push(o.x,o.y,o.z),c.push(s.x,s.y,s.z)),p[m]=null):!(u in p)&&(p[u]={index0:d[e],index1:d[t],normal:Vc.clone()})}}for(const e in p)if(p[e]){const{index0:t,index1:a}=p[e];Fc.fromBufferAttribute(o,t),Gc.fromBufferAttribute(o,a),c.push(Fc.x,Fc.y,Fc.z),c.push(Gc.x,Gc.y,Gc.z)}this.setAttribute("position",new wd(c,3))}}}class jc extends Dc{constructor(e){super(e),this.uuid=l(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let a=0,r=this.holes.length;a<r;a++)t[a]=this.holes[a].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,a=e.holes.length;t<a;t++){const a=e.holes[t];this.holes.push(a.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,a=this.holes.length;t<a;t++){const a=this.holes[t];e.holes.push(a.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,a=e.holes.length;t<a;t++){const a=e.holes[t];this.holes.push(new Dc().fromJSON(a))}return this}}const qc={triangulate:function(e,t,a=2){const r=t&&t.length,o=r?t[0]*a:e.length;let i=Qt(e,0,o,a,!0);const s=[];if(!i||i.next===i.prev)return s;let d,l,p,c,u,m,f;if(r&&(i=na(e,t,i,a)),e.length>80*a){d=p=e[0],l=c=e[1];for(let t=a;t<o;t+=a)u=e[t],m=e[t+1],u<d&&(d=u),m<l&&(l=m),u>p&&(p=u),m>c&&(c=m);f=n(p-d,c-l),f=0===f?0:1/f}return ea(i,s,a,d,l,f),s}};class Xc{static area(e){const t=e.length;let r=0;for(let a=t-1,i=0;i<t;a=i++)r+=e[a].x*e[i].y-e[i].x*e[a].y;return .5*r}static isClockWise(e){return 0>Xc.area(e)}static triangulateShape(e,t){const a=[],r=[],n=[];La(e),Ca(a,e);let o=e.length;t.forEach(La);for(let n=0;n<t.length;n++)r.push(o),o+=t[n].length,Ca(a,t[n]);const s=qc.triangulate(a,r);for(let a=0;a<s.length;a+=3)n.push(s.slice(a,a+3));return n}}class Yc extends Bd{constructor(e=new jc([new Co(.5,.5),new Co(-.5,.5),new Co(-.5,-.5),new Co(.5,-.5)]),t={}){function a(e){function a(e,t,a){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(a).add(e)}function d(e,t,a){let i,n,o;const s=e.x-t.x,d=e.y-t.y,l=a.x-e.x,p=a.y-e.y,c=s*s+d*d;if(dr(s*p-d*l)>Qa){const u=r(c),m=r(l*l+p*p),f=t.x-d/u,g=t.y+s/u,h=a.x-p/m,y=a.y+l/m,x=((h-f)*p-(y-g)*l)/(s*p-d*l);i=f+s*x-e.x,n=g+d*x-e.y;const v=i*i+n*n;if(2>=v)return new Co(i,n);o=r(v/2)}else{let e=!1;s>Qa?l>Qa&&(e=!0):s<-Qa?l<-Qa&&(e=!0):Za(d)===Za(p)&&(e=!0),e?(i=-d,n=s,o=r(c)):(i=s,n=d,o=r(c/2))}return new Co(i/o,n/o)}function l(){const e=n.length/3;if(_){let e=0,t=O*e;for(let e=0;e<F;e++){const a=U[e];u(a[2]+t,a[1]+t,a[0]+t)}e=x+2*E,t=O*e;for(let e=0;e<F;e++){const a=U[e];u(a[0]+t,a[1]+t,a[2]+t)}}else{for(let e=0;e<F;e++){const t=U[e];u(t[2],t[1],t[0])}for(let e=0;e<F;e++){const t=U[e];u(t[0]+O*x,t[1]+O*x,t[2]+O*x)}}i.addGroup(e,n.length/3-e,0)}function p(e,t){for(let a=e.length;0<=--a;){const r=a;let i=a-1;0>i&&(i=e.length-1);for(let e=0,a=x+2*E;e<a;e++){const a=O*e,n=O*(e+1),o=t+i+a,s=t+i+n;m(t+r+a,o,s,t+r+n)}}}function c(e,t,a){h.push(e),h.push(t),h.push(a)}function u(e,t,a){f(e),f(t),f(a);const r=n.length/3,o=w.generateTopUV(i,n,r-3,r-2,r-1);g(o[0]),g(o[1]),g(o[2])}function m(e,t,a,r){f(e),f(t),f(r),f(t),f(a),f(r);const o=n.length/3,s=w.generateSideWallUV(i,n,o-6,o-3,o-2,o-1);g(s[0]),g(s[1]),g(s[3]),g(s[1]),g(s[2]),g(s[3])}function f(e){n.push(h[3*e+0]),n.push(h[3*e+1]),n.push(h[3*e+2])}function g(e){o.push(e.x),o.push(e.y)}const h=[],y=void 0===t.curveSegments?12:t.curveSegments,x=void 0===t.steps?1:t.steps;let v=void 0===t.depth?1:t.depth,_=void 0===t.bevelEnabled||t.bevelEnabled,S=void 0===t.bevelThickness?.2:t.bevelThickness,M=void 0===t.bevelSize?S-.1:t.bevelSize,T=void 0===t.bevelOffset?0:t.bevelOffset,E=void 0===t.bevelSegments?3:t.bevelSegments;const b=t.extrudePath,w=void 0===t.UVGenerator?Zc:t.UVGenerator;void 0!==t.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),v=t.amount);let A=!1,R,L,C,P,D;b&&(R=b.getSpacedPoints(x),A=!0,_=!1,L=b.computeFrenetFrames(x,!1),C=new $o,P=new $o,D=new $o),_||(E=0,S=0,M=0,T=0);const I=e.extractPoints(y);let z=I.shape;const B=I.holes,N=!Xc.isClockWise(z);if(N){z=z.reverse();for(let e=0,t=B.length;e<t;e++){const t=B[e];Xc.isClockWise(t)&&(B[e]=t.reverse())}}const U=Xc.triangulateShape(z,B),H=z;for(let t=0,a=B.length;t<a;t++){const e=B[t];z=z.concat(e)}const O=z.length,F=U.length,G=[];for(let t=0,a=H.length,r=a-1,i=t+1;t<a;t++,r++,i++)r===a&&(r=0),i===a&&(i=0),G[t]=d(H[t],H[r],H[i]);const V=[];let k=G.concat(),W;for(let t=0,a=B.length;t<a;t++){const e=B[t];W=[];for(let t=0,a=e.length,r=a-1,i=t+1;t<a;t++,r++,i++)r===a&&(r=0),i===a&&(i=0),W[t]=d(e[t],e[r],e[i]);V.push(W),k=k.concat(W)}for(let r=0;r<E;r++){const e=r/E,t=S*rr(e*s/2),n=M*ar(e*s/2)+T;for(let e=0,r=H.length;e<r;e++){const r=a(H[e],G[e],n);c(r.x,r.y,-t)}for(let e=0,r=B.length;e<r;e++){const r=B[e];W=V[e];for(let e=0,i=r.length;e<i;e++){const i=a(r[e],W[e],n);c(i.x,i.y,-t)}}}const j=M+T;for(let t=0;t<O;t++){const e=_?a(z[t],k[t],j):z[t];A?(P.copy(L.normals[0]).multiplyScalar(e.x),C.copy(L.binormals[0]).multiplyScalar(e.y),D.copy(R[0]).add(P).add(C),c(D.x,D.y,D.z)):c(e.x,e.y,0)}for(let t=1;t<=x;t++)for(let e=0;e<O;e++){const r=_?a(z[e],k[e],j):z[e];A?(P.copy(L.normals[t]).multiplyScalar(r.x),C.copy(L.binormals[t]).multiplyScalar(r.y),D.copy(R[t]).add(P).add(C),c(D.x,D.y,D.z)):c(r.x,r.y,v/x*t)}for(let r=E-1;0<=r;r--){const e=r/E,t=S*rr(e*s/2),n=M*ar(e*s/2)+T;for(let e=0,r=H.length;e<r;e++){const r=a(H[e],G[e],n);c(r.x,r.y,v+t)}for(let e=0,r=B.length;e<r;e++){const r=B[e];W=V[e];for(let e=0,i=r.length;e<i;e++){const i=a(r[e],W[e],n);A?c(i.x,i.y+R[x-1].y,R[x-1].x+t):c(i.x,i.y,v+t)}}}l(),function(){const e=n.length/3;let t=0;p(H,t),t+=H.length;for(let e=0,a=B.length;e<a;e++){const a=B[e];p(a,t),t+=a.length}i.addGroup(e,n.length/3-e,1)}()}super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,n=[],o=[];for(let r=0,i=e.length;r<i;r++){const t=e[r];a(t)}this.setAttribute("position",new wd(n,3)),this.setAttribute("uv",new wd(o,2)),this.computeVertexNormals()}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,a=this.parameters.options;return Pa(t,a,e)}static fromJSON(e,t){const a=[];for(let r=0,i=e.shapes.length;r<i;r++){const i=t[e.shapes[r]];a.push(i)}const r=e.options.extrudePath;return void 0!==r&&(e.options.extrudePath=new Cc[r.type]().fromJSON(r)),new Yc(a,e.options)}}const Zc={generateTopUV:function(e,t,a,r,i){const n=t[3*a],o=t[3*a+1],s=t[3*r],d=t[3*r+1],l=t[3*i],p=t[3*i+1];return[new Co(n,o),new Co(s,d),new Co(l,p)]},generateSideWallUV:function(e,t,a,r,i,n){const o=t[3*a],s=t[3*a+1],d=t[3*a+2],l=t[3*r],p=t[3*r+1],c=t[3*r+2],u=t[3*i],m=t[3*i+1],f=t[3*i+2],g=t[3*n],h=t[3*n+1],y=t[3*n+2];return dr(s-p)<dr(o-l)?[new Co(o,1-d),new Co(l,1-c),new Co(u,1-f),new Co(g,1-y)]:[new Co(s,1-d),new Co(p,1-c),new Co(m,1-f),new Co(h,1-y)]}};class Kc extends Hc{constructor(e=1,a=0){const r=(1+2.23606797749979)/2;super([-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,a),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:a}}static fromJSON(e){return new Kc(e.radius,e.detail)}}class Jc extends Hc{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Jc(e.radius,e.detail)}}class Qc extends Bd{constructor(e=.5,t=1,a=8,r=1,o=0,d=2*s){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:a,phiSegments:r,thetaStart:o,thetaLength:d},a=n(3,a),r=n(1,r);const l=[],p=[],c=[],u=[];let m=e;const i=(t-e)/r,f=new $o,g=new Co;for(let n=0;n<=r;n++){for(let e=0;e<=a;e++){const r=o+e/a*d;f.x=m*rr(r),f.y=m*ar(r),p.push(f.x,f.y,f.z),c.push(0,0,1),g.x=(f.x/t+1)/2,g.y=(f.y/t+1)/2,u.push(g.x,g.y)}m+=i}for(let i=0;i<r;i++){const e=i*(a+1);for(let t=0;t<a;t++){const r=t+e,i=r+a+1,n=r+a+2,o=r+1;l.push(r,i,o),l.push(i,n,o)}}this.setIndex(l),this.setAttribute("position",new wd(p,3)),this.setAttribute("normal",new wd(c,3)),this.setAttribute("uv",new wd(u,2))}static fromJSON(e){return new Qc(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class $c extends Bd{constructor(e=new jc([new Co(0,.5),new Co(-.5,-.5),new Co(.5,-.5)]),t=12){function a(e){const d=n.length/3,a=e.extractPoints(t);let p=a.shape;const c=a.holes;!1===Xc.isClockWise(p)&&(p=p.reverse());for(let t=0,a=c.length;t<a;t++){const e=c[t];!0===Xc.isClockWise(e)&&(c[t]=e.reverse())}const u=Xc.triangulateShape(p,c);for(let t=0,a=c.length;t<a;t++){const e=c[t];p=p.concat(e)}for(let t=0,a=p.length;t<a;t++){const e=p[t];n.push(e.x,e.y,0),o.push(0,0,1),s.push(e.x,e.y)}for(let t=0,a=u.length;t<a;t++){const e=u[t],i=e[0]+d,a=e[1]+d,n=e[2]+d;r.push(i,a,n),l+=3}}super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const r=[],n=[],o=[],s=[];let d=0,l=0;if(!1===Array.isArray(e))a(e);else for(let t=0;t<e.length;t++)a(e[t]),this.addGroup(d,l,t),d+=l,l=0;this.setIndex(r),this.setAttribute("position",new wd(n,3)),this.setAttribute("normal",new wd(o,3)),this.setAttribute("uv",new wd(s,2))}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return Da(t,e)}static fromJSON(e,t){const a=[];for(let r=0,i=e.shapes.length;r<i;r++){const i=t[e.shapes[r]];a.push(i)}return new $c(a,e.curveSegments)}}class eu extends Bd{constructor(e=1,t=32,r=16,a=0,i=2*s,l=0,d=s){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:a,phiLength:i,thetaStart:l,thetaLength:d},t=n(3,sr(t)),r=n(2,sr(r));const p=o(l+d,Math.PI);let c=0;const u=[],m=new $o,f=new $o,g=[],h=[],y=[],x=[];for(let n=0;n<=r;n++){const o=[],g=n/r;let v=0;0==n&&0==l?v=.5/t:n==r&&p==s&&(v=-.5/t);for(let r=0;r<=t;r++){const n=r/t;m.x=-e*rr(a+n*i)*ar(l+g*d),m.y=e*rr(l+g*d),m.z=e*ar(a+n*i)*ar(l+g*d),h.push(m.x,m.y,m.z),f.copy(m).normalize(),y.push(f.x,f.y,f.z),x.push(n+v,1-g),o.push(c++)}u.push(o)}for(let n=0;n<r;n++)for(let e=0;e<t;e++){const t=u[n][e+1],a=u[n][e],i=u[n+1][e],o=u[n+1][e+1];(0!==n||0<l)&&g.push(t,a,o),(n!==r-1||p<s)&&g.push(a,i,o)}this.setIndex(g),this.setAttribute("position",new wd(h,3)),this.setAttribute("normal",new wd(y,3)),this.setAttribute("uv",new wd(x,2))}static fromJSON(e){return new eu(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class tu extends Hc{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new tu(e.radius,e.detail)}}class au extends Bd{constructor(e=1,t=.4,a=8,r=6,n=2*s){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:a,tubularSegments:r,arc:n},a=sr(a),r=sr(r);const o=[],d=[],l=[],p=[],c=new $o,m=new $o,f=new $o;for(let o=0;o<=a;o++)for(let g=0;g<=r;g++){const i=g/r*n,u=2*(o/a*s);m.x=(e+t*rr(u))*rr(i),m.y=(e+t*rr(u))*ar(i),m.z=t*ar(u),d.push(m.x,m.y,m.z),c.x=e*rr(i),c.y=e*ar(i),f.subVectors(m,c).normalize(),l.push(f.x,f.y,f.z),p.push(g/r),p.push(o/a)}for(let s=1;s<=a;s++)for(let e=1;e<=r;e++){const t=(r+1)*s+e-1,a=(r+1)*(s-1)+e-1,i=(r+1)*(s-1)+e,n=(r+1)*s+e;o.push(t,a,n),o.push(a,i,n)}this.setIndex(o),this.setAttribute("position",new wd(d,3)),this.setAttribute("normal",new wd(l,3)),this.setAttribute("uv",new wd(p,2))}static fromJSON(e){return new au(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class ru extends Bd{constructor(e=1,t=.4,a=64,r=8,n=2,o=3){function d(e,t,a,r,i){const n=rr(e),o=ar(e),s=a/t*e,d=rr(s);i.x=.5*(r*(2+d))*n,i.y=.5*(r*(2+d)*o),i.z=.5*(r*ar(s))}super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:a,radialSegments:r,p:n,q:o},a=sr(a),r=sr(r);const l=[],c=[],u=[],m=[],f=new $o,g=new $o,h=new $o,y=new $o,x=new $o,v=new $o,_=new $o;for(let l=0;l<=a;++l){const i=2*(l/a*n*s);d(i,n,o,e,h),d(i+.01,n,o,e,y),v.subVectors(y,h),_.addVectors(y,h),x.crossVectors(v,_),_.crossVectors(x,v),x.normalize(),_.normalize();for(let e=0;e<=r;++e){const i=2*(e/r*s),n=-t*rr(i),o=t*ar(i);f.x=h.x+(n*_.x+o*x.x),f.y=h.y+(n*_.y+o*x.y),f.z=h.z+(n*_.z+o*x.z),c.push(f.x,f.y,f.z),g.subVectors(f,h).normalize(),u.push(g.x,g.y,g.z),m.push(l/a),m.push(e/r)}}for(let s=1;s<=a;s++)for(let e=1;e<=r;e++){const t=(r+1)*(s-1)+(e-1),a=(r+1)*s+(e-1),i=(r+1)*s+e,n=(r+1)*(s-1)+e;l.push(t,a,n),l.push(a,i,n)}this.setIndex(l),this.setAttribute("position",new wd(c,3)),this.setAttribute("normal",new wd(u,3)),this.setAttribute("uv",new wd(m,2))}static fromJSON(e){return new ru(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class iu extends Bd{constructor(e=new Rc(new $o(-1,-1,0),new $o(-1,1,0),new $o(1,1,0)),t=64,a=1,r=8,i=!1){function n(n){m=e.getPointAt(n/t,m);const i=l.normals[n],o=l.binormals[n];for(let e=0;e<=r;e++){const t=2*(e/r*s),n=ar(t),d=-rr(t);c.x=d*i.x+n*o.x,c.y=d*i.y+n*o.y,c.z=d*i.z+n*o.z,c.normalize(),g.push(c.x,c.y,c.z),p.x=m.x+a*c.x,p.y=m.y+a*c.y,p.z=m.z+a*c.z,f.push(p.x,p.y,p.z)}}function o(){for(let e=1;e<=t;e++)for(let t=1;t<=r;t++){const i=(r+1)*(e-1)+(t-1),a=(r+1)*e+(t-1),n=(r+1)*e+t,o=(r+1)*(e-1)+t;y.push(i,a,o),y.push(a,n,o)}}function d(){for(let e=0;e<=t;e++)for(let a=0;a<=r;a++)u.x=e/t,u.y=a/r,h.push(u.x,u.y)}super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:a,radialSegments:r,closed:i};const l=e.computeFrenetFrames(t,i);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const p=new $o,c=new $o,u=new Co;let m=new $o;const f=[],g=[],h=[],y=[];(function(){for(let e=0;e<t;e++)n(e);n(!1===i?t:0),d(),o()})(),this.setIndex(y),this.setAttribute("position",new wd(f,3)),this.setAttribute("normal",new wd(g,3)),this.setAttribute("uv",new wd(h,2))}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new iu(new Cc[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class nu extends Bd{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},null!==e){const t=[],a=new Set,r=new $o,n=new $o;if(null!==e.index){const o=e.attributes.position,s=e.index;let i=e.groups;0===i.length&&(i=[{start:0,count:s.count,materialIndex:0}]);for(let e=0,d=i.length;e<d;++e){const d=i[e],l=d.start,p=d.count;for(let e=l;e<l+p;e+=3)for(let i=0;3>i;i++){const d=s.getX(e+i),l=s.getX(e+(i+1)%3);r.fromBufferAttribute(o,d),n.fromBufferAttribute(o,l),!0===Ia(r,n,a)&&(t.push(r.x,r.y,r.z),t.push(n.x,n.y,n.z))}}}else{const o=e.attributes.position;for(let e=0,i=o.count/3;e<i;e++)for(let i=0;3>i;i++){const s=3*e+i,d=3*e+(i+1)%3;r.fromBufferAttribute(o,s),n.fromBufferAttribute(o,d),!0===Ia(r,n,a)&&(t.push(r.x,r.y,r.z),t.push(n.x,n.y,n.z))}}this.setAttribute("position",new wd(t,3))}}}var ou=Object.freeze({__proto__:null,BoxGeometry:el,BoxBufferGeometry:el,CapsuleGeometry:zc,CapsuleBufferGeometry:zc,CircleGeometry:Bc,CircleBufferGeometry:Bc,ConeGeometry:Uc,ConeBufferGeometry:Uc,CylinderGeometry:Nc,CylinderBufferGeometry:Nc,DodecahedronGeometry:Oc,DodecahedronBufferGeometry:Oc,EdgesGeometry:Wc,ExtrudeGeometry:Yc,ExtrudeBufferGeometry:Yc,IcosahedronGeometry:Kc,IcosahedronBufferGeometry:Kc,LatheGeometry:Ic,LatheBufferGeometry:Ic,OctahedronGeometry:Jc,OctahedronBufferGeometry:Jc,PlaneGeometry:yl,PlaneBufferGeometry:yl,PolyhedronGeometry:Hc,PolyhedronBufferGeometry:Hc,RingGeometry:Qc,RingBufferGeometry:Qc,ShapeGeometry:$c,ShapeBufferGeometry:$c,SphereGeometry:eu,SphereBufferGeometry:eu,TetrahedronGeometry:tu,TetrahedronBufferGeometry:tu,TorusGeometry:au,TorusBufferGeometry:au,TorusKnotGeometry:ru,TorusKnotBufferGeometry:ru,TubeGeometry:iu,TubeBufferGeometry:iu,WireframeGeometry:nu});class su extends md{constructor(e){super(),this.type="ShadowMaterial",this.color=new Oo(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}su.prototype.isShadowMaterial=!0;class du extends al{constructor(e){super(e),this.type="RawShaderMaterial"}}du.prototype.isRawShaderMaterial=!0;class lu extends md{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Oo(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oo(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Wn,this.normalScale=new Co(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}lu.prototype.isMeshStandardMaterial=!0;class pu extends lu{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Co(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return p(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.sheenColor=new Oo(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new Oo(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Oo(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){0<this._sheen!=0<e&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){0<this._clearcoat!=0<e&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){0<this._transmission!=0<e&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}pu.prototype.isMeshPhysicalMaterial=!0;class cu extends md{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new Oo(16777215),this.specular=new Oo(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oo(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Wn,this.normalScale=new Co(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ai,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}cu.prototype.isMeshPhongMaterial=!0;class uu extends md{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Oo(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oo(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Wn,this.normalScale=new Co(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}uu.prototype.isMeshToonMaterial=!0;class mu extends md{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Wn,this.normalScale=new Co(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}mu.prototype.isMeshNormalMaterial=!0;class fu extends md{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new Oo(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oo(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ai,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}fu.prototype.isMeshLambertMaterial=!0;class gu extends md{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Oo(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Wn,this.normalScale=new Co(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}gu.prototype.isMeshMatcapMaterial=!0;class hu extends Yp{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}hu.prototype.isLineDashedMaterial=!0;const yu={ShadowMaterial:su,SpriteMaterial:mp,RawShaderMaterial:du,ShaderMaterial:al,PointsMaterial:nc,MeshPhysicalMaterial:pu,MeshStandardMaterial:lu,MeshPhongMaterial:cu,MeshToonMaterial:uu,MeshNormalMaterial:mu,MeshLambertMaterial:fu,MeshDepthMaterial:Kl,MeshDistanceMaterial:Jl,MeshBasicMaterial:fd,MeshMatcapMaterial:gu,LineDashedMaterial:hu,LineBasicMaterial:Yp,Material:md};md.fromType=function(e){return new yu[e]};const xu={arraySlice:function(e,t,a){return xu.isTypedArray(e)?new e.constructor(e.subarray(t,void 0===a?e.length:a)):e.slice(t,a)},convertArray:function(e,t,a){return e&&(a||e.constructor!==t)?"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e):e},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){const t=e.length,a=Array(t);for(let r=0;r!==t;++r)a[r]=r;return a.sort(function(t,a){return e[t]-e[a]}),a},sortedArray:function(e,t,a){const r=e.length,i=new e.constructor(r);for(let n=0,o=0;o!==r;++n){const r=a[n]*t;for(let a=0;a!==t;++a)i[o++]=e[r+a]}return i},flattenJSON:function(e,t,a,r){let n=1,i=e[0];for(;void 0!==i&&void 0===i[r];)i=e[n++];if(void 0===i)return;let o=i[r];if(void 0!==o)if(Array.isArray(o))do o=i[r],void 0!==o&&(t.push(i.time),a.push.apply(a,o)),i=e[n++];while(void 0!==i);else if(void 0!==o.toArray)do o=i[r],void 0!==o&&(t.push(i.time),o.toArray(a,a.length)),i=e[n++];while(void 0!==i);else do o=i[r],void 0!==o&&(t.push(i.time),a.push(o)),i=e[n++];while(void 0!==i)},subclip:function(e,t,a,r,i=30){const n=e.clone();n.name=t;const o=[];for(let s=0;s<n.tracks.length;++s){const e=n.tracks[s],t=e.getValueSize(),d=[],l=[];for(let n=0;n<e.times.length;++n){const o=e.times[n]*i;if(!(o<a||o>=r)){d.push(e.times[n]);for(let a=0;a<t;++a)l.push(e.values[n*t+a])}}0===d.length||(e.times=xu.convertArray(d,e.times.constructor),e.values=xu.convertArray(l,e.values.constructor),o.push(e))}n.tracks=o;let s=Infinity;for(let o=0;o<n.tracks.length;++o)s>n.tracks[o].times[0]&&(s=n.tracks[o].times[0]);for(let o=0;o<n.tracks.length;++o)n.tracks[o].shift(-1*s);return n.resetDuration(),n},makeClipAdditive:function(e,t=0,a=e,r=30){0>=r&&(r=30);const n=a.tracks.length,o=t/r;for(let s=0;s<n;++s){const t=a.tracks[s],r=t.ValueTypeName;if("bool"===r||"string"===r)continue;const i=e.tracks.find(function(e){return e.name===t.name&&e.ValueTypeName===r});if(void 0===i)continue;let n=0;const d=t.getValueSize();t.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(n=d/3);let l=0;const p=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=p/3);const c=t.times.length-1;let u;if(o<=t.times[0]){const e=n,a=d-n;u=xu.arraySlice(t.values,e,a)}else if(o>=t.times[c]){const e=c*d+n,a=e+d-n;u=xu.arraySlice(t.values,e,a)}else{const e=t.createInterpolant(),a=n,r=d-n;e.evaluate(o),u=xu.arraySlice(e.resultBuffer,a,r)}if("quaternion"===r){const e=new Qo().fromArray(u).normalize().conjugate();e.toArray(u)}const m=i.times.length;for(let e=0;e<m;++e){const t=e*p+l;if("quaternion"===r)Qo.multiplyQuaternionsFlat(i.values,t,u,0,i.values,t);else{const e=p-2*l;for(let a=0;a<e;++a)i.values[t+a]-=u[a]}}}return e.blendMode=Nn,e}};class vu{constructor(e,t,a,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0===r?new t.constructor(a):r,this.sampleValues=t,this.valueSize=a,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let a=this._cachedIndex,r=t[a],i=t[a-1];validate_interval:{seek:{let n;linear_scan:{forward_scan:if(!(e<r)){for(let n=a+2;;){if(void 0===r){if(e<i)break forward_scan;return a=t.length,this._cachedIndex=a,this.afterEnd_(a-1,e,i)}if(a===n)break;if(i=r,r=t[++a],e<r)break seek}n=t.length;break linear_scan}if(!(e>=i)){const o=t[1];e<o&&(a=2,i=o);for(let n=a-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(a===n)break;if(r=i,i=t[--a-1],e>=i)break seek}n=a,a=0;break linear_scan}break validate_interval}for(;a<n;){const r=a+n>>>1;e<t[r]?n=r:a=r+1}if(r=t[a],i=t[a-1],void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(void 0===r)return a=t.length,this._cachedIndex=a,this.afterEnd_(a-1,i,e)}this._cachedIndex=a,this.intervalChanged_(a,i,r)}return this.interpolate_(a,i,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,a=this.sampleValues,r=this.valueSize;for(let n=0;n!==r;++n)t[n]=a[e*r+n];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}vu.prototype.beforeStart_=vu.prototype.copySampleValue_,vu.prototype.afterEnd_=vu.prototype.copySampleValue_;class _u extends vu{constructor(e,t,a,r){super(e,t,a,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Dn,endingEnd:Dn}}intervalChanged_(e,t,a){const r=this.parameterPositions;let i=e-2,n=e+1,o=r[i],s=r[n];if(void 0===o)switch(this.getSettings_().endingStart){case In:i=e,o=2*t-a;break;case zn:i=r.length-2,o=t+r[i]-r[i+1];break;default:i=e,o=a;}if(void 0===s)switch(this.getSettings_().endingEnd){case In:n=e,s=2*a-t;break;case zn:n=1,s=a+r[1]-r[0];break;default:n=e-1,s=t;}const d=.5*(a-t),l=this.valueSize;this._weightPrev=d/(t-o),this._weightNext=d/(s-a),this._offsetPrev=i*l,this._offsetNext=n*l}interpolate_(e,a,r,t){const n=this.resultBuffer,o=this.sampleValues,s=this.valueSize,d=e*s,l=this._offsetPrev,c=this._offsetNext,u=this._weightPrev,m=this._weightNext,f=(r-a)/(t-a),p=f*f,g=p*f;for(let h=0;h!==s;++h)n[h]=(-u*g+2*u*p-u*f)*o[l+h]+((1+u)*g+(-1.5-2*u)*p+(-.5+u)*f+1)*o[d-s+h]+((-1-m)*g+(1.5+m)*p+.5*f)*o[d+h]+(m*g-m*p)*o[c+h];return n}}class bu extends vu{constructor(e,t,a,r){super(e,t,a,r)}interpolate_(e,a,r,t){const n=this.resultBuffer,o=this.sampleValues,s=this.valueSize,d=e*s,l=(r-a)/(t-a);for(let p=0;p!==s;++p)n[p]=o[d-s+p]*(1-l)+o[d+p]*l;return n}}class Su extends vu{constructor(e,t,a,r){super(e,t,a,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class Mu{constructor(e,t,a,r){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=xu.convertArray(t,this.TimeBufferType),this.values=xu.convertArray(a,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let a;if(t.toJSON!==this.toJSON)a=t.toJSON(e);else{a={name:e.name,times:xu.convertArray(e.times,Array),values:xu.convertArray(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(a.interpolation=t)}return a.type=e.ValueTypeName,a}InterpolantFactoryMethodDiscrete(e){return new Su(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new bu(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new _u(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;if(e===Ln?t=this.InterpolantFactoryMethodDiscrete:e===Cn?t=this.InterpolantFactoryMethodLinear:e===Pn?t=this.InterpolantFactoryMethodSmooth:void 0,void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(t);return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ln;case this.InterpolantFactoryMethodLinear:return Cn;case this.InterpolantFactoryMethodSmooth:return Pn;}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){const t=this.times;for(let a=0,r=t.length;a!==r;++a)t[a]+=e}return this}scale(e){if(1!==e){const t=this.times;for(let a=0,r=t.length;a!==r;++a)t[a]*=e}return this}trim(e,t){const a=this.times,r=a.length;let i=0,o=r-1;for(;i!==r&&a[i]<e;)++i;for(;-1!==o&&a[o]>t;)--o;if(++o,0!=i||o!==r){i>=o&&(o=n(o,1),i=o-1);const e=this.getValueSize();this.times=xu.arraySlice(a,i,o),this.values=xu.arraySlice(this.values,i*e,o*e)}return this}validate(){let e=!0;const t=this.getValueSize();0!=t-sr(t)&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const a=this.times,r=this.values,n=a.length;0===n&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let t=0;t!==n;t++){const r=a[t];if("number"==typeof r&&isNaN(r)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,r),e=!1;break}if(null!==o&&o>r){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,r,o),e=!1;break}o=r}if(void 0!==r&&xu.isTypedArray(r))for(let t=0,a=r.length;t!==a;++t){const a=r[t];if(isNaN(a)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,a),e=!1;break}}return e}optimize(){const e=xu.arraySlice(this.times),t=xu.arraySlice(this.values),a=this.getValueSize(),r=this.getInterpolation()===Pn,n=e.length-1;let o=1;for(let s=1,i;s<n;++s){i=!1;const n=e[s],d=e[s+1];if(n!==d&&(1!==s||n!==e[0]))if(!r){const e=s*a;for(let r=0;r!==a;++r){const n=t[e+r];if(n!==t[e-a+r]||n!==t[e+a+r]){i=!0;break}}}else i=!0;if(i){if(s!==o){e[o]=e[s];const r=s*a,i=o*a;for(let e=0;e!==a;++e)t[i+e]=t[r+e]}++o}}if(0<n){e[o]=e[n];for(let e=o*a,r=0;r!==a;++r)t[e+r]=t[n*a+r];++o}return o===e.length?(this.times=e,this.values=t):(this.times=xu.arraySlice(e,0,o),this.values=xu.arraySlice(t,0,o*a)),this}clone(){const e=xu.arraySlice(this.times,0),t=xu.arraySlice(this.values,0),a=this.constructor,r=new a(this.name,e,t);return r.createInterpolant=this.createInterpolant,r}}Mu.prototype.TimeBufferType=Float32Array,Mu.prototype.ValueBufferType=Float32Array,Mu.prototype.DefaultInterpolation=Cn;class Tu extends Mu{}Tu.prototype.ValueTypeName="bool",Tu.prototype.ValueBufferType=Array,Tu.prototype.DefaultInterpolation=Ln,Tu.prototype.InterpolantFactoryMethodLinear=void 0,Tu.prototype.InterpolantFactoryMethodSmooth=void 0;class Eu extends Mu{}Eu.prototype.ValueTypeName="color";class wu extends Mu{}wu.prototype.ValueTypeName="number";class Au extends vu{constructor(e,t,a,r){super(e,t,a,r)}interpolate_(e,a,r,t){const i=this.resultBuffer,n=this.sampleValues,o=this.valueSize;let s=e*o;for(let d=s+o;s!==d;s+=4)Qo.slerpFlat(i,0,n,s-o,n,s,(r-a)/(t-a));return i}}class Ru extends Mu{InterpolantFactoryMethodLinear(e){return new Au(this.times,this.values,this.getValueSize(),e)}}Ru.prototype.ValueTypeName="quaternion",Ru.prototype.DefaultInterpolation=Cn,Ru.prototype.InterpolantFactoryMethodSmooth=void 0;class Lu extends Mu{}Lu.prototype.ValueTypeName="string",Lu.prototype.ValueBufferType=Array,Lu.prototype.DefaultInterpolation=Ln,Lu.prototype.InterpolantFactoryMethodLinear=void 0,Lu.prototype.InterpolantFactoryMethodSmooth=void 0;class Cu extends Mu{}Cu.prototype.ValueTypeName="vector";class Pu{constructor(e,t=-1,a,r=Bn){this.name=e,this.tracks=a,this.duration=t,this.blendMode=r,this.uuid=l(),0>this.duration&&this.resetDuration()}static parse(e){const t=[],a=e.tracks,r=1/(e.fps||1);for(let o=0,i=a.length;o!==i;++o)t.push(Ba(a[o]).scale(r));const i=new this(e.name,e.duration,t,e.blendMode);return i.uuid=e.uuid,i}static toJSON(e){const t=[],a=e.tracks,r={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,i=a.length;r!==i;++r)t.push(Mu.toJSON(a[r]));return r}static CreateFromMorphTargetSequence(e,t,a,r){const n=t.length,o=[];for(let s=0;s<n;s++){let e=[],i=[];e.push((s+n-1)%n,s,(s+1)%n),i.push(0,1,0);const d=xu.getKeyframeOrder(e);e=xu.sortedArray(e,1,d),i=xu.sortedArray(i,1,d),r||0!==e[0]||(e.push(n),i.push(i[0])),o.push(new wu(".morphTargetInfluences["+t[s].name+"]",e,i).scale(1/a))}return new this(e,-1,o)}static findByName(e,t){let a=e;if(!Array.isArray(e)){const t=e;a=t.geometry&&t.geometry.animations||t.animations}for(let r=0;r<a.length;r++)if(a[r].name===t)return a[r];return null}static CreateClipsFromMorphTargetSequences(e,t,a){const r={},n=/^([\w-]*?)([\d]+)$/;for(let o=0,i=e.length;o<i;o++){const t=e[o],a=t.name.match(n);if(a&&1<a.length){const e=a[1];let i=r[e];i||(r[e]=i=[]),i.push(t)}}const i=[];for(const n in r)i.push(this.CreateFromMorphTargetSequence(n,r[n],t,a));return i}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const a=function(e,t,a,r,i){if(0!==a.length){const n=[],o=[];xu.flattenJSON(a,n,o,r),0!==n.length&&i.push(new e(t,n,o))}},r=[],i=e.name||"default",n=e.fps||30,o=e.blendMode;let s=e.length||-1;const d=e.hierarchy||[];for(let i=0;i<d.length;i++){const e=d[i].keys;if(e&&0!==e.length)if(e[0].morphTargets){const t={};let a;for(a=0;a<e.length;a++)if(e[a].morphTargets)for(let r=0;r<e[a].morphTargets.length;r++)t[e[a].morphTargets[r]]=-1;for(const i in t){const t=[],n=[];for(let r=0;r!==e[a].morphTargets.length;++r){const r=e[a];t.push(r.time),n.push(r.morphTarget===i?1:0)}r.push(new wu(".morphTargetInfluence["+i+"]",t,n))}s=t.length*n}else{const n=".bones["+t[i].name+"]";a(Cu,n+".position",e,"pos",r),a(Ru,n+".quaternion",e,"rot",r),a(Cu,n+".scale",e,"scl",r)}}if(0===r.length)return null;const l=new this(i,s,r,o);return l}resetDuration(){const e=this.tracks;let t=0;for(let a=0,r=e.length;a!==r;++a){const e=this.tracks[a];t=n(t,e.times[e.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}const Du={enabled:!1,files:{},add:function(e,t){!1===this.enabled||(this.files[e]=t)},get:function(e){return!1===this.enabled?void 0:this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class Iu{constructor(e,t,a){const r=this;let i=!1,n=0,o=0,s;const d=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=a,this.itemStart=function(e){o++,!1==i&&void 0!==r.onStart&&r.onStart(e,n,o),i=!0},this.itemEnd=function(e){n++,void 0!==r.onProgress&&r.onProgress(e,n,o),n==o&&(i=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)},this.resolveURL=function(e){return s?s(e):e},this.setURLModifier=function(e){return s=e,this},this.addHandler=function(e,t){return d.push(e,t),this},this.removeHandler=function(e){const t=d.indexOf(e);return-1!==t&&d.splice(t,2),this},this.getHandler=function(e){for(let t=0,a=d.length;t<a;t+=2){const a=d[t],r=d[t+1];if(a.global&&(a.lastIndex=0),a.test(e))return r}return null}}}const zu=new Iu;class Bu{constructor(e){this.manager=void 0===e?zu:e,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const a=this;return new Promise(function(r,i){a.load(e,r,t,i)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Nu={};class Uu extends Bu{constructor(e){super(e)}load(e,t,a,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const i=Du.get(e);if(void 0!==i)return this.manager.itemStart(e),setTimeout(()=>{t&&t(i),this.manager.itemEnd(e)},0),i;if(void 0!==Nu[e])return void Nu[e].push({onLoad:t,onProgress:a,onError:r});Nu[e]=[],Nu[e].push({onLoad:t,onProgress:a,onError:r});const n=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,s=this.responseType;fetch(n).then((t)=>{if(200===t.status||0===t.status){if(0===t.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===t.body||void 0===t.body.getReader)return t;const a=Nu[e],r=t.body.getReader(),i=t.headers.get("Content-Length"),n=i?parseInt(i):0;let o=0;const s=new ReadableStream({start(e){function t(){r.read().then(({done:r,value:i})=>{if(r)e.close();else{o+=i.byteLength;const r=new ProgressEvent("progress",{lengthComputable:0!==n,loaded:o,total:n});for(let e=0,t=a.length;e<t;e++){const t=a[e];t.onProgress&&t.onProgress(r)}e.enqueue(i),t()}})}t()}});return new Response(s)}throw Error(`fetch for "${t.url}" responded with ${t.status}: ${t.statusText}`)}).then((e)=>{switch(s){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then((e)=>{const t=new DOMParser;return t.parseFromString(e,o)});case"json":return e.json();default:if(void 0===o)return e.text();else{const t=/charset="?([^;"\s]*)"?/i,a=t.exec(o),r=a&&a[1]?a[1].toLowerCase():void 0,i=new TextDecoder(r);return e.arrayBuffer().then((e)=>i.decode(e))}}}).then((t)=>{Du.add(e,t);const a=Nu[e];delete Nu[e];for(let e=0,r=a.length;e<r;e++){const r=a[e];r.onLoad&&r.onLoad(t)}}).catch((t)=>{const a=Nu[e];if(void 0===a)throw this.manager.itemError(e),t;delete Nu[e];for(let e=0,r=a.length;e<r;e++){const r=a[e];r.onError&&r.onError(t)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Hu extends Bu{constructor(e){super(e)}load(t,e,a,r){const i=this,n=new Uu(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials),n.load(t,function(a){try{e(i.parse(JSON.parse(a)))}catch(a){r?r(a):console.error(a),i.manager.itemError(t)}},a,r)}parse(e){const t=[];for(let a=0;a<e.length;a++){const r=Pu.parse(e[a]);t.push(r)}return t}}class Ou extends Bu{constructor(e){super(e)}load(e,t,a,r){function n(n){l.load(e[n],function(e){const a=o.parse(e,!0);s[n]={width:a.width,height:a.height,format:a.format,mipmaps:a.mipmaps},p+=1,6==p&&(1===a.mipmapCount&&(d.minFilter=Ei),d.image=s,d.format=a.format,d.needsUpdate=!0,t&&t(d))},a,r)}const o=this,s=[],d=new mc,l=new Uu(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(o.withCredentials);let p=0;if(Array.isArray(e))for(let t=0,a=e.length;t<a;++t)n(t);else l.load(e,function(e){const a=o.parse(e,!0);if(a.isCubemap){const e=a.mipmaps.length/a.mipmapCount;for(let t=0;t<e;t++){s[t]={mipmaps:[]};for(let e=0;e<a.mipmapCount;e++)s[t].mipmaps.push(a.mipmaps[t*a.mipmapCount+e]),s[t].format=a.format,s[t].width=a.width,s[t].height=a.height}d.image=s}else d.image.width=a.width,d.image.height=a.height,d.mipmaps=a.mipmaps;1===a.mipmapCount&&(d.minFilter=Ei),d.format=a.format,d.needsUpdate=!0,t&&t(d)},a,r);return d}}class Fu extends Bu{constructor(e){super(e)}load(e,t,a,r){function i(){o(),Du.add(e,this),t&&t(this),s.manager.itemEnd(e)}function n(t){o(),r&&r(t),s.manager.itemError(e),s.manager.itemEnd(e)}function o(){l.removeEventListener("load",i,!1),l.removeEventListener("error",n,!1)}void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,d=Du.get(e);if(void 0!==d)return s.manager.itemStart(e),setTimeout(function(){t&&t(d),s.manager.itemEnd(e)},0),d;const l=x("img");return l.addEventListener("load",i,!1),l.addEventListener("error",n,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(l.crossOrigin=this.crossOrigin),s.manager.itemStart(e),l.src=e,l}}class Gu extends Bu{constructor(e){super(e)}load(e,t,a,r){function n(a){s.load(e[a],function(e){o.images[a]=e,d++,6===d&&(o.needsUpdate=!0,t&&t(o))},void 0,r)}const o=new dl,s=new Fu(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let d=0;for(let o=0;o<e.length;++o)n(o);return o}}class Vu extends Bu{constructor(e){super(e)}load(e,t,a,r){const i=this,n=new Hp,o=new Uu(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(i.withCredentials),o.load(e,function(e){const a=i.parse(e);a&&(void 0===a.image?void 0!==a.data&&(n.image.width=a.width,n.image.height=a.height,n.image.data=a.data):n.image=a.image,n.wrapS=void 0===a.wrapS?xi:a.wrapS,n.wrapT=void 0===a.wrapT?xi:a.wrapT,n.magFilter=void 0===a.magFilter?Ei:a.magFilter,n.minFilter=void 0===a.minFilter?Ei:a.minFilter,n.anisotropy=void 0===a.anisotropy?1:a.anisotropy,void 0!==a.encoding&&(n.encoding=a.encoding),void 0!==a.flipY&&(n.flipY=a.flipY),void 0!==a.format&&(n.format=a.format),void 0!==a.type&&(n.type=a.type),void 0!==a.mipmaps&&(n.mipmaps=a.mipmaps,n.minFilter=Ri),1===a.mipmapCount&&(n.minFilter=Ei),void 0!==a.generateMipmaps&&(n.generateMipmaps=a.generateMipmaps),n.needsUpdate=!0,t&&t(n,a))},a,r),n}}class ku extends Bu{constructor(e){super(e)}load(e,t,a,r){const i=new Wo,n=new Fu(this.manager);return n.setCrossOrigin(this.crossOrigin),n.setPath(this.path),n.load(e,function(e){i.image=e,i.needsUpdate=!0,void 0!==t&&t(i)},a,r),i}}class Wu extends ed{constructor(e,t=1){super(),this.type="Light",this.color=new Oo(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}Wu.prototype.isLight=!0;class ju extends Wu{constructor(e,t,a){super(e,a),this.type="HemisphereLight",this.position.copy(ed.DefaultUp),this.updateMatrix(),this.groundColor=new Oo(t)}copy(e){return Wu.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}ju.prototype.isHemisphereLight=!0;const qu=new Ls,Xu=new $o,Yu=new $o;class Zu{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Co(512,512),this.map=null,this.mapPass=null,this.matrix=new Ls,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new hl,this._frameExtents=new Co(1,1),this._viewportCount=1,this._viewports=[new jo(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,a=this.matrix;Xu.setFromMatrixPosition(e.matrixWorld),t.position.copy(Xu),Yu.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Yu),t.updateMatrixWorld(),qu.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(qu),a.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),a.multiply(t.projectionMatrix),a.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Ku extends Zu{constructor(){super(new il(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera,a=2*Ro*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;(a!==t.fov||r!==t.aspect||i!==t.far)&&(t.fov=a,t.aspect=r,t.far=i,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}Ku.prototype.isSpotLightShadow=!0;class Ju extends Wu{constructor(e,t,a=0,r=s/3,i=0,n=1){super(e,t),this.type="SpotLight",this.position.copy(ed.DefaultUp),this.updateMatrix(),this.target=new ed,this.distance=a,this.angle=r,this.penumbra=i,this.decay=n,this.shadow=new Ku}get power(){return this.intensity*s}set power(e){this.intensity=e/s}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}Ju.prototype.isSpotLight=!0;const Qu=new Ls,$u=new $o,em=new $o;class tm extends Zu{constructor(){super(new il(90,1,.5,500)),this._frameExtents=new Co(4,2),this._viewportCount=6,this._viewports=[new jo(2,1,1,1),new jo(0,1,1,1),new jo(3,1,1,1),new jo(1,1,1,1),new jo(3,0,1,1),new jo(1,0,1,1)],this._cubeDirections=[new $o(1,0,0),new $o(-1,0,0),new $o(0,0,1),new $o(0,0,-1),new $o(0,1,0),new $o(0,-1,0)],this._cubeUps=[new $o(0,1,0),new $o(0,1,0),new $o(0,1,0),new $o(0,1,0),new $o(0,0,1),new $o(0,0,-1)]}updateMatrices(e,t=0){const a=this.camera,r=this.matrix,i=e.distance||a.far;i!==a.far&&(a.far=i,a.updateProjectionMatrix()),$u.setFromMatrixPosition(e.matrixWorld),a.position.copy($u),em.copy(a.position),em.add(this._cubeDirections[t]),a.up.copy(this._cubeUps[t]),a.lookAt(em),a.updateMatrixWorld(),r.makeTranslation(-$u.x,-$u.y,-$u.z),Qu.multiplyMatrices(a.projectionMatrix,a.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Qu)}}tm.prototype.isPointLightShadow=!0;class am extends Wu{constructor(e,t,a=0,r=1){super(e,t),this.type="PointLight",this.distance=a,this.decay=r,this.shadow=new tm}get power(){return 4*this.intensity*s}set power(e){this.intensity=e/(4*s)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}am.prototype.isPointLight=!0;class rm extends Zu{constructor(){super(new bl(-5,5,5,-5,.5,500))}}rm.prototype.isDirectionalLightShadow=!0;class im extends Wu{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(ed.DefaultUp),this.updateMatrix(),this.target=new ed,this.shadow=new rm}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}im.prototype.isDirectionalLight=!0;class nm extends Wu{constructor(e,t){super(e,t),this.type="AmbientLight"}}nm.prototype.isAmbientLight=!0;class om extends Wu{constructor(e,t,a=10,r=10){super(e,t),this.type="RectAreaLight",this.width=a,this.height=r}get power(){return this.intensity*this.width*this.height*s}set power(e){this.intensity=e/(this.width*this.height*s)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}om.prototype.isRectAreaLight=!0;class sm{constructor(){this.coefficients=[];for(let e=0;9>e;e++)this.coefficients.push(new $o)}set(e){for(let t=0;9>t;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;9>e;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const a=e.x,r=e.y,i=e.z,n=this.coefficients;return t.copy(n[0]).multiplyScalar(.282095),t.addScaledVector(n[1],.488603*r),t.addScaledVector(n[2],.488603*i),t.addScaledVector(n[3],.488603*a),t.addScaledVector(n[4],1.092548*(a*r)),t.addScaledVector(n[5],1.092548*(r*i)),t.addScaledVector(n[6],.315392*(3*i*i-1)),t.addScaledVector(n[7],1.092548*(a*i)),t.addScaledVector(n[8],.546274*(a*a-r*r)),t}getIrradianceAt(e,t){const a=e.x,r=e.y,i=e.z,n=this.coefficients;return t.copy(n[0]).multiplyScalar(.886227),t.addScaledVector(n[1],.511664*2*r),t.addScaledVector(n[2],.511664*2*i),t.addScaledVector(n[3],.511664*2*a),t.addScaledVector(n[4],.429043*2*a*r),t.addScaledVector(n[5],.429043*2*r*i),t.addScaledVector(n[6],.743125*i*i-.247708),t.addScaledVector(n[7],.429043*2*a*i),t.addScaledVector(n[8],.429043*(a*a-r*r)),t}add(e){for(let t=0;9>t;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let a=0;9>a;a++)this.coefficients[a].addScaledVector(e.coefficients[a],t);return this}scale(e){for(let t=0;9>t;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let a=0;9>a;a++)this.coefficients[a].lerp(e.coefficients[a],t);return this}equals(e){for(let t=0;9>t;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const a=this.coefficients;for(let r=0;9>r;r++)a[r].fromArray(e,t+3*r);return this}toArray(e=[],t=0){const a=this.coefficients;for(let r=0;9>r;r++)a[r].toArray(e,t+3*r);return e}static getBasisAt(e,t){const a=e.x,r=e.y,i=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*i,t[3]=.488603*a,t[4]=1.092548*a*r,t[5]=1.092548*r*i,t[6]=.315392*(3*i*i-1),t[7]=1.092548*a*i,t[8]=.546274*(a*a-r*r)}}sm.prototype.isSphericalHarmonics3=!0;class dm extends Wu{constructor(e=new sm,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}dm.prototype.isLightProbe=!0;class lm extends Bu{constructor(e){super(e),this.textures={}}load(t,e,a,r){const i=this,n=new Uu(i.manager);n.setPath(i.path),n.setRequestHeader(i.requestHeader),n.setWithCredentials(i.withCredentials),n.load(t,function(a){try{e(i.parse(JSON.parse(a)))}catch(a){r?r(a):console.error(a),i.manager.itemError(t)}},a,r)}parse(e){function t(e){return void 0===a[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),a[e]}const a=this.textures,r=md.fromType(e.type);if(void 0!==e.uuid&&(r.uuid=e.uuid),void 0!==e.name&&(r.name=e.name),void 0!==e.color&&void 0!==r.color&&r.color.setHex(e.color),void 0!==e.roughness&&(r.roughness=e.roughness),void 0!==e.metalness&&(r.metalness=e.metalness),void 0!==e.sheen&&(r.sheen=e.sheen),void 0!==e.sheenColor&&(r.sheenColor=new Oo().setHex(e.sheenColor)),void 0!==e.sheenRoughness&&(r.sheenRoughness=e.sheenRoughness),void 0!==e.emissive&&void 0!==r.emissive&&r.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==r.specular&&r.specular.setHex(e.specular),void 0!==e.specularIntensity&&(r.specularIntensity=e.specularIntensity),void 0!==e.specularColor&&void 0!==r.specularColor&&r.specularColor.setHex(e.specularColor),void 0!==e.shininess&&(r.shininess=e.shininess),void 0!==e.clearcoat&&(r.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(r.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.transmission&&(r.transmission=e.transmission),void 0!==e.thickness&&(r.thickness=e.thickness),void 0!==e.attenuationDistance&&(r.attenuationDistance=e.attenuationDistance),void 0!==e.attenuationColor&&void 0!==r.attenuationColor&&r.attenuationColor.setHex(e.attenuationColor),void 0!==e.fog&&(r.fog=e.fog),void 0!==e.flatShading&&(r.flatShading=e.flatShading),void 0!==e.blending&&(r.blending=e.blending),void 0!==e.combine&&(r.combine=e.combine),void 0!==e.side&&(r.side=e.side),void 0!==e.shadowSide&&(r.shadowSide=e.shadowSide),void 0!==e.opacity&&(r.opacity=e.opacity),void 0!==e.transparent&&(r.transparent=e.transparent),void 0!==e.alphaTest&&(r.alphaTest=e.alphaTest),void 0!==e.depthTest&&(r.depthTest=e.depthTest),void 0!==e.depthWrite&&(r.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(r.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(r.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(r.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(r.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(r.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(r.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(r.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(r.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(r.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(r.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(r.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(r.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(r.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(r.rotation=e.rotation),1!==e.linewidth&&(r.linewidth=e.linewidth),void 0!==e.dashSize&&(r.dashSize=e.dashSize),void 0!==e.gapSize&&(r.gapSize=e.gapSize),void 0!==e.scale&&(r.scale=e.scale),void 0!==e.polygonOffset&&(r.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(r.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(r.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.dithering&&(r.dithering=e.dithering),void 0!==e.alphaToCoverage&&(r.alphaToCoverage=e.alphaToCoverage),void 0!==e.premultipliedAlpha&&(r.premultipliedAlpha=e.premultipliedAlpha),void 0!==e.visible&&(r.visible=e.visible),void 0!==e.toneMapped&&(r.toneMapped=e.toneMapped),void 0!==e.userData&&(r.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?r.vertexColors=!!(0<e.vertexColors):r.vertexColors=e.vertexColors),void 0!==e.uniforms)for(const a in e.uniforms){const i=e.uniforms[a];switch(r.uniforms[a]={},i.type){case"t":r.uniforms[a].value=t(i.value);break;case"c":r.uniforms[a].value=new Oo().setHex(i.value);break;case"v2":r.uniforms[a].value=new Co().fromArray(i.value);break;case"v3":r.uniforms[a].value=new $o().fromArray(i.value);break;case"v4":r.uniforms[a].value=new jo().fromArray(i.value);break;case"m3":r.uniforms[a].value=new Po().fromArray(i.value);break;case"m4":r.uniforms[a].value=new Ls().fromArray(i.value);break;default:r.uniforms[a].value=i.value;}}if(void 0!==e.defines&&(r.defines=e.defines),void 0!==e.vertexShader&&(r.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(r.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(const t in e.extensions)r.extensions[t]=e.extensions[t];if(void 0!==e.shading&&(r.flatShading=1===e.shading),void 0!==e.size&&(r.size=e.size),void 0!==e.sizeAttenuation&&(r.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(r.map=t(e.map)),void 0!==e.matcap&&(r.matcap=t(e.matcap)),void 0!==e.alphaMap&&(r.alphaMap=t(e.alphaMap)),void 0!==e.bumpMap&&(r.bumpMap=t(e.bumpMap)),void 0!==e.bumpScale&&(r.bumpScale=e.bumpScale),void 0!==e.normalMap&&(r.normalMap=t(e.normalMap)),void 0!==e.normalMapType&&(r.normalMapType=e.normalMapType),void 0!==e.normalScale){let t=e.normalScale;!1===Array.isArray(t)&&(t=[t,t]),r.normalScale=new Co().fromArray(t)}return void 0!==e.displacementMap&&(r.displacementMap=t(e.displacementMap)),void 0!==e.displacementScale&&(r.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(r.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(r.roughnessMap=t(e.roughnessMap)),void 0!==e.metalnessMap&&(r.metalnessMap=t(e.metalnessMap)),void 0!==e.emissiveMap&&(r.emissiveMap=t(e.emissiveMap)),void 0!==e.emissiveIntensity&&(r.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(r.specularMap=t(e.specularMap)),void 0!==e.specularIntensityMap&&(r.specularIntensityMap=t(e.specularIntensityMap)),void 0!==e.specularColorMap&&(r.specularColorMap=t(e.specularColorMap)),void 0!==e.envMap&&(r.envMap=t(e.envMap)),void 0!==e.envMapIntensity&&(r.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(r.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(r.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(r.lightMap=t(e.lightMap)),void 0!==e.lightMapIntensity&&(r.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(r.aoMap=t(e.aoMap)),void 0!==e.aoMapIntensity&&(r.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(r.gradientMap=t(e.gradientMap)),void 0!==e.clearcoatMap&&(r.clearcoatMap=t(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(r.clearcoatRoughnessMap=t(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(r.clearcoatNormalMap=t(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(r.clearcoatNormalScale=new Co().fromArray(e.clearcoatNormalScale)),void 0!==e.transmissionMap&&(r.transmissionMap=t(e.transmissionMap)),void 0!==e.thicknessMap&&(r.thicknessMap=t(e.thicknessMap)),void 0!==e.sheenColorMap&&(r.sheenColorMap=t(e.sheenColorMap)),void 0!==e.sheenRoughnessMap&&(r.sheenRoughnessMap=t(e.sheenRoughnessMap)),r}setTextures(e){return this.textures=e,this}}class pm{static decodeText(e){if("undefined"!=typeof TextDecoder)return new TextDecoder().decode(e);let t="";for(let a=0,r=e.length;a<r;a++)t+=String.fromCharCode(e[a]);try{return decodeURIComponent(escape(t))}catch(a){return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return-1===t?"./":e.slice(0,t+1)}static resolveURL(e,t){return"string"!=typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)?e:/^data:.*,.*$/i.test(e)?e:/^blob:.*$/i.test(e)?e:t+e)}}class cm extends Bd{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=Infinity}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}cm.prototype.isInstancedBufferGeometry=!0;class um extends Bu{constructor(e){super(e)}load(t,e,a,r){const i=this,n=new Uu(i.manager);n.setPath(i.path),n.setRequestHeader(i.requestHeader),n.setWithCredentials(i.withCredentials),n.load(t,function(a){try{e(i.parse(JSON.parse(a)))}catch(a){r?r(a):console.error(a),i.manager.itemError(t)}},a,r)}parse(e){function t(e,t){if(void 0!==r[t])return r[t];const i=e.interleavedBuffers,n=i[t],o=a(e,n.buffer),s=y(n.type,o),d=new pp(s,n.stride);return d.uuid=n.uuid,r[t]=d,d}function a(e,t){if(void 0!==i[t])return i[t];const a=e.arrayBuffers,r=a[t],n=new Uint32Array(r).buffer;return i[t]=n,n}const r={},i={},n=e.isInstancedBufferGeometry?new cm:new Bd,o=e.data.index;if(void 0!==o){const e=y(o.type,o.array);n.setIndex(new yd(e,1))}const s=e.data.attributes;for(const a in s){const r=s[a];let i;if(r.isInterleavedBufferAttribute){const a=t(e.data,r.data);i=new up(a,r.itemSize,r.offset,r.normalized)}else{const e=y(r.type,r.array),t=r.isInstancedBufferAttribute?Vp:yd;i=new t(e,r.itemSize,r.normalized)}void 0!==r.name&&(i.name=r.name),void 0!==r.usage&&i.setUsage(r.usage),void 0!==r.updateRange&&(i.updateRange.offset=r.updateRange.offset,i.updateRange.count=r.updateRange.count),n.setAttribute(a,i)}const d=e.data.morphAttributes;if(d)for(const a in d){const r=d[a],o=[];for(let a=0,i=r.length;a<i;a++){const i=r[a];let n;if(i.isInterleavedBufferAttribute){const a=t(e.data,i.data);n=new up(a,i.itemSize,i.offset,i.normalized)}else{const e=y(i.type,i.array);n=new yd(e,i.itemSize,i.normalized)}void 0!==i.name&&(n.name=i.name),o.push(n)}n.morphAttributes[a]=o}const l=e.data.morphTargetsRelative;l&&(n.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==p)for(let e=0,t=p.length;e!==t;++e){const t=p[e];n.addGroup(t.start,t.count,t.materialIndex)}const c=e.data.boundingSphere;if(void 0!==c){const e=new $o;void 0!==c.center&&e.fromArray(c.center),n.boundingSphere=new _s(e,c.radius)}return e.name&&(n.name=e.name),e.userData&&(n.userData=e.userData),n}}class mm extends Bu{constructor(e){super(e)}load(e,t,a,r){const i=this,n=""===this.path?pm.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||n;const o=new Uu(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){let n=null;try{n=JSON.parse(a)}catch(t){return void 0!==r&&r(t),void console.error("THREE:ObjectLoader: Can't parse "+e+".",t.message)}const o=n.metadata;return void 0===o||void 0===o.type||"geometry"===o.type.toLowerCase()?void console.error("THREE.ObjectLoader: Can't load "+e):void i.parse(n,t)},a,r)}async loadAsync(e,t){const a=this,r=""===this.path?pm.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||r;const i=new Uu(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials);const n=await i.loadAsync(e,t),o=JSON.parse(n),s=o.metadata;if(void 0===s||void 0===s.type||"geometry"===s.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+e);return await a.parseAsync(o)}parse(e,t){const a=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,r),n=this.parseImages(e.images,function(){void 0!==t&&t(d)}),o=this.parseTextures(e.textures,n),s=this.parseMaterials(e.materials,o),d=this.parseObject(e.object,i,s,o,a),l=this.parseSkeletons(e.skeletons,d);if(this.bindSkeletons(d,l),void 0!==t){let e=!1;for(const t in n)if(n[t]instanceof HTMLImageElement){e=!0;break}!1==e&&t(d)}return d}async parseAsync(e){const t=this.parseAnimations(e.animations),a=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,a),i=await this.parseImagesAsync(e.images),n=this.parseTextures(e.textures,i),o=this.parseMaterials(e.materials,n),s=this.parseObject(e.object,r,o,n,t),d=this.parseSkeletons(e.skeletons,s);return this.bindSkeletons(s,d),s}parseShapes(e){const t={};if(void 0!==e)for(let a=0,r=e.length;a<r;a++){const r=new jc().fromJSON(e[a]);t[r.uuid]=r}return t}parseSkeletons(e,t){const a={},r={};if(t.traverse(function(e){e.isBone&&(r[e.uuid]=e)}),void 0!==e)for(let t=0,i=e.length;t<i;t++){const i=new Gp().fromJSON(e[t],r);a[i.uuid]=i}return a}parseGeometries(e,t){const a={};if(void 0!==e){const r=new um;for(let n=0,i=e.length;n<i;n++){let i;const o=e[n];switch(o.type){case"BufferGeometry":case"InstancedBufferGeometry":i=r.parse(o);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:o.type in ou?i=ou[o.type].fromJSON(o,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${o.type}"`);}i.uuid=o.uuid,void 0!==o.name&&(i.name=o.name),!0===i.isBufferGeometry&&void 0!==o.userData&&(i.userData=o.userData),a[o.uuid]=i}}return a}parseMaterials(e,t){const a={},r={};if(void 0!==e){const n=new lm;n.setTextures(t);for(let t=0,i=e.length;t<i;t++){const i=e[t];if("MultiMaterial"===i.type){const e=[];for(let t=0;t<i.materials.length;t++){const r=i.materials[t];void 0===a[r.uuid]&&(a[r.uuid]=n.parse(r)),e.push(a[r.uuid])}r[i.uuid]=e}else void 0===a[i.uuid]&&(a[i.uuid]=n.parse(i)),r[i.uuid]=a[i.uuid]}}return r}parseAnimations(e){const t={};if(void 0!==e)for(let a=0;a<e.length;a++){const r=e[a],i=Pu.parse(r);t[i.uuid]=i}return t}parseImages(e,t){function a(e){return i.manager.itemStart(e),o.load(e,function(){i.manager.itemEnd(e)},void 0,function(){i.manager.itemError(e),i.manager.itemEnd(e)})}function r(e){if("string"==typeof e){const t=e,r=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)?t:i.resourcePath+t;return a(r)}return e.data?{data:y(e.type,e.data),width:e.width,height:e.height}:null}const i=this,n={};let o;if(void 0!==e&&0<e.length){const a=new Iu(t);o=new Fu(a),o.setCrossOrigin(this.crossOrigin);for(let t=0,a=e.length;t<a;t++){const a=e[t],i=a.url;if(Array.isArray(i)){const e=[];for(let t=0,a=i.length;t<a;t++){const a=i[t],n=r(a);null!==n&&(n instanceof HTMLImageElement?e.push(n):e.push(new Hp(n.data,n.width,n.height)))}n[a.uuid]=new Vo(e)}else{const e=r(a.url);n[a.uuid]=new Vo(e)}}}return n}async parseImagesAsync(e){async function t(e){if("string"==typeof e){const t=e,r=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)?t:a.resourcePath+t;return await i.loadAsync(r)}return e.data?{data:y(e.type,e.data),width:e.width,height:e.height}:null}const a=this,r={};let i;if(void 0!==e&&0<e.length){i=new Fu(this.manager),i.setCrossOrigin(this.crossOrigin);for(let a=0,i=e.length;a<i;a++){const i=e[a],n=i.url;if(Array.isArray(n)){const e=[];for(let a=0,r=n.length;a<r;a++){const r=n[a],i=await t(r);null!==i&&(i instanceof HTMLImageElement?e.push(i):e.push(new Hp(i.data,i.width,i.height)))}r[i.uuid]=new Vo(e)}else{const e=await t(i.url);r[i.uuid]=new Vo(e)}}}return r}parseTextures(e,t){function a(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}const r={};if(void 0!==e)for(let n=0,i=e.length;n<i;n++){const i=e[n];void 0===i.image&&console.warn("THREE.ObjectLoader: No \"image\" specified for",i.uuid),void 0===t[i.image]&&console.warn("THREE.ObjectLoader: Undefined image",i.image);const o=t[i.image],s=o.data;let d;Array.isArray(s)?(d=new dl,6===s.length&&(d.needsUpdate=!0)):(d=s&&s.data?new Hp:new Wo,s&&(d.needsUpdate=!0)),d.source=o,d.uuid=i.uuid,void 0!==i.name&&(d.name=i.name),void 0!==i.mapping&&(d.mapping=a(i.mapping,fm)),void 0!==i.offset&&d.offset.fromArray(i.offset),void 0!==i.repeat&&d.repeat.fromArray(i.repeat),void 0!==i.center&&d.center.fromArray(i.center),void 0!==i.rotation&&(d.rotation=i.rotation),void 0!==i.wrap&&(d.wrapS=a(i.wrap[0],gm),d.wrapT=a(i.wrap[1],gm)),void 0!==i.format&&(d.format=i.format),void 0!==i.type&&(d.type=i.type),void 0!==i.encoding&&(d.encoding=i.encoding),void 0!==i.minFilter&&(d.minFilter=a(i.minFilter,hm)),void 0!==i.magFilter&&(d.magFilter=a(i.magFilter,hm)),void 0!==i.anisotropy&&(d.anisotropy=i.anisotropy),void 0!==i.flipY&&(d.flipY=i.flipY),void 0!==i.premultiplyAlpha&&(d.premultiplyAlpha=i.premultiplyAlpha),void 0!==i.unpackAlignment&&(d.unpackAlignment=i.unpackAlignment),void 0!==i.userData&&(d.userData=i.userData),r[i.uuid]=d}return r}parseObject(e,t,a,r,n){function i(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function o(e){if(void 0!==e){if(Array.isArray(e)){const t=[];for(let r=0,i=e.length;r<i;r++){const i=e[r];void 0===a[i]&&console.warn("THREE.ObjectLoader: Undefined material",i),t.push(a[i])}return t}return void 0===a[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),a[e]}}function s(e){return void 0===r[e]&&console.warn("THREE.ObjectLoader: Undefined texture",e),r[e]}let d,l,p;switch(e.type){case"Scene":d=new lp,void 0!==e.background&&(Number.isInteger(e.background)?d.background=new Oo(e.background):d.background=s(e.background)),void 0!==e.environment&&(d.environment=s(e.environment)),void 0!==e.fog&&("Fog"===e.fog.type?d.fog=new dp(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(d.fog=new sp(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":d=new il(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(d.focus=e.focus),void 0!==e.zoom&&(d.zoom=e.zoom),void 0!==e.filmGauge&&(d.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(d.filmOffset=e.filmOffset),void 0!==e.view&&(d.view=Object.assign({},e.view));break;case"OrthographicCamera":d=new bl(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(d.zoom=e.zoom),void 0!==e.view&&(d.view=Object.assign({},e.view));break;case"AmbientLight":d=new nm(e.color,e.intensity);break;case"DirectionalLight":d=new im(e.color,e.intensity);break;case"PointLight":d=new am(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":d=new om(e.color,e.intensity,e.width,e.height);break;case"SpotLight":d=new Ju(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":d=new ju(e.color,e.groundColor,e.intensity);break;case"LightProbe":d=new dm().fromJSON(e);break;case"SkinnedMesh":l=i(e.geometry),p=o(e.material),d=new Np(l,p),void 0!==e.bindMode&&(d.bindMode=e.bindMode),void 0!==e.bindMatrix&&d.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(d.skeleton=e.skeleton);break;case"Mesh":l=i(e.geometry),p=o(e.material),d=new $d(l,p);break;case"InstancedMesh":l=i(e.geometry),p=o(e.material);const t=e.count,a=e.instanceMatrix,r=e.instanceColor;d=new Xp(l,p,t),d.instanceMatrix=new Vp(new Float32Array(a.array),16),void 0!==r&&(d.instanceColor=new Vp(new Float32Array(r.array),r.itemSize));break;case"LOD":d=new Cp;break;case"Line":d=new ec(i(e.geometry),o(e.material));break;case"LineLoop":d=new ic(i(e.geometry),o(e.material));break;case"LineSegments":d=new rc(i(e.geometry),o(e.material));break;case"PointCloud":case"Points":d=new pc(i(e.geometry),o(e.material));break;case"Sprite":d=new Ap(o(e.material));break;case"Group":d=new tp;break;case"Bone":d=new Up;break;default:d=new ed;}if(d.uuid=e.uuid,void 0!==e.name&&(d.name=e.name),void 0===e.matrix?(void 0!==e.position&&d.position.fromArray(e.position),void 0!==e.rotation&&d.rotation.fromArray(e.rotation),void 0!==e.quaternion&&d.quaternion.fromArray(e.quaternion),void 0!==e.scale&&d.scale.fromArray(e.scale)):(d.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(d.matrixAutoUpdate=e.matrixAutoUpdate),d.matrixAutoUpdate&&d.matrix.decompose(d.position,d.quaternion,d.scale)),void 0!==e.castShadow&&(d.castShadow=e.castShadow),void 0!==e.receiveShadow&&(d.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(d.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(d.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(d.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&d.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(d.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(d.visible=e.visible),void 0!==e.frustumCulled&&(d.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(d.renderOrder=e.renderOrder),void 0!==e.userData&&(d.userData=e.userData),void 0!==e.layers&&(d.layers.mask=e.layers),void 0!==e.children){const o=e.children;for(let e=0;e<o.length;e++)d.add(this.parseObject(o[e],t,a,r,n))}if(void 0!==e.animations){const t=e.animations;for(let e=0;e<t.length;e++){const a=t[e];d.animations.push(n[a])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(d.autoUpdate=e.autoUpdate);const t=e.levels;for(let e=0;e<t.length;e++){const a=t[e],r=d.getObjectByProperty("uuid",a.object);void 0!==r&&d.addLevel(r,a.distance)}}return d}bindSkeletons(e,t){0===Object.keys(t).length||e.traverse(function(e){if(!0===e.isSkinnedMesh&&void 0!==e.skeleton){const a=t[e.skeleton];void 0===a?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(a,e.bindMatrix)}})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}const fm={UVMapping:ci,CubeReflectionMapping:ui,CubeRefractionMapping:mi,EquirectangularReflectionMapping:fi,EquirectangularRefractionMapping:gi,CubeUVReflectionMapping:hi},gm={RepeatWrapping:yi,ClampToEdgeWrapping:xi,MirroredRepeatWrapping:vi},hm={NearestFilter:_i,NearestMipmapNearestFilter:bi,NearestMipmapLinearFilter:Mi,LinearFilter:Ei,LinearMipmapNearestFilter:wi,LinearMipmapLinearFilter:Ri};class ym extends Bu{constructor(e){super(e),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(t,e,a,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,n=Du.get(t);if(void 0!==n)return i.manager.itemStart(t),setTimeout(function(){e&&e(n),i.manager.itemEnd(t)},0),n;const o={};o.credentials="anonymous"===this.crossOrigin?"same-origin":"include",o.headers=this.requestHeader,fetch(t,o).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(i.options,{colorSpaceConversion:"none"}))}).then(function(a){Du.add(t,a),e&&e(a),i.manager.itemEnd(t)}).catch(function(a){r&&r(a),i.manager.itemError(t),i.manager.itemEnd(t)}),i.manager.itemStart(t)}}ym.prototype.isImageBitmapLoader=!0;let xm;const vm={getContext:function(){return void 0===xm&&(xm=new(window.AudioContext||window.webkitAudioContext)),xm},setContext:function(e){xm=e}};class _m extends Bu{constructor(e){super(e)}load(t,e,a,r){const i=this,n=new Uu(this.manager);n.setResponseType("arraybuffer"),n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials),n.load(t,function(a){try{const t=a.slice(0),r=vm.getContext();r.decodeAudioData(t,function(t){e(t)})}catch(a){r?r(a):console.error(a),i.manager.itemError(t)}},a,r)}}class bm extends dm{constructor(e,t,a=1){super(void 0,a);const i=new Oo().set(e),n=new Oo().set(t),o=new $o(i.r,i.g,i.b),s=new $o(n.r,n.g,n.b),d=r(Math.PI);this.sh.coefficients[0].copy(o).add(s).multiplyScalar(d),this.sh.coefficients[1].copy(o).sub(s).multiplyScalar(0.8660254037844386*d)}}bm.prototype.isHemisphereLightProbe=!0;class Sm extends dm{constructor(e,t=1){super(void 0,t);const a=new Oo().set(e);this.sh.coefficients[0].set(a.r,a.g,a.b).multiplyScalar(2*r(Math.PI))}}Sm.prototype.isAmbientLightProbe=!0;const Mm=new Ls,Tm=new Ls,Em=new Ls;class wm{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new il,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new il,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const a=this._cache,r=a.focus!==e.focus||a.fov!==e.fov||a.aspect!==e.aspect*this.aspect||a.near!==e.near||a.far!==e.far||a.zoom!==e.zoom||a.eyeSep!==this.eyeSep;if(r){a.focus=e.focus,a.fov=e.fov,a.aspect=e.aspect*this.aspect,a.near=e.near,a.far=e.far,a.zoom=e.zoom,a.eyeSep=this.eyeSep,Em.copy(e.projectionMatrix);const r=a.eyeSep/2,i=r*a.near/a.focus,n=a.near*t(.5*(Ao*a.fov))/a.zoom;let o,s;Tm.elements[12]=-r,Mm.elements[12]=r,o=-n*a.aspect+i,s=n*a.aspect+i,Em.elements[0]=2*a.near/(s-o),Em.elements[8]=(s+o)/(s-o),this.cameraL.projectionMatrix.copy(Em),o=-n*a.aspect-i,s=n*a.aspect-i,Em.elements[0]=2*a.near/(s-o),Em.elements[8]=(s+o)/(s-o),this.cameraR.projectionMatrix.copy(Em)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Tm),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Mm)}}class Am{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Na(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Na();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}const Rm=new $o,Lm=new Qo,Cm=new $o,Pm=new $o;class Dm extends ed{constructor(){super(),this.type="AudioListener",this.context=vm.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Am}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null===this.filter?this.gain.disconnect(this.context.destination):(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,a=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Rm,Lm,Cm),Pm.set(0,0,-1).applyQuaternion(Lm),t.positionX){const e=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Rm.x,e),t.positionY.linearRampToValueAtTime(Rm.y,e),t.positionZ.linearRampToValueAtTime(Rm.z,e),t.forwardX.linearRampToValueAtTime(Pm.x,e),t.forwardY.linearRampToValueAtTime(Pm.y,e),t.forwardZ.linearRampToValueAtTime(Pm.z,e),t.upX.linearRampToValueAtTime(a.x,e),t.upY.linearRampToValueAtTime(a.y,e),t.upZ.linearRampToValueAtTime(a.z,e)}else t.setPosition(Rm.x,Rm.y,Rm.z),t.setOrientation(Pm.x,Pm.y,Pm.z,a.x,a.y,a.z)}}class Im extends ed{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(!0===this.isPlaying&&(this._progress+=n(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress%=this.duration||this.buffer.duration),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this)}stop(){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this)}connect(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this)}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this)}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const zm=new $o,Bm=new Qo,Nm=new $o,Um=new $o;class Hm extends Im{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,a){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=a,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),!0!==this.hasPlaybackControl||!1!==this.isPlaying){this.matrixWorld.decompose(zm,Bm,Nm),Um.set(0,0,1).applyQuaternion(Bm);const e=this.panner;if(e.positionX){const t=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(zm.x,t),e.positionY.linearRampToValueAtTime(zm.y,t),e.positionZ.linearRampToValueAtTime(zm.z,t),e.orientationX.linearRampToValueAtTime(Um.x,t),e.orientationY.linearRampToValueAtTime(Um.y,t),e.orientationZ.linearRampToValueAtTime(Um.z,t)}else e.setPosition(zm.x,zm.y,zm.z),e.setOrientation(Um.x,Um.y,Um.z)}}}class Om{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let a=0;a<t.length;a++)e+=t[a];return e/t.length}}class Fm{constructor(e,t,a){this.binding=e,this.valueSize=a;let r,i,n;"quaternion"===t?(r=this._slerp,i=this._slerpAdditive,n=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*a),this._workIndex=5):"string"===t||"bool"===t?(r=this._select,i=this._select,n=this._setAdditiveIdentityOther,this.buffer=Array(5*a)):(r=this._lerp,i=this._lerpAdditive,n=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*a)),this._mixBufferRegion=r,this._mixBufferRegionAdditive=i,this._setIdentity=n,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const a=this.buffer,r=this.valueSize,n=e*r+r;let i=this.cumulativeWeight;if(0===i){for(let e=0;e!==r;++e)a[n+e]=a[e];i=t}else{i+=t;const e=t/i;this._mixBufferRegion(a,n,0,e,r)}this.cumulativeWeight=i}accumulateAdditive(e){const t=this.buffer,a=this.valueSize,r=a*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,r,0,e,a),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,a=this.buffer,r=e*t+t,i=this.cumulativeWeight,n=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,1>i){const e=t*this._origIndex;this._mixBufferRegion(a,r,e,1-i,t)}0<n&&this._mixBufferRegionAdditive(a,r,this._addIndex*t,1,t);for(let n=t;n!==t+t;++n)if(a[n]!==a[n+t]){o.setValue(a,r);break}}saveOriginalState(){const e=this.binding,t=this.buffer,a=this.valueSize,r=a*this._origIndex;e.getValue(t,r);for(let e=a;e!==r;++e)t[e]=t[r+e%a];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let a=e;a<t;a++)this.buffer[a]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let a=0;a<this.valueSize;a++)this.buffer[t+a]=this.buffer[e+a]}_select(e,a,r,i,t){if(.5<=i)for(let n=0;n!==t;++n)e[a+n]=e[r+n]}_slerp(e,a,r,i){Qo.slerpFlat(e,a,e,a,e,r,i)}_slerpAdditive(e,a,r,i,t){const n=this._workIndex*t;Qo.multiplyQuaternionsFlat(e,n,e,a,e,r),Qo.slerpFlat(e,a,e,a,e,n,i)}_lerp(e,a,r,n,t){for(let o=0;o!==t;++o){const t=a+o;e[t]=e[t]*(1-n)+e[r+o]*n}}_lerpAdditive(e,a,r,n,t){for(let o=0;o!==t;++o){const t=a+o;e[t]+=e[r+o]*n}}}const Gm="\\[\\]\\.:\\/",Vm=/[\[\]\.:\/]/g,km="[^"+Gm+"]",Wm="[^"+Gm.replace("\\.","")+"]",jm=/((?:WC+[\/:])*)/.source.replace("WC",km),qm=/(WCOD+)?/.source.replace("WCOD",Wm),Xm=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",km),Ym=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",km),Zm=new RegExp("^"+jm+qm+Xm+Ym+"$"),Km=["material","materials","bones"];class Jm{constructor(e,t,a){this.path=t,this.parsedPath=a||Jm.parseTrackName(t),this.node=Jm.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,a){return e&&e.isAnimationObjectGroup?new Jm.Composite(e,t,a):new Jm(e,t,a)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(Vm,"")}static parseTrackName(e){const t=Zm.exec(e);if(null===t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const a={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=a.nodeName&&a.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){const e=a.nodeName.substring(r+1);-1!==Km.indexOf(e)&&(a.nodeName=a.nodeName.substring(0,r),a.objectName=e)}if(null===a.propertyName||0===a.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return a}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const a=e.skeleton.getBoneByName(t);if(void 0!==a)return a}if(e.children){const a=function(e){for(let r=0;r<e.length;r++){const i=e[r];if(i.name===t||i.uuid===t)return i;const n=a(i.children);if(n)return n}return null},r=a(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const a=this.resolvedProperty;for(let r=0,i=a.length;r!==i;++r)e[t++]=a[r]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const a=this.resolvedProperty;for(let r=0,i=a.length;r!==i;++r)a[r]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const a=this.resolvedProperty;for(let r=0,i=a.length;r!==i;++r)a[r]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const a=this.resolvedProperty;for(let r=0,i=a.length;r!==i;++r)a[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,a=t.objectName,r=t.propertyName;let i=t.propertyIndex;if(e||(e=Jm.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(a){let r=t.objectIndex;switch(a){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===r){r=t;break}break;default:if(void 0===e[a])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[a];}if(void 0!==r){if(void 0===e[r])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[r]}}const n=e[r];if(void 0===n){const a=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+a+"."+r+" but it wasn't found.",e)}let o=this.Versioning.None;this.targetObject=e,void 0===e.needsUpdate?void 0!==e.matrixWorldNeedsUpdate&&(o=this.Versioning.MatrixWorldNeedsUpdate):o=this.Versioning.NeedsUpdate;let s=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===r){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[i]&&(i=e.morphTargetDictionary[i])}else return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this)}s=this.BindingType.ArrayElement,this.resolvedProperty=n,this.propertyIndex=i}else void 0!==n.fromArray&&void 0!==n.toArray?(s=this.BindingType.HasFromToArray,this.resolvedProperty=n):Array.isArray(n)?(s=this.BindingType.EntireArray,this.resolvedProperty=n):this.propertyName=r;this.getValue=this.GetterByBindingType[s],this.setValue=this.SetterByBindingTypeAndVersioning[s][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Jm.Composite=class{constructor(e,t,a){const r=a||Jm.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();const a=this._targetGroup.nCachedObjects_,r=this._bindings[a];void 0!==r&&r.getValue(e,t)}setValue(e,t){const a=this._bindings;for(let r=this._targetGroup.nCachedObjects_,i=a.length;r!==i;++r)a[r].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,a=e.length;t!==a;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,a=e.length;t!==a;++t)e[t].unbind()}},Jm.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Jm.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Jm.prototype.GetterByBindingType=[Jm.prototype._getValue_direct,Jm.prototype._getValue_array,Jm.prototype._getValue_arrayElement,Jm.prototype._getValue_toArray],Jm.prototype.SetterByBindingTypeAndVersioning=[[Jm.prototype._setValue_direct,Jm.prototype._setValue_direct_setNeedsUpdate,Jm.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Jm.prototype._setValue_array,Jm.prototype._setValue_array_setNeedsUpdate,Jm.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Jm.prototype._setValue_arrayElement,Jm.prototype._setValue_arrayElement_setNeedsUpdate,Jm.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Jm.prototype._setValue_fromArray,Jm.prototype._setValue_fromArray_setNeedsUpdate,Jm.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Qm{constructor(){this.uuid=l(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let t=0,a=arguments.length;t!==a;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,a=this._paths,r=this._parsedPaths,i=this._bindings,n=i.length;let o=e.length,s=this.nCachedObjects_,d;for(let l=0,p=arguments.length;l!==p;++l){const p=arguments[l],c=p.uuid;let u=t[c];if(void 0===u){u=o++,t[c]=u,e.push(p);for(let e=0;e!==n;++e)i[e].push(new Jm(p,a[e],r[e]))}else if(u<s){d=e[u];const o=--s,l=e[o];t[l.uuid]=u,e[u]=l,t[c]=o,e[o]=p;for(let e=0;e!==n;++e){const t=i[e],n=t[o];let s=t[u];t[u]=n,void 0===s&&(s=new Jm(p,a[e],r[e])),t[o]=s}}else e[u]!==d&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=s}remove(){const e=this._objects,t=this._indicesByUUID,a=this._bindings,r=a.length;let n=this.nCachedObjects_;for(let o=0,i=arguments.length;o!==i;++o){const i=arguments[o],s=i.uuid,d=t[s];if(void 0!==d&&d>=n){const o=n++,l=e[o];t[l.uuid]=d,e[d]=l,t[s]=o,e[o]=i;for(let e=0;e!==r;++e){const t=a[e],r=t[o],i=t[d];t[d]=r,t[o]=i}}}this.nCachedObjects_=n}uncache(){const e=this._objects,t=this._indicesByUUID,a=this._bindings,r=a.length;let n=this.nCachedObjects_,i=e.length;for(let o=0,s=arguments.length;o!==s;++o){const s=arguments[o],d=s.uuid,l=t[d];if(void 0!==l)if(delete t[d],l<n){const o=--n,s=e[o],d=--i,p=e[d];t[s.uuid]=l,e[l]=s,t[p.uuid]=o,e[o]=p,e.pop();for(let e=0;e!==r;++e){const t=a[e],r=t[o],i=t[d];t[l]=r,t[o]=i,t.pop()}}else{const n=--i,o=e[n];0<n&&(t[o.uuid]=l),e[l]=o,e.pop();for(let e=0;e!==r;++e){const t=a[e];t[l]=t[n],t.pop()}}}this.nCachedObjects_=n}subscribe_(e,t){const a=this._bindingsIndicesByPath;let r=a[e];const i=this._bindings;if(void 0!==r)return i[r];const n=this._paths,o=this._parsedPaths,s=this._objects,d=s.length,l=this.nCachedObjects_,p=Array(d);r=i.length,a[e]=r,n.push(e),o.push(t),i.push(p);for(let a=l,r=s.length;a!==r;++a){const r=s[a];p[a]=new Jm(r,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,a=t[e];if(void 0!==a){const r=this._paths,i=this._parsedPaths,n=this._bindings,o=n.length-1,s=n[o],d=e[o];t[d]=a,n[a]=s,n.pop(),i[a]=i[o],i.pop(),r[a]=r[o],r.pop()}}}Qm.prototype.isAnimationObjectGroup=!0;class $m{constructor(e,t,a=null,r=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=a,this.blendMode=r;const n=t.tracks,o=n.length,s=Array(o),d={endingStart:Dn,endingEnd:Dn};for(let l=0;l!==o;++l){const e=n[l].createInterpolant(null);s[l]=e,e.settings=d}this._interpolantSettings=d,this._interpolants=s,this._propertyBindings=Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=An,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=Infinity,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,a){if(e.fadeOut(t),this.fadeIn(t),a){const a=this._clip.duration,r=e._clip.duration;e.warp(1,r/a,t),this.warp(a/r,1,t)}return this}crossFadeTo(e,t,a){return e.crossFadeFrom(this,t,a)}stopFading(){const e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,a){const r=this._mixer,i=r.time,n=this.timeScale;let o=this._timeScaleInterpolant;null===o&&(o=r._lendControlInterpolant(),this._timeScaleInterpolant=o);const s=o.parameterPositions,d=o.sampleValues;return s[0]=i,s[1]=i+a,d[0]=e/n,d[1]=t/n,this}stopWarping(){const e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,a,r){if(!this.enabled)return void this._updateWeight(e);const i=this._startTime;if(null!==i){const r=(e-i)*a;if(0>r||0===a)return;this._startTime=null,t=a*r}t*=this._updateTimeScale(e);const n=this._updateTime(t),o=this._updateWeight(e);if(0<o){const e=this._interpolants,t=this._propertyBindings;switch(this.blendMode){case Nn:for(let a=0,r=e.length;a!==r;++a)e[a].evaluate(n),t[a].accumulateAdditive(o);break;case Bn:default:for(let a=0,i=e.length;a!==i;++a)e[a].evaluate(n),t[a].accumulate(r,o);}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const a=this._weightInterpolant;if(null!==a){const r=a.evaluate(e)[0];t*=r,e>a.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const a=this._timeScaleInterpolant;if(null!==a){const r=a.evaluate(e)[0];t*=r,e>a.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,a=this.loop;let r=this.time+e,i=this._loopCount;const n=a===Rn;if(0===e)return-1===i?r:n&&1==(1&i)?t-r:r;if(a===wn){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));handle_stop:{if(r>=t)r=t;else if(0>r)r=0;else{this.time=r;break handle_stop}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:0>e?-1:1})}}else{if(-1===i&&(0<=e?(i=0,this._setEndings(!0,0===this.repetitions,n)):this._setEndings(0===this.repetitions,!0,n)),r>=t||0>r){const a=sr(r/t);r-=t*a,i+=dr(a);const o=this.repetitions-i;if(0>=o)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=0<e?t:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:0<e?1:-1});else{if(1==o){const t=0>e;this._setEndings(t,!t,n)}else this._setEndings(!1,!1,n);this._loopCount=i,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=r;if(n&&1==(1&i))return t-r}return r}_setEndings(e,t,a){const r=this._interpolantSettings;a?(r.endingStart=In,r.endingEnd=In):(r.endingStart=e?this.zeroSlopeAtStart?In:Dn:zn,r.endingEnd=t?this.zeroSlopeAtEnd?In:Dn:zn)}_scheduleFading(e,t,a){const r=this._mixer,i=r.time;let n=this._weightInterpolant;null===n&&(n=r._lendControlInterpolant(),this._weightInterpolant=n);const o=n.parameterPositions,s=n.sampleValues;return o[0]=i,s[0]=t,o[1]=i+e,s[1]=a,this}}class ef extends To{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const a=e._localRoot||this._root,r=e._clip.tracks,n=r.length,o=e._propertyBindings,s=e._interpolants,d=a.uuid,i=this._bindingsByRootAndName;let l=i[d];void 0===l&&(l={},i[d]=l);for(let p=0;p!==n;++p){const e=r[p],i=e.name;let n=l[i];if(void 0!==n)++n.referenceCount,o[p]=n;else{if(n=o[p],void 0!==n){null===n._cacheIndex&&(++n.referenceCount,this._addInactiveBinding(n,d,i));continue}const r=t&&t._propertyBindings[p].binding.parsedPath;n=new Fm(Jm.create(a,i,r),e.ValueTypeName,e.getValueSize()),++n.referenceCount,this._addInactiveBinding(n,d,i),o[p]=n}s[p].resultBuffer=n.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){const t=(e._localRoot||this._root).uuid,a=e._clip.uuid,r=this._actionsByClip[a];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,a,t)}const t=e._propertyBindings;for(let e=0,a=t.length;e!==a;++e){const a=t[e];0==a.useCount++&&(this._lendBinding(a),a.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let e=0,a=t.length;e!==a;++e){const a=t[e];0==--a.useCount&&(a.restoreOriginalState(),this._takeBackBinding(a))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return null!==t&&t<this._nActiveActions}_addInactiveAction(e,t,a){const r=this._actions,i=this._actionsByClip;let n=i[t];if(void 0===n)n={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=n;else{const t=n.knownActions;e._byClipCacheIndex=t.length,t.push(e)}e._cacheIndex=r.length,r.push(e),n.actionByRoot[a]=e}_removeInactiveAction(e){const t=this._actions,a=t[t.length-1],r=e._cacheIndex;a._cacheIndex=r,t[r]=a,t.pop(),e._cacheIndex=null;const i=e._clip.uuid,n=this._actionsByClip,o=n[i],s=o.knownActions,d=s[s.length-1],l=e._byClipCacheIndex;d._byClipCacheIndex=l,s[l]=d,s.pop(),e._byClipCacheIndex=null;const p=o.actionByRoot,c=(e._localRoot||this._root).uuid;delete p[c],0===s.length&&delete n[i],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let a=0,r=t.length;a!==r;++a){const e=t[a];0==--e.referenceCount&&this._removeInactiveBinding(e)}}_lendAction(e){const t=this._actions,a=e._cacheIndex,r=this._nActiveActions++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=a,t[a]=i}_takeBackAction(e){const t=this._actions,a=e._cacheIndex,r=--this._nActiveActions,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=a,t[a]=i}_addInactiveBinding(e,t,a){const r=this._bindingsByRootAndName,i=this._bindings;let n=r[t];void 0===n&&(n={},r[t]=n),n[a]=e,e._cacheIndex=i.length,i.push(e)}_removeInactiveBinding(e){const t=this._bindings,a=e.binding,r=a.rootNode.uuid,i=a.path,n=this._bindingsByRootAndName,o=n[r],s=t[t.length-1],d=e._cacheIndex;s._cacheIndex=d,t[d]=s,t.pop(),delete o[i],0===Object.keys(o).length&&delete n[r]}_lendBinding(e){const t=this._bindings,a=e._cacheIndex,r=this._nActiveBindings++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=a,t[a]=i}_takeBackBinding(e){const t=this._bindings,a=e._cacheIndex,r=--this._nActiveBindings,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=a,t[a]=i}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let a=e[t];return void 0===a&&(a=new bu(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),a.__cacheIndex=t,e[t]=a),a}_takeBackControlInterpolant(e){const t=this._controlInterpolants,a=e.__cacheIndex,r=--this._nActiveControlInterpolants,i=t[r];e.__cacheIndex=r,t[r]=e,i.__cacheIndex=a,t[a]=i}clipAction(e,t,a){const r=t||this._root,i=r.uuid;let n="string"==typeof e?Pu.findByName(r,e):e;const o=null===n?e:n.uuid,s=this._actionsByClip[o];let d=null;if(void 0===a&&(null===n?a=Bn:a=n.blendMode),void 0!==s){const e=s.actionByRoot[i];if(void 0!==e&&e.blendMode===a)return e;d=s.knownActions[0],null===n&&(n=d._clip)}if(null===n)return null;const l=new $m(this,n,t,a);return this._bindAction(l,d),this._addInactiveAction(l,o,i),l}existingAction(e,t){const a=t||this._root,r=a.uuid,i="string"==typeof e?Pu.findByName(a,e):e,n=i?i.uuid:e,o=this._actionsByClip[n];return void 0===o?null:o.actionByRoot[r]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let a=t-1;0<=a;--a)e[a].stop();return this}update(e){e*=this.timeScale;const t=this._actions,a=this._nActiveActions,r=this.time+=e,n=Za(e),o=this._accuIndex^=1;for(let s=0;s!==a;++s){const a=t[s];a._update(r,e,n,o)}const s=this._bindings,d=this._nActiveBindings;for(let t=0;t!==d;++t)s[t].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,a=e.uuid,r=this._actionsByClip,i=r[a];if(void 0!==i){const e=i.knownActions;for(let a=0,r=e.length;a!==r;++a){const r=e[a];this._deactivateAction(r);const i=r._cacheIndex,n=t[t.length-1];r._cacheIndex=null,r._byClipCacheIndex=null,n._cacheIndex=i,t[i]=n,t.pop(),this._removeInactiveBindingsForAction(r)}delete r[a]}}uncacheRoot(e){const t=e.uuid,a=this._actionsByClip;for(const r in a){const e=a[r].actionByRoot,i=e[t];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}const r=this._bindingsByRootAndName,i=r[t];if(void 0!==i)for(const e in i){const t=i[e];t.restoreOriginalState(),this._removeInactiveBinding(t)}}uncacheAction(e,t){const a=this.existingAction(e,t);null!==a&&(this._deactivateAction(a),this._removeInactiveAction(a))}}ef.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class tf{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new tf(void 0===this.value.clone?this.value:this.value.clone())}}class af extends pp{constructor(e,t,a=1){super(e,t),this.meshPerAttribute=a}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}af.prototype.isInstancedInterleavedBuffer=!0;class rf{constructor(e,t,a,r,i){this.buffer=e,this.type=t,this.itemSize=a,this.elementSize=r,this.count=i,this.version=0}set needsUpdate(e){!0===e&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}rf.prototype.isGLBufferAttribute=!0;class nf{constructor(e,t,a=0,r=Infinity){this.ray=new Rs(e,t),this.near=a,this.far=r,this.camera=null,this.layers=new Fs,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,a=[]){return Ha(e,this,a,t),a.sort(Ua),a}intersectObjects(e,t=!0,a=[]){for(let r=0,i=e.length;r<i;r++)Ha(e[r],this,a,t);return a.sort(Ua),a}}class of{constructor(e=1,t=0,a=0){return this.radius=e,this.phi=t,this.theta=a,this}set(e,t,a){return this.radius=e,this.phi=t,this.theta=a,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){const e=1e-6;return this.phi=n(e,o(s-e,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,a){return this.radius=r(e*e+t*t+a*a),0===this.radius?(this.theta=0,this.phi=0):(this.theta=er(e,a),this.phi=$a(p(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class sf{constructor(e=1,t=0,a=0){return this.radius=e,this.theta=t,this.y=a,this}set(e,t,a){return this.radius=e,this.theta=t,this.y=a,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,a){return this.radius=r(e*e+a*a),this.theta=er(e,a),this.y=t,this}clone(){return new this.constructor().copy(this)}}const df=new Co;class lf{constructor(e=new Co(+Infinity,+Infinity),t=new Co(-Infinity,-Infinity)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,a=e.length;t<a;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const a=df.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(a),this.max.copy(e).add(a),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=+Infinity,this.max.x=this.max.y=-Infinity,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){const t=df.copy(e).clamp(this.min,this.max);return t.sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}lf.prototype.isBox2=!0;const pf=new $o,cf=new $o;class uf{constructor(e=new $o,t=new $o){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,a){pf.subVectors(e,this.start),cf.subVectors(this.end,this.start);const r=cf.dot(cf),i=cf.dot(pf);let n=i/r;return a&&(n=p(n,0,1)),n}closestPointToPoint(e,a,r){const i=this.closestPointToPointParameter(e,a);return this.delta(r).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const mf=new $o;class ff extends ed{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const a=new Bd,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,i=1,n=32;a<n;a++,i++){const e=2*(a/n*s),t=2*(i/n*s);r.push(rr(e),ar(e),1,rr(t),ar(t),1)}a.setAttribute("position",new wd(r,3));const i=new Yp({fog:!1,toneMapped:!1});this.cone=new rc(a,i),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,a=e*t(this.light.angle);this.cone.scale.set(a,a,e),mf.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(mf),void 0===this.color?this.cone.material.color.copy(this.light.color):this.cone.material.color.set(this.color)}}const gf=new $o,hf=new Ls,yf=new Ls;class xf extends rc{constructor(e){const t=Oa(e),a=new Bd,r=[],n=[],o=new Oo(0,0,1),s=new Oo(0,1,0);for(let a=0;a<t.length;a++){const e=t[a];e.parent&&e.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),n.push(o.r,o.g,o.b),n.push(s.r,s.g,s.b))}a.setAttribute("position",new wd(r,3)),a.setAttribute("color",new wd(n,3));const i=new Yp({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(a,i),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,a=this.geometry,r=a.getAttribute("position");yf.copy(this.root.matrixWorld).invert();for(let a=0,i=0;a<t.length;a++){const e=t[a];e.parent&&e.parent.isBone&&(hf.multiplyMatrices(yf,e.matrixWorld),gf.setFromMatrixPosition(hf),r.setXYZ(i,gf.x,gf.y,gf.z),hf.multiplyMatrices(yf,e.parent.matrixWorld),gf.setFromMatrixPosition(hf),r.setXYZ(i+1,gf.x,gf.y,gf.z),i+=2)}a.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}class vf extends $d{constructor(e,t,a){const r=new eu(t,4,2),i=new fd({wireframe:!0,fog:!1,toneMapped:!1});super(r,i),this.light=e,this.light.updateMatrixWorld(),this.color=a,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0===this.color?this.material.color.copy(this.light.color):this.material.color.set(this.color)}}const _f=new $o,bf=new Oo,Sf=new Oo;class Mf extends ed{constructor(e,t,a){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=a;const r=new Jc(t);r.rotateY(.5*s),this.material=new fd({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const i=r.getAttribute("position"),n=new Float32Array(3*i.count);r.setAttribute("color",new yd(n,3)),this.add(new $d(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");bf.copy(this.light.color),Sf.copy(this.light.groundColor);for(let e=0,a=t.count;e<a;e++){const r=e<a/2?bf:Sf;t.setXYZ(e,r.r,r.g,r.b)}t.needsUpdate=!0}e.lookAt(_f.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Tf extends rc{constructor(e=10,t=10,a=4473924,r=8947848){a=new Oo(a),r=new Oo(r);const n=e/2,o=[],s=[];for(let d=0,i=0,l=-n;d<=t;d++,l+=e/t){o.push(-n,0,l,n,0,l),o.push(l,0,-n,l,0,n);const e=d===t/2?a:r;e.toArray(s,i),i+=3,e.toArray(s,i),i+=3,e.toArray(s,i),i+=3,e.toArray(s,i),i+=3}const i=new Bd;i.setAttribute("position",new wd(o,3)),i.setAttribute("color",new wd(s,3));const d=new Yp({vertexColors:!0,toneMapped:!1});super(i,d),this.type="GridHelper"}}class Ef extends rc{constructor(e=10,t=16,a=8,i=64,n=4473924,o=8947848){n=new Oo(n),o=new Oo(o);const d=[],l=[];for(let r=0;r<=t;r++){const a=r/t*(2*s),i=ar(a)*e,p=rr(a)*e;d.push(0,0,0),d.push(i,0,p);const c=1&r?n:o;l.push(c.r,c.g,c.b),l.push(c.r,c.g,c.b)}for(let p=0;p<=a;p++){const t=1&p?n:o,c=e-e/a*p;for(let e=0;e<i;e++){let a=e/i*(2*s),r=ar(a)*c,n=rr(a)*c;d.push(r,0,n),l.push(t.r,t.g,t.b),a=(e+1)/i*(2*s),r=ar(a)*c,n=rr(a)*c,d.push(r,0,n),l.push(t.r,t.g,t.b)}}const r=new Bd;r.setAttribute("position",new wd(d,3)),r.setAttribute("color",new wd(l,3));const p=new Yp({vertexColors:!0,toneMapped:!1});super(r,p),this.type="PolarGridHelper"}}const wf=new $o,Af=new $o,Rf=new $o;class Lf extends ed{constructor(e,t,a){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=a,void 0===t&&(t=1);let r=new Bd;r.setAttribute("position",new wd([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const i=new Yp({fog:!1,toneMapped:!1});this.lightPlane=new ec(r,i),this.add(this.lightPlane),r=new Bd,r.setAttribute("position",new wd([0,0,0,0,0,1],3)),this.targetLine=new ec(r,i),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){wf.setFromMatrixPosition(this.light.matrixWorld),Af.setFromMatrixPosition(this.light.target.matrixWorld),Rf.subVectors(Af,wf),this.lightPlane.lookAt(Af),void 0===this.color?(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)):(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)),this.targetLine.lookAt(Af),this.targetLine.scale.z=Rf.length()}}const Cf=new $o,Pf=new rl;class Df extends rc{constructor(e){function t(e,t,a){r(e,a),r(t,a)}function r(e,t){n.push(0,0,0),o.push(t.r,t.g,t.b),void 0===s[e]&&(s[e]=[]),s[e].push(n.length/3-1)}const a=new Bd,i=new Yp({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],o=[],s={},d=new Oo(16755200),l=new Oo(16711680),p=new Oo(43775),c=new Oo(16777215),u=new Oo(3355443);t("n1","n2",d),t("n2","n4",d),t("n4","n3",d),t("n3","n1",d),t("f1","f2",d),t("f2","f4",d),t("f4","f3",d),t("f3","f1",d),t("n1","f1",d),t("n2","f2",d),t("n3","f3",d),t("n4","f4",d),t("p","n1",l),t("p","n2",l),t("p","n3",l),t("p","n4",l),t("u1","u2",p),t("u2","u3",p),t("u3","u1",p),t("c","t",c),t("p","c",u),t("cn1","cn2",u),t("cn3","cn4",u),t("cf1","cf2",u),t("cf3","cf4",u),a.setAttribute("position",new wd(n,3)),a.setAttribute("color",new wd(o,3)),super(a,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update()}update(){const e=this.geometry,t=this.pointMap,a=1,r=1;Pf.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Fa("c",t,e,Pf,0,0,-1),Fa("t",t,e,Pf,0,0,1),Fa("n1",t,e,Pf,-a,-r,-1),Fa("n2",t,e,Pf,a,-r,-1),Fa("n3",t,e,Pf,-a,r,-1),Fa("n4",t,e,Pf,a,r,-1),Fa("f1",t,e,Pf,-a,-r,1),Fa("f2",t,e,Pf,a,-r,1),Fa("f3",t,e,Pf,-a,r,1),Fa("f4",t,e,Pf,a,r,1),Fa("u1",t,e,Pf,.7*a,1.1*r,-1),Fa("u2",t,e,Pf,.7*-a,1.1*r,-1),Fa("u3",t,e,Pf,0,2*r,-1),Fa("cf1",t,e,Pf,-a,0,1),Fa("cf2",t,e,Pf,a,0,1),Fa("cf3",t,e,Pf,0,-r,1),Fa("cf4",t,e,Pf,0,r,1),Fa("cn1",t,e,Pf,-a,0,-1),Fa("cn2",t,e,Pf,a,0,-1),Fa("cn3",t,e,Pf,0,-r,-1),Fa("cn4",t,e,Pf,0,r,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}const If=new as;class zf extends rc{constructor(e,t=16776960){const a=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),i=new Bd;i.setIndex(new yd(a,1)),i.setAttribute("position",new yd(r,3)),super(i,new Yp({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&If.setFromObject(this.object),!If.isEmpty()){const e=If.min,t=If.max,a=this.geometry.attributes.position,r=a.array;r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=e.x,r[4]=t.y,r[5]=t.z,r[6]=e.x,r[7]=e.y,r[8]=t.z,r[9]=t.x,r[10]=e.y,r[11]=t.z,r[12]=t.x,r[13]=t.y,r[14]=e.z,r[15]=e.x,r[16]=t.y,r[17]=e.z,r[18]=e.x,r[19]=e.y,r[20]=e.z,r[21]=t.x,r[22]=e.y,r[23]=e.z,a.needsUpdate=!0,this.geometry.computeBoundingSphere()}}setFromObject(e){return this.object=e,this.update(),this}copy(e){return rc.prototype.copy.call(this,e),this.object=e.object,this}}class Bf extends rc{constructor(e,t=16776960){const a=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Bd;r.setIndex(new yd(a,1)),r.setAttribute("position",new wd([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(r,new Yp({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class Nf extends ec{constructor(e,t=1,a=16776960){const r=a,i=new Bd;i.setAttribute("position",new wd([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),i.computeBoundingSphere(),super(i,new Yp({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const n=new Bd;n.setAttribute("position",new wd([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),n.computeBoundingSphere(),this.add(new $d(n,new fd({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;1e-8>dr(t)&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=0>t?Sr:br,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}}const Uf=new $o;let Hf,Of;class Ff extends ed{constructor(e=new $o(0,0,1),t=new $o(0,0,0),a=1,r=16776960,i=.2*a,n=.2*i){super(),this.type="ArrowHelper",void 0==Hf&&(Hf=new Bd,Hf.setAttribute("position",new wd([0,0,0,0,1,0],3)),Of=new Nc(0,.5,1,5,1),Of.translate(0,-.5,0)),this.position.copy(t),this.line=new ec(Hf,new Yp({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new $d(Of,new fd({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(a,i,n)}setDirection(e){if(.99999<e.y)this.quaternion.set(0,0,0,1);else if(-.99999>e.y)this.quaternion.set(1,0,0,0);else{Uf.set(e.z,0,-e.x).normalize();const t=$a(e.y);this.quaternion.setFromAxisAngle(Uf,t)}}setLength(e,t=.2*e,a=.2*t){this.line.scale.set(1,n(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(a,t,a),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class Gf extends rc{constructor(e=1){const t=new Bd;t.setAttribute("position",new wd([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],3)),t.setAttribute("color",new wd([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));const a=new Yp({vertexColors:!0,toneMapped:!1});super(t,a),this.type="AxesHelper"}setColors(e,t,a){const r=new Oo,i=this.geometry.attributes.color.array;return r.set(e),r.toArray(i,0),r.toArray(i,3),r.set(t),r.toArray(i,6),r.toArray(i,9),r.set(a),r.toArray(i,12),r.toArray(i,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Vf{constructor(){this.type="ShapePath",this.color=new Oo,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Dc,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,a,r){return this.currentPath.quadraticCurveTo(e,t,a,r),this}bezierCurveTo(e,t,a,r,i,n){return this.currentPath.bezierCurveTo(e,t,a,r,i,n),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e,t){function a(e){const t=[];for(let a=0,r=e.length;a<r;a++){const r=e[a],i=new jc;i.curves=r.curves,t.push(i)}return t}function r(e,t){const a=t.length;let r=!1;for(let i=a-1,n=0;n<a;i=n++){let a=t[i],o=t[n],s=o.x-a.x,d=o.y-a.y;if(dr(d)>Qa){if(0>d&&(a=t[n],s=-s,o=t[i],d=-d),e.y<a.y||e.y>o.y)continue;if(e.y!==a.y){const t=d*(e.x-a.x)-s*(e.y-a.y);if(0==t)return!0;if(0>t)continue;r=!r}else if(e.x===a.x)return!0}else{if(e.y!==a.y)continue;if(o.x<=e.x&&e.x<=a.x||a.x<=e.x&&e.x<=o.x)return!0}}return r}const n=Xc.isClockWise,o=this.subPaths;if(0===o.length)return[];if(!0===t)return a(o);let s,d,l;const p=[];if(1===o.length)return d=o[0],l=new jc,l.curves=d.curves,p.push(l),p;let c=!n(o[0].getPoints());c=e?!c:c;const i=[],u=[];let m=[],f=0,g;u[f]=void 0,m[f]=[];for(let a=0,r=o.length;a<r;a++)d=o[a],g=d.getPoints(),s=n(g),s=e?!s:s,s?(!c&&u[f]&&f++,u[f]={s:new jc,p:g},u[f].s.curves=d.curves,c&&f++,m[f]=[]):m[f].push({h:d,p:g[0]});if(!u[0])return a(o);if(1<u.length){let e=!1,t=0;for(let e=0,t=u.length;e<t;e++)i[e]=[];for(let a=0,n=u.length;a<n;a++){const n=m[a];for(let o=0;o<n.length;o++){const s=n[o];let d=!0;for(let n=0;n<u.length;n++)r(s.p,u[n].p)&&(a!==n&&t++,d?(d=!1,i[n].push(s)):e=!0);d&&i[a].push(s)}}0<t&&!1==e&&(m=i)}let h;for(let a=0,r=u.length;a<r;a++){l=u[a].s,p.push(l),h=m[a];for(let e=0,t=h.length;e<t;e++)l.holes.push(h[e].h)}return p}}class kf{static toHalfFloat(t){65504<dr(t)&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),t=p(t,-65504,65504),jf[0]=t;const a=qf[0],r=511&a>>23;return Xf[r]+((8388607&a)>>Yf[r])}static fromHalfFloat(e){const t=e>>10;return qf[0]=Zf[Jf[t]+(1023&e)]+Kf[t],jf[0]}}const Wf=new ArrayBuffer(4),jf=new Float32Array(Wf),qf=new Uint32Array(Wf),Xf=new Uint32Array(512),Yf=new Uint32Array(512);for(let t=0;256>t;++t){const a=t-127;-27>a?(Xf[t]=0,Xf[256|t]=32768,Yf[t]=24,Yf[256|t]=24):-14>a?(Xf[t]=1024>>-a-14,Xf[256|t]=32768|1024>>-a-14,Yf[t]=-a-1,Yf[256|t]=-a-1):15>=a?(Xf[t]=a+15<<10,Xf[256|t]=32768|a+15<<10,Yf[t]=13,Yf[256|t]=13):128>a?(Xf[t]=31744,Xf[256|t]=64512,Yf[t]=24,Yf[256|t]=24):(Xf[t]=31744,Xf[256|t]=64512,Yf[t]=13,Yf[256|t]=13)}const Zf=new Uint32Array(2048),Kf=new Uint32Array(64),Jf=new Uint32Array(64);for(let t=1;1024>t;++t){let a=t<<13,r=0;for(;0==(8388608&a);)a<<=1,r-=8388608;a&=-8388609,r+=947912704,Zf[t]=a|r}for(let t=1024;2048>t;++t)Zf[t]=939524096+(t-1024<<13);for(let t=1;31>t;++t)Kf[t]=t<<23;Kf[31]=1199570944,Kf[32]=2147483648;for(let t=33;63>t;++t)Kf[t]=2147483648+(t-32<<23);Kf[63]=3347054592;for(let t=1;64>t;++t)32!==t&&(Jf[t]=1024);const Qf=0,$f=1,eg=0,tg=1,ag=2;class rg extends pc{constructor(e,t){console.warn("THREE.PointCloud has been renamed to THREE.Points."),super(e,t)}}class ig extends Ap{constructor(e){console.warn("THREE.Particle has been renamed to THREE.Sprite."),super(e)}}class ng extends pc{constructor(e,t){console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),super(e,t)}}class og extends nc{constructor(e){console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),super(e)}}class sg extends nc{constructor(e){console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),super(e)}}class dg extends nc{constructor(e){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),super(e)}}class lg extends $o{constructor(e,t,a){console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),super(e,t,a)}}class pg extends yd{constructor(e,t){console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),super(e,t),this.setUsage(mo)}}class cg extends xd{constructor(e,t){console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),super(e,t)}}class ug extends vd{constructor(e,t){console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),super(e,t)}}class mg extends _d{constructor(e,t){console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),super(e,t)}}class fg extends bd{constructor(e,t){console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),super(e,t)}}class gg extends Sd{constructor(e,t){console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),super(e,t)}}class hg extends Md{constructor(e,t){console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),super(e,t)}}class yg extends Td{constructor(e,t){console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),super(e,t)}}class xg extends wd{constructor(e,t){console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),super(e,t)}}class vg extends Ad{constructor(e,t){console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),super(e,t)}}gc.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(gc.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Dc.prototype.fromPoints=function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)};class _g extends Gf{constructor(e){console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),super(e)}}class bg extends zf{constructor(e,t){console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),super(e,t)}}class Sg extends rc{constructor(e,t){console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),super(new Wc(e.geometry),new Yp({color:void 0===t?16777215:t}))}}Tf.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},xf.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};class Mg extends rc{constructor(e,t){console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),super(new nu(e.geometry),new Yp({color:void 0===t?16777215:t}))}}Bu.prototype.extractUrlBase=function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),pm.extractUrlBase(e)},Bu.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};class Tg extends Uu{constructor(e){console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),super(e)}}class Eg extends Vu{constructor(e){console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),super(e)}}lf.prototype.center=function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},lf.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},lf.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},lf.prototype.size=function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)},as.prototype.center=function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},as.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},as.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},as.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},as.prototype.size=function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)},Os.prototype.toVector3=function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")},_s.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},hl.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},uf.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Po.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},Po.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},Po.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},Po.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},Po.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},Po.prototype.getInverse=function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},Ls.prototype.extractPosition=function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},Ls.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},Ls.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new $o().setFromMatrixColumn(this,3)},Ls.prototype.setRotationFromQuaternion=function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},Ls.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},Ls.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Ls.prototype.multiplyVector4=function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Ls.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},Ls.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},Ls.prototype.crossVector=function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Ls.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},Ls.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},Ls.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},Ls.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},Ls.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},Ls.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Ls.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},Ls.prototype.makeFrustum=function(e,t,a,r,i,n){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,r,a,i,n)},Ls.prototype.getInverse=function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},ml.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},Qo.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},Qo.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},Rs.prototype.isIntersectionBox=function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},Rs.prototype.isIntersectionPlane=function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},Rs.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},cd.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},cd.prototype.barycoordFromPoint=function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},cd.prototype.midpoint=function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},cd.prototypenormal=function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},cd.prototype.plane=function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)},cd.barycoordFromPoint=function(e,t,a,r,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),cd.getBarycoord(e,t,a,r,i)},cd.normal=function(e,t,a,r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),cd.getNormal(e,t,a,r)},jc.prototype.extractAllPoints=function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},jc.prototype.extrude=function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Yc(this,e)},jc.prototype.makeGeometry=function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new $c(this,e)},Co.prototype.fromAttribute=function(e,t,a){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,a)},Co.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},Co.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},$o.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},$o.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},$o.prototype.getPositionFromMatrix=function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},$o.prototype.getScaleFromMatrix=function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},$o.prototype.getColumnFromMatrix=function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},$o.prototype.applyProjection=function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},$o.prototype.fromAttribute=function(e,t,a){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,a)},$o.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},$o.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},jo.prototype.fromAttribute=function(e,t,a){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,a)},jo.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},ed.prototype.getChildByName=function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},ed.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},ed.prototype.translate=function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},ed.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},ed.prototype.applyMatrix=function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(ed.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),$d.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties($d.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),Un},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Np.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},il.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(Wu.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(yd.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===mo},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(mo)}}}),yd.prototype.setDynamic=function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?mo:uo),this},yd.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},yd.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Bd.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},Bd.prototype.addAttribute=function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new yd(arguments[1],arguments[2])))},Bd.prototype.addDrawCall=function(e,t,a){void 0!==a&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},Bd.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},Bd.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},Bd.prototype.removeAttribute=function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},Bd.prototype.applyMatrix=function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(Bd.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),pp.prototype.setDynamic=function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?mo:uo),this},pp.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Yc.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},Yc.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},Yc.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},lp.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},tf.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(md.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Oo}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===Tr}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(al.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),Ht.prototype.clearTarget=function(e,t,a,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,a,r)},Ht.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},Ht.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},Ht.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},Ht.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},Ht.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},Ht.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},Ht.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},Ht.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},Ht.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},Ht.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},Ht.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},Ht.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},Ht.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},Ht.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},Ht.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},Ht.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},Ht.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},Ht.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},Ht.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},Ht.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},Ht.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},Ht.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},Ht.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},Ht.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(Ht.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?Gn:Fn}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}}),Object.defineProperties(Dt.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});class wg extends ll{constructor(e,t,a){console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),super(e,a)}}Object.defineProperties(qo.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Im.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this,a=new _m;return a.load(e,function(e){t.setBuffer(e)}),this},Om.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},sl.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},sl.prototype.clear=function(e,t,a,r){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,a,r)},Go.crossOrigin=void 0,Go.loadTexture=function(e,t,a,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new ku;i.setCrossOrigin(this.crossOrigin);const n=i.load(e,a,void 0,r);return t&&(n.mapping=t),n},Go.loadTextureCube=function(e,t,a,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new Gu;i.setCrossOrigin(this.crossOrigin);const n=i.load(e,a,void 0,r);return t&&(n.mapping=t),n},Go.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},Go.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};const Ag={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};class Rg extends Bd{constructor(){console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"),super()}}class Lg extends Bd{constructor(){console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"),super()}}class Cg extends qo{constructor(e,t,a){console.error("THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the \"samples\" property to greater 0 to enable multisampling."),super(e,t,a),this.samples=4}}class Pg extends Xo{constructor(e,t,a,r){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(e,t,a,r)}}class Dg extends Zo{constructor(e,t,a,r){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(e,t,a,r)}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:pr}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=pr)},"../node_modules/three/examples/jsm/controls/FlyControls.js":(e,t,a)=>{function r(e){e.preventDefault()}a.r(t),a.d(t,{FlyControls:()=>o});var i=a("../node_modules/three/build/three.module.js");const n={type:"change"};class o extends i.EventDispatcher{constructor(e,t){super(),void 0===t&&(console.warn("THREE.FlyControls: The second parameter \"domElement\" is now mandatory."),t=document),this.object=e,this.domElement=t,this.movementSpeed=1,this.rollSpeed=.005,this.dragToLook=!1,this.autoForward=!1;const a=this,o=1e-6,s=new i.Quaternion,d=new i.Vector3;this.tmpQuaternion=new i.Quaternion,this.mouseStatus=0,this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0},this.moveVector=new i.Vector3(0,0,0),this.rotationVector=new i.Vector3(0,0,0),this.keydown=function(e){if(!e.altKey){switch(e.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=.1;break;case"KeyW":this.moveState.forward=1;break;case"KeyS":this.moveState.back=1;break;case"KeyA":this.moveState.left=1;break;case"KeyD":this.moveState.right=1;break;case"KeyR":this.moveState.up=1;break;case"KeyF":this.moveState.down=1;break;case"ArrowUp":this.moveState.pitchUp=1;break;case"ArrowDown":this.moveState.pitchDown=1;break;case"ArrowLeft":this.moveState.yawLeft=1;break;case"ArrowRight":this.moveState.yawRight=1;break;case"KeyQ":this.moveState.rollLeft=1;break;case"KeyE":this.moveState.rollRight=1;}this.updateMovementVector(),this.updateRotationVector()}},this.keyup=function(e){switch(e.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=1;break;case"KeyW":this.moveState.forward=0;break;case"KeyS":this.moveState.back=0;break;case"KeyA":this.moveState.left=0;break;case"KeyD":this.moveState.right=0;break;case"KeyR":this.moveState.up=0;break;case"KeyF":this.moveState.down=0;break;case"ArrowUp":this.moveState.pitchUp=0;break;case"ArrowDown":this.moveState.pitchDown=0;break;case"ArrowLeft":this.moveState.yawLeft=0;break;case"ArrowRight":this.moveState.yawRight=0;break;case"KeyQ":this.moveState.rollLeft=0;break;case"KeyE":this.moveState.rollRight=0;}this.updateMovementVector(),this.updateRotationVector()},this.mousedown=function(e){if(this.dragToLook)this.mouseStatus++;else{switch(e.button){case 0:this.moveState.forward=1;break;case 2:this.moveState.back=1;}this.updateMovementVector()}},this.mousemove=function(e){if(!this.dragToLook||0<this.mouseStatus){const t=this.getContainerDimensions(),a=t.size[0]/2,r=t.size[1]/2;this.moveState.yawLeft=-(e.pageX-t.offset[0]-a)/a,this.moveState.pitchDown=(e.pageY-t.offset[1]-r)/r,this.updateRotationVector()}},this.mouseup=function(e){if(this.dragToLook)this.mouseStatus--,this.moveState.yawLeft=this.moveState.pitchDown=0;else{switch(e.button){case 0:this.moveState.forward=0;break;case 2:this.moveState.back=0;}this.updateMovementVector()}this.updateRotationVector()},this.update=function(e){const t=e*a.movementSpeed,r=e*a.rollSpeed;a.object.translateX(a.moveVector.x*t),a.object.translateY(a.moveVector.y*t),a.object.translateZ(a.moveVector.z*t),a.tmpQuaternion.set(a.rotationVector.x*r,a.rotationVector.y*r,a.rotationVector.z*r,1).normalize(),a.object.quaternion.multiply(a.tmpQuaternion),(d.distanceToSquared(a.object.position)>o||8*(1-s.dot(a.object.quaternion))>o)&&(a.dispatchEvent(n),s.copy(a.object.quaternion),d.copy(a.object.position))},this.updateMovementVector=function(){const e=this.moveState.forward||this.autoForward&&!this.moveState.back?1:0;this.moveVector.x=-this.moveState.left+this.moveState.right,this.moveVector.y=-this.moveState.down+this.moveState.up,this.moveVector.z=-e+this.moveState.back},this.updateRotationVector=function(){this.rotationVector.x=-this.moveState.pitchDown+this.moveState.pitchUp,this.rotationVector.y=-this.moveState.yawRight+this.moveState.yawLeft,this.rotationVector.z=-this.moveState.rollRight+this.moveState.rollLeft},this.getContainerDimensions=function(){return this.domElement==document?{size:[window.innerWidth,window.innerHeight],offset:[0,0]}:{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}},this.dispose=function(){this.domElement.removeEventListener("contextmenu",r),this.domElement.removeEventListener("mousedown",p),this.domElement.removeEventListener("mousemove",l),this.domElement.removeEventListener("mouseup",c),window.removeEventListener("keydown",u),window.removeEventListener("keyup",m)};const l=this.mousemove.bind(this),p=this.mousedown.bind(this),c=this.mouseup.bind(this),u=this.keydown.bind(this),m=this.keyup.bind(this);this.domElement.addEventListener("contextmenu",r),this.domElement.addEventListener("mousemove",l),this.domElement.addEventListener("mousedown",p),this.domElement.addEventListener("mouseup",c),window.addEventListener("keydown",u),window.addEventListener("keyup",m),this.updateMovementVector(),this.updateRotationVector()}}},"../node_modules/three/examples/jsm/controls/OrbitControls.js":(e,i,d)=>{d.r(i),d.d(i,{MapControls:()=>f,OrbitControls:()=>m});var l=d("../node_modules/three/build/three.module.js");const p={type:"change"},c={type:"start"},u={type:"end"};class m extends l.EventDispatcher{constructor(e,i){function d(){return 2*s/60/60*J.autoRotateSpeed}function m(){return a(.95,J.zoomSpeed)}function f(e){ae.theta-=e}function g(e){ae.phi-=e}function h(e){J.object.isPerspectiveCamera?re/=e:J.object.isOrthographicCamera?(J.object.zoom=n(J.minZoom,o(J.maxZoom,J.object.zoom*e)),J.object.updateProjectionMatrix(),ne=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),J.enableZoom=!1)}function y(e){J.object.isPerspectiveCamera?re*=e:J.object.isOrthographicCamera?(J.object.zoom=n(J.minZoom,o(J.maxZoom,J.object.zoom/e)),J.object.updateProjectionMatrix(),ne=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),J.enableZoom=!1)}function x(e){oe.set(e.clientX,e.clientY)}function v(e){ue.set(e.clientX,e.clientY)}function _(e){le.set(e.clientX,e.clientY)}function b(e){se.set(e.clientX,e.clientY),de.subVectors(se,oe).multiplyScalar(J.rotateSpeed);const t=J.domElement;f(2*s*de.x/t.clientHeight),g(2*s*de.y/t.clientHeight),oe.copy(se),J.update()}function S(e){me.set(e.clientX,e.clientY),fe.subVectors(me,ue),0<fe.y?h(m()):0>fe.y&&y(m()),ue.copy(me),J.update()}function M(e){pe.set(e.clientX,e.clientY),ce.subVectors(pe,le).multiplyScalar(J.panSpeed),ve(ce.x,ce.y),le.copy(pe),J.update()}function T(e){0>e.deltaY?y(m()):0<e.deltaY&&h(m()),J.update()}function E(e){let t=!1;switch(e.code){case J.keys.UP:ve(0,J.keyPanSpeed),t=!0;break;case J.keys.BOTTOM:ve(0,-J.keyPanSpeed),t=!0;break;case J.keys.LEFT:ve(J.keyPanSpeed,0),t=!0;break;case J.keys.RIGHT:ve(-J.keyPanSpeed,0),t=!0;}t&&(e.preventDefault(),J.update())}function w(){if(1===ge.length)oe.set(ge[0].pageX,ge[0].pageY);else{const e=.5*(ge[0].pageX+ge[1].pageX),t=.5*(ge[0].pageY+ge[1].pageY);oe.set(e,t)}}function A(){if(1===ge.length)le.set(ge[0].pageX,ge[0].pageY);else{const e=.5*(ge[0].pageX+ge[1].pageX),t=.5*(ge[0].pageY+ge[1].pageY);le.set(e,t)}}function R(){const e=ge[0].pageX-ge[1].pageX,t=ge[0].pageY-ge[1].pageY,a=r(e*e+t*t);ue.set(0,a)}function L(){J.enableZoom&&R(),J.enablePan&&A()}function C(){J.enableZoom&&R(),J.enableRotate&&w()}function P(e){if(1==ge.length)se.set(e.pageX,e.pageY);else{const t=K(e),a=.5*(e.pageX+t.x),r=.5*(e.pageY+t.y);se.set(a,r)}de.subVectors(se,oe).multiplyScalar(J.rotateSpeed);const t=J.domElement;f(2*s*de.x/t.clientHeight),g(2*s*de.y/t.clientHeight),oe.copy(se)}function D(e){if(1===ge.length)pe.set(e.pageX,e.pageY);else{const t=K(e),a=.5*(e.pageX+t.x),r=.5*(e.pageY+t.y);pe.set(a,r)}ce.subVectors(pe,le).multiplyScalar(J.panSpeed),ve(ce.x,ce.y),le.copy(pe)}function I(e){const t=K(e),i=e.pageX-t.x,n=e.pageY-t.y,o=r(i*i+n*n);me.set(0,o),fe.set(0,a(me.y/ue.y,J.zoomSpeed)),h(fe.y),ue.copy(me)}function z(e){J.enableZoom&&I(e),J.enablePan&&D(e)}function B(e){J.enableZoom&&I(e),J.enableRotate&&P(e)}function N(e){!1===J.enabled||(0===ge.length&&(J.domElement.setPointerCapture(e.pointerId),J.domElement.addEventListener("pointermove",U),J.domElement.addEventListener("pointerup",H)),X(e),"touch"===e.pointerType?W(e):F(e))}function U(e){!1===J.enabled||("touch"===e.pointerType?j(e):G(e))}function H(e){Y(e),0===ge.length&&(J.domElement.releasePointerCapture(e.pointerId),J.domElement.removeEventListener("pointermove",U),J.domElement.removeEventListener("pointerup",H)),J.dispatchEvent(u),$=Q.NONE}function O(e){Y(e)}function F(e){let t;switch(e.button){case 0:t=J.mouseButtons.LEFT;break;case 1:t=J.mouseButtons.MIDDLE;break;case 2:t=J.mouseButtons.RIGHT;break;default:t=-1;}switch(t){case l.MOUSE.DOLLY:if(!1===J.enableZoom)return;v(e),$=Q.DOLLY;break;case l.MOUSE.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===J.enablePan)return;_(e),$=Q.PAN}else{if(!1===J.enableRotate)return;x(e),$=Q.ROTATE}break;case l.MOUSE.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===J.enableRotate)return;x(e),$=Q.ROTATE}else{if(!1===J.enablePan)return;_(e),$=Q.PAN}break;default:$=Q.NONE;}$!==Q.NONE&&J.dispatchEvent(c)}function G(e){if(!1!==J.enabled)switch($){case Q.ROTATE:if(!1===J.enableRotate)return;b(e);break;case Q.DOLLY:if(!1===J.enableZoom)return;S(e);break;case Q.PAN:if(!1===J.enablePan)return;M(e);}}function V(e){!1===J.enabled||!1===J.enableZoom||$!==Q.NONE||(e.preventDefault(),J.dispatchEvent(c),T(e),J.dispatchEvent(u))}function k(e){!1===J.enabled||!1===J.enablePan||E(e)}function W(e){switch(Z(e),ge.length){case 1:switch(J.touches.ONE){case l.TOUCH.ROTATE:if(!1===J.enableRotate)return;w(),$=Q.TOUCH_ROTATE;break;case l.TOUCH.PAN:if(!1===J.enablePan)return;A(),$=Q.TOUCH_PAN;break;default:$=Q.NONE;}break;case 2:switch(J.touches.TWO){case l.TOUCH.DOLLY_PAN:if(!1===J.enableZoom&&!1===J.enablePan)return;L(),$=Q.TOUCH_DOLLY_PAN;break;case l.TOUCH.DOLLY_ROTATE:if(!1===J.enableZoom&&!1===J.enableRotate)return;C(),$=Q.TOUCH_DOLLY_ROTATE;break;default:$=Q.NONE;}break;default:$=Q.NONE;}$!==Q.NONE&&J.dispatchEvent(c)}function j(e){switch(Z(e),$){case Q.TOUCH_ROTATE:if(!1===J.enableRotate)return;P(e),J.update();break;case Q.TOUCH_PAN:if(!1===J.enablePan)return;D(e),J.update();break;case Q.TOUCH_DOLLY_PAN:if(!1===J.enableZoom&&!1===J.enablePan)return;z(e),J.update();break;case Q.TOUCH_DOLLY_ROTATE:if(!1===J.enableZoom&&!1===J.enableRotate)return;B(e),J.update();break;default:$=Q.NONE;}}function q(e){!1===J.enabled||e.preventDefault()}function X(e){ge.push(e)}function Y(e){delete he[e.pointerId];for(let t=0;t<ge.length;t++)if(ge[t].pointerId==e.pointerId)return void ge.splice(t,1)}function Z(e){let t=he[e.pointerId];void 0===t&&(t=new l.Vector2,he[e.pointerId]=t),t.set(e.pageX,e.pageY)}function K(e){const t=e.pointerId===ge[0].pointerId?ge[1]:ge[0];return he[t.pointerId]}super(),void 0===i&&console.warn("THREE.OrbitControls: The second parameter \"domElement\" is now mandatory."),i===document&&console.error("THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead."),this.object=e,this.domElement=i,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new l.Vector3,this.minDistance=0,this.maxDistance=Infinity,this.minZoom=0,this.maxZoom=Infinity,this.minPolarAngle=0,this.maxPolarAngle=s,this.minAzimuthAngle=-Infinity,this.maxAzimuthAngle=Infinity,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:l.MOUSE.ROTATE,MIDDLE:l.MOUSE.DOLLY,RIGHT:l.MOUSE.PAN},this.touches={ONE:l.TOUCH.ROTATE,TWO:l.TOUCH.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return te.phi},this.getAzimuthalAngle=function(){return te.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(e){e.addEventListener("keydown",k),this._domElementKeyEvents=e},this.saveState=function(){J.target0.copy(J.target),J.position0.copy(J.object.position),J.zoom0=J.object.zoom},this.reset=function(){J.target.copy(J.target0),J.object.position.copy(J.position0),J.object.zoom=J.zoom0,J.object.updateProjectionMatrix(),J.dispatchEvent(p),J.update(),$=Q.NONE},this.update=function(){const t=new l.Vector3,a=new l.Quaternion().setFromUnitVectors(e.up,new l.Vector3(0,1,0)),r=a.clone().invert(),i=new l.Vector3,c=new l.Quaternion,u=2*s;return function(){const e=J.object.position;t.copy(e).sub(J.target),t.applyQuaternion(a),te.setFromVector3(t),J.autoRotate&&$===Q.NONE&&f(d()),J.enableDamping?(te.theta+=ae.theta*J.dampingFactor,te.phi+=ae.phi*J.dampingFactor):(te.theta+=ae.theta,te.phi+=ae.phi);let l=J.minAzimuthAngle,m=J.maxAzimuthAngle;return isFinite(l)&&isFinite(m)&&(l<-s?l+=u:l>s&&(l-=u),m<-s?m+=u:m>s&&(m-=u),te.theta=l<=m?n(l,o(m,te.theta)):te.theta>(l+m)/2?n(l,te.theta):o(m,te.theta)),te.phi=n(J.minPolarAngle,o(J.maxPolarAngle,te.phi)),te.makeSafe(),te.radius*=re,te.radius=n(J.minDistance,o(J.maxDistance,te.radius)),!0===J.enableDamping?J.target.addScaledVector(ie,J.dampingFactor):J.target.add(ie),t.setFromSpherical(te),t.applyQuaternion(r),e.copy(J.target).add(t),J.object.lookAt(J.target),!0===J.enableDamping?(ae.theta*=1-J.dampingFactor,ae.phi*=1-J.dampingFactor,ie.multiplyScalar(1-J.dampingFactor)):(ae.set(0,0,0),ie.set(0,0,0)),re=1,!!(ne||i.distanceToSquared(J.object.position)>ee||8*(1-c.dot(J.object.quaternion))>ee)&&(J.dispatchEvent(p),i.copy(J.object.position),c.copy(J.object.quaternion),ne=!1,!0)}}(),this.dispose=function(){J.domElement.removeEventListener("contextmenu",q),J.domElement.removeEventListener("pointerdown",N),J.domElement.removeEventListener("pointercancel",O),J.domElement.removeEventListener("wheel",V),J.domElement.removeEventListener("pointermove",U),J.domElement.removeEventListener("pointerup",H),null!==J._domElementKeyEvents&&J._domElementKeyEvents.removeEventListener("keydown",k)};const J=this,Q={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let $=Q.NONE;const ee=1e-6,te=new l.Spherical,ae=new l.Spherical;let re=1;const ie=new l.Vector3;let ne=!1;const oe=new l.Vector2,se=new l.Vector2,de=new l.Vector2,le=new l.Vector2,pe=new l.Vector2,ce=new l.Vector2,ue=new l.Vector2,me=new l.Vector2,fe=new l.Vector2,ge=[],he={},ye=function(){const e=new l.Vector3;return function(t,a){e.setFromMatrixColumn(a,0),e.multiplyScalar(-t),ie.add(e)}}(),xe=function(){const e=new l.Vector3;return function(t,a){!0===J.screenSpacePanning?e.setFromMatrixColumn(a,1):(e.setFromMatrixColumn(a,0),e.crossVectors(J.object.up,e)),e.multiplyScalar(t),ie.add(e)}}(),ve=function(){const e=new l.Vector3;return function(a,r){const i=J.domElement;if(J.object.isPerspectiveCamera){const n=J.object.position;e.copy(n).sub(J.target);let o=e.length();o*=t(J.object.fov/2*s/180),ye(2*a*o/i.clientHeight,J.object.matrix),xe(2*r*o/i.clientHeight,J.object.matrix)}else J.object.isOrthographicCamera?(ye(a*(J.object.right-J.object.left)/J.object.zoom/i.clientWidth,J.object.matrix),xe(r*(J.object.top-J.object.bottom)/J.object.zoom/i.clientHeight,J.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),J.enablePan=!1)}}();J.domElement.addEventListener("contextmenu",q),J.domElement.addEventListener("pointerdown",N),J.domElement.addEventListener("pointercancel",O),J.domElement.addEventListener("wheel",V,{passive:!1}),this.update()}}class f extends m{constructor(e,t){super(e,t),this.screenSpacePanning=!1,this.mouseButtons.LEFT=l.MOUSE.PAN,this.mouseButtons.RIGHT=l.MOUSE.ROTATE,this.touches.ONE=l.TOUCH.PAN,this.touches.TWO=l.TOUCH.DOLLY_ROTATE}}}},d={};(()=>{e.d=(t,a)=>{for(var r in a)e.o(a,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:a[r]})}})(),(()=>{e.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)})(),(()=>{e.r=(e)=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}})();var l={};(()=>{var t={};e.r(t),e.d(t,{camera:()=>n,canvas:()=>l,controls:()=>p,renderer:()=>c,scene:()=>d,sizes:()=>u});var a=e("../node_modules/three/build/three.module.js"),r=e("../node_modules/three/examples/jsm/controls/OrbitControls.js"),i=e("../node_modules/three/examples/jsm/controls/FlyControls.js"),n,d,l,p,c,u;l=document.querySelector("canvas.webgl"),console.log(l),d=new a.Scene;var m=[{hostname:"hobgoblin",ipv4:"192.168.1.154",notUnknown:!0,group:"",geometry:2,material:5889345,position:1},{hostname:"witch-machine",ipv4:"192.168.1.174",notUnknown:!0,group:"",geometry:2,material:16711682,position:3},{hostname:"constant",ipv4:"192.168.1.164",notUnknown:!1,group:"",geometry:2,material:4316613,position:5},{hostname:"centrum",ipv4:"192.168.1.164",notUnknown:!1,group:"",geometry:2,material:6042715,position:7}],f=function(){for(var e=0;e<m.length;e++){var t=new a.SphereGeometry(m[e].geometry,32,16),r=new a.MeshBasicMaterial({color:m[e].material,wireframe:m[e].notUnknown}),i=new a.Mesh(t,r);i.name=m[e].hostname,i.position.set(m[e].position*m[e].geometry,0,0),d.add(i)}};f();var g=[];d.traverse(function(e){"Mesh"===e.type&&g.push(e)});var h=g[g.length-1].position.x;u={width:window.innerWidth,height:window.innerHeight},n=new a.PerspectiveCamera(75,u.width/u.height),n.position.z=10+h,n.position.x=6,d.add(n),p=new i.FlyControls(n),p.movementSpeed=10,p.rollSpeed=s/24,p.autoForward=!1,p.dragToLook=!0,window.addEventListener("dblclick",function(){var e=document.fullscreenElement||document.webkitFullscreenElement;e?document.exitFullscreen?document.exitFullscreen():document.webkitExitFullscreen&&document.webkitExitFullscreen():l.requestFullscreen?l.requestFullscreen():l.webkitRequestFullscreen&&l.webkitRequestFullscreen()}),c=new a.WebGLRenderer({canvas:l}),c.setSize(u.width,u.height),c.setPixelRatio(o(window.devicePixelRatio,2)),c.render(d,n);var y=function e(){for(var t=0;t<g.length;t++)g[t].rotation.y+=.005;c.render(d,n),p.update(.01),window.requestAnimationFrame(e)};y()})(),(()=>{e.r(l)})()})();
//# sourceMappingURL=main.js.map